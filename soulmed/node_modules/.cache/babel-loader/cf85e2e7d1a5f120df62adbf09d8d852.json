{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\n\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport { Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calendar = ({ ...props\n}) => {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  useEffect(() => {\n    setEvents(props.events);\n  }, [props.events]);\n\n  const appointmentModal = /*#__PURE__*/_jsxDEV(Modal, {\n    show: showAppointmentModal,\n    onHide: () => setShowAppointmentModal(false),\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: \"Add Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"subtitle\",\n            children: \"It's quick and easy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Appoitment description\",\n          className: \"input\",\n          onChange: e => setAppointmentText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          defaultValue: startDate,\n          type: \"datetime-local\",\n          onChange: e => setDatetime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAdded(true),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n\n  const handleDateSelect = selectInfo => {\n    if (added) {\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (events[events.length - 1].title) {\n        calendarApi.addEvent({\n          id: 1,\n          title: appointmentText,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr\n        });\n      }\n    }\n  };\n\n  const handleEventClick = clickInfo => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n    }\n  };\n\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    filledIn: false,\n    practiceTimes: []\n  });\n\n  let calendar = /*#__PURE__*/_jsxDEV(FullCalendar, {\n    headerToolbar: {\n      left: \"prev,next,today,myCustomButton\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n    },\n    editable: true,\n    initialView: \"dayGridMonth\",\n    selectable: true,\n    select: handleDateSelect,\n    selectMirror: true,\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    weekends: false,\n    events: events,\n    eventClick: handleEventClick,\n    customButtons: {\n      myCustomButton: {\n        text: \"Book Appointment\",\n        click: function () {}\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: calendar\n  }, void 0, false);\n};\n\n_s(Calendar, \"eHaeRmTtryqpRZh3a+V39rFFDos=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/calendar.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","Calendar","props","events","setEvents","newEvent","setNewEvent","appointmentText","setAppointmentText","startDate","setStartDate","Date","datetime","setDatetime","added","setAdded","showAppointmentModal","setShowAppointmentModal","appointmentModal","e","target","value","handleDateSelect","selectInfo","calendarApi","view","calendar","unselect","length","title","addEvent","id","start","startStr","end","endStr","handleEventClick","clickInfo","window","confirm","event","remove","data","setData","allFavs","favObj","filledIn","practiceTimes","left","center","right","myCustomButton","text","click"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport { Modal } from \"react-bootstrap\";\n\nconst Calendar = ({ ...props }) => {\n  const [events, setEvents] = useState([]);\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n\n  useEffect(() => {\n    setEvents(props.events);\n  }, [props.events]);\n\n  const appointmentModal = (\n    <Modal\n      show={showAppointmentModal}\n      onHide={() => setShowAppointmentModal(false)}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          <div className=\"signup-title\">\n            <span className=\"title\">Add Appointment</span> <br />\n            <span className=\"subtitle\">It's quick and easy.</span>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"d-flex flex-column\">\n          <input\n            type=\"text\"\n            placeholder=\"Appoitment description\"\n            className=\"input\"\n            onChange={(e) => setAppointmentText(e.target.value)}\n          />\n          <input\n            className=\"input\"\n            defaultValue={startDate}\n            type=\"datetime-local\"\n            onChange={(e) => setDatetime(e.target.value)}\n          />\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <button onClick={() => setAdded(true)}>Add</button>\n      </Modal.Footer>\n    </Modal>\n  );\n\n  const handleDateSelect = (selectInfo) => {\n    if (added) {\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n      if (events[events.length - 1].title) {\n        calendarApi.addEvent({\n          id: 1,\n          title: appointmentText,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n        });\n      }\n    }\n  };\n\n  \n\n  const handleEventClick = (clickInfo) => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  const [data, setData] = useState({\n    allFavs:[],\n    favObj:{},\n    start:\"\",\n    end:\"\",\n    filledIn:false,\n    practiceTimes:[]\n  })\n\n  let calendar = (\n    <FullCalendar\n      headerToolbar={{\n        left: \"prev,next,today,myCustomButton\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n      }}\n      editable={true}\n      initialView=\"dayGridMonth\"\n      selectable={true}\n      select={handleDateSelect}\n      selectMirror={true}\n      plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n      weekends={false}\n      events={events}\n      eventClick={handleEventClick}\n      customButtons={{\n        myCustomButton: {\n          text: \"Book Appointment\",\n          click: function () {\n           \n          },\n        },\n      }}\n    />\n  );\n\n  return <>\n  \n  {calendar}</>;\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}