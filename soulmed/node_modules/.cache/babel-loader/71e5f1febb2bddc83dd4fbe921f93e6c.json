{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/price-range.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX = \"max\";\nconst AUTO = \"auto\";\n\nfunction strPadLeft(string, pad, length) {\n  return (new Array(length + 1).join(pad) + string).slice(-length);\n}\n\nconst INNER_TRACK_POSITION = {\n  val: 'left',\n  val2: \"right\"\n};\n\nclass RangeSlider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateOffsets = (value, maxValue, thumb) => {\n      // slider track width\n      const width = this.slider.current.clientWidth; // thumb width aka slider knob\n\n      let thumbWidth = this.thumbs[thumb].current.offsetWidth;\n      const thumbOffset = width * (value / maxValue) - value / maxValue * thumbWidth;\n      let updatedInnerTrackPos = thumbOffset + thumbWidth / 2;\n\n      if (thumb === \"val2\") {\n        updatedInnerTrackPos = width - updatedInnerTrackPos;\n      } // console.log('updatedI',thumb, updatedInnerTrackPos, width);\n      // console.log('updatedPost ',[INNER_TRACK_POSITION[thumb]],updatedInnerTrackPos)\n\n\n      this.setState(prevState => ({\n        thumbOffsets: { ...prevState.thumbOffsets,\n          [thumb]: thumbOffset\n        },\n        innerTrackPos: { ...prevState.innerTrackPos,\n          [INNER_TRACK_POSITION[thumb]]: updatedInnerTrackPos\n        }\n      }));\n    };\n\n    this.componentDidMount = () => {\n      if (this.track.current) {\n        this.track.current.addEventListener(\"mousedown\", this.handleMouseDown);\n        this.track.current.addEventListener(\"mousemove\", this.handleMouseMove);\n        this.track.current.addEventListener(\"mouseup\", this.handleMouseUp);\n      }\n\n      if (this.slider.current) {\n        this.ratio = parseInt(this.props.maxValue, 10) / this.slider.current.clientWidth;\n      }\n\n      const {\n        maxValue,\n        dualThumbs\n      } = this.props;\n      this.calculateOffsets(0, maxValue, \"val\");\n      if (dualThumbs) this.calculateOffsets(maxValue, maxValue, \"val2\"); //\n    };\n\n    this.handleMouseDown = e => {\n      this.dragging = true;\n      this.prevX = e.offsetX;\n      console.log('onMouseDown', this.prevX);\n    };\n\n    this.handleMouseMove = e => {\n      e.preventDefault();\n      console.log('move', e.clientX, e.offsetX);\n\n      if (this.dragging) {\n        const deltaX = e.offsetX - this.prevX;\n        console.log('is dragging', deltaX, this.prevX, e.offsetX);\n\n        if (Math.abs(deltaX) > this.ratio) {\n          const {\n            val,\n            val2\n          } = this.props;\n          const deltaVal = Math.floor(this.ratio * deltaX);\n          this.prevX = e.offsetX;\n          this.props.onSlide(val + deltaVal, val2 + deltaVal);\n        }\n      }\n    };\n\n    this.handleMouseUp = e => {\n      this.dragging = false;\n    };\n\n    this.onDurationChange = thumb => e => {\n      const {\n        dualThumbs,\n        maxValue\n      } = this.props;\n      const value = parseInt(e.target.value);\n      const val = parseInt(this.props.val);\n      const val2 = parseInt(this.props.val2);\n\n      if (dualThumbs && (thumb === \"val2\" && value > val || thumb === \"val\" && value < val2)) {\n        this.calculateOffsets(value, maxValue, thumb);\n        this.props.onChange(value, thumb);\n      } else if (!dualThumbs) {\n        this.calculateOffsets(value, maxValue, thumb);\n        this.props.onChange(value, thumb);\n      } // this.calculateOffsets(value, maxValue, thumb);\n      // this.props.onChange(value === `${this.props.maxValue}` ? MAX : value);\n\n    };\n\n    this.formatTime = time => {\n      const minutes = Math.floor(time / 60);\n      const seconds = time % 60;\n      const clockTime = `${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}`;\n      return clockTime;\n    };\n\n    this.state = {\n      innerTrackPos: {\n        left: 0,\n        right: 0\n      },\n      thumbOffsets: {\n        val: 0,\n        val2: 0\n      }\n    };\n    this.slider = /*#__PURE__*/React.createRef();\n    this.thumbs = {\n      val: /*#__PURE__*/React.createRef(),\n      val2: /*#__PURE__*/React.createRef()\n    };\n    this.track = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    const {\n      dualThumbs,\n      val,\n      val2,\n      maxValue,\n      step\n    } = this.props;\n    const {\n      innerTrackPos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input__form-container slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.slider,\n        className: \"range-slider\",\n        type: \"range\",\n        min: \"0\",\n        max: maxValue,\n        step: step,\n        value: val,\n        onChange: this.onDurationChange('val')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), dualThumbs && /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"range-slider\",\n        type: \"range\",\n        min: \"0\",\n        max: maxValue,\n        step: step,\n        value: val2,\n        onChange: this.onDurationChange('val2')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range-slider__track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.track,\n        className: \"range-slider__inner-track\",\n        style: innerTrackPos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range-thumb\",\n        ref: this.thumbs.val,\n        style: {\n          left: this.state.thumbOffsets.val + \"px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-thumb__border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-thumb__circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-thumb__label\",\n          children: [\"Start\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"range-thumb__time-label\",\n            children: this.formatTime(val)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), dualThumbs && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range-thumb\",\n        ref: this.thumbs.val2,\n        style: {\n          left: this.state.thumbOffsets.val2 + \"px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-thumb__border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-thumb__circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-thumb__label\",\n          children: [\"End\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"range-thumb__time-label\",\n            children: this.formatTime(val2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.ratio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this);\n  }\n\n} // right: 300 + 4  - this.state.xOffset \n\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeDuration = (value, thumb) => {\n      this.setState({\n        [thumb]: value\n      });\n    };\n\n    this.onSlide = (val, val2) => {\n      this.setState({\n        val,\n        val2\n      });\n    };\n\n    this.state = {\n      val: 0,\n      val2: 10\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cont-wrap\",\n        children: /*#__PURE__*/_jsxDEV(RangeSlider, {\n          maxValue: 10,\n          onChange: this.onChangeDuration,\n          onSlide: this.onSlide,\n          dualThumbs: true,\n          val: this.state.val,\n          val2: this.state.val2,\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Application;","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/price-range.js"],"names":["React","MAX","AUTO","strPadLeft","string","pad","length","Array","join","slice","INNER_TRACK_POSITION","val","val2","RangeSlider","Component","constructor","props","calculateOffsets","value","maxValue","thumb","width","slider","current","clientWidth","thumbWidth","thumbs","offsetWidth","thumbOffset","updatedInnerTrackPos","setState","prevState","thumbOffsets","innerTrackPos","componentDidMount","track","addEventListener","handleMouseDown","handleMouseMove","handleMouseUp","ratio","parseInt","dualThumbs","e","dragging","prevX","offsetX","console","log","preventDefault","clientX","deltaX","Math","abs","deltaVal","floor","onSlide","onDurationChange","target","onChange","formatTime","time","minutes","seconds","clockTime","state","left","right","createRef","render","step","Application","onChangeDuration"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n\nconst MAX = \"max\";\nconst AUTO = \"auto\";\nfunction strPadLeft(string, pad, length) {\n  return (new Array(length + 1).join(pad)+string).slice(-length);\n}\n\nconst INNER_TRACK_POSITION = {\n  val: 'left',\n  val2: \"right\"\n}\n\nclass RangeSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      innerTrackPos: {\n        left: 0,\n        right: 0,\n      },\n      thumbOffsets: {\n        val: 0,\n        val2: 0,\n      },\n    };\n    this.slider = React.createRef();\n    this.thumbs = {\n      val: React.createRef(),\n      val2: React.createRef()\n    }\n    this.track = React.createRef();\n  }\n  \n  calculateOffsets = (value, maxValue, thumb) => {\n    // slider track width\n    const width = this.slider.current.clientWidth;\n    // thumb width aka slider knob\n    let thumbWidth = this.thumbs[thumb].current.offsetWidth;\n    const thumbOffset = width * (value / maxValue) - (value / maxValue) * thumbWidth;\n    let updatedInnerTrackPos = thumbOffset + (thumbWidth / 2);\n    if (thumb === \"val2\"){\n      updatedInnerTrackPos = width - updatedInnerTrackPos;\n    }\n    // console.log('updatedI',thumb, updatedInnerTrackPos, width);\n    // console.log('updatedPost ',[INNER_TRACK_POSITION[thumb]],updatedInnerTrackPos)\n    this.setState((prevState) => ({\n      thumbOffsets: {\n        ...prevState.thumbOffsets,\n        [thumb]: thumbOffset\n      },\n      innerTrackPos: {\n        ...prevState.innerTrackPos,\n        [INNER_TRACK_POSITION[thumb]]: updatedInnerTrackPos \n      }\n    }));\n  }\n\n  componentDidMount = () => {\n    if (this.track.current){\n      this.track.current.addEventListener(\"mousedown\", this.handleMouseDown);\n      this.track.current.addEventListener(\"mousemove\", this.handleMouseMove);\n      this.track.current.addEventListener(\"mouseup\", this.handleMouseUp);\n    }\n    if (this.slider.current){\n      this.ratio =  parseInt(this.props.maxValue, 10) / this.slider.current.clientWidth;\n    }\n    const { maxValue, dualThumbs} = this.props;\n      this.calculateOffsets(0, maxValue, \"val\");\n      if (dualThumbs) this.calculateOffsets(maxValue, maxValue, \"val2\");\n    //\n  };\n\n  handleMouseDown = (e) => {\n    this.dragging = true;\n    this.prevX = e.offsetX;\n    console.log('onMouseDown', this.prevX);\n  }\n  \n  handleMouseMove = (e) => {\n    e.preventDefault();\n    console.log('move', e.clientX, e.offsetX);\n    if (this.dragging){\n      const deltaX = e.offsetX - this.prevX;\n      console.log('is dragging', deltaX, this.prevX, e.offsetX)\n      if (Math.abs(deltaX) > this.ratio){\n        const {val, val2} = this.props;\n        const deltaVal = Math.floor(this.ratio * deltaX);\n        this.prevX = e.offsetX;\n        \n        this.props.onSlide(val + deltaVal, val2 + deltaVal)\n      }\n    }\n  }\n  \n  handleMouseUp = (e) => {\n    this.dragging = false;\n  }\n\n  onDurationChange = (thumb) => e => {\n    const {dualThumbs, maxValue} = this.props;\n    const value = parseInt(e.target.value);\n    const val = parseInt(this.props.val);\n    const val2 = parseInt(this.props.val2);\n    if (dualThumbs && ((thumb === \"val2\" && value > val) || (thumb === \"val\" && value < val2))){\n      this.calculateOffsets(value, maxValue, thumb);\n      this.props.onChange(value, thumb);\n    } else if (!dualThumbs) {\n      this.calculateOffsets(value, maxValue, thumb);\n      this.props.onChange(value, thumb);\n    }\n    // this.calculateOffsets(value, maxValue, thumb);\n    // this.props.onChange(value === `${this.props.maxValue}` ? MAX : value);\n  };\n\n  formatTime = (time) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    const clockTime = `${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}`;\n    return  clockTime;\n  };\n\n  render() {\n    const {dualThumbs, val, val2, maxValue, step} = this.props;\n    const {innerTrackPos} = this.state;\n    return (\n      \n        <div className=\"input__form-container slider\">\n            <input\n              ref={this.slider}\n              className=\"range-slider\"\n              type=\"range\"\n              min=\"0\"\n              max={maxValue}\n              step={step}\n              value={val}\n              onChange={this.onDurationChange('val')}\n            />\n            {dualThumbs &&\n              <input\n                className=\"range-slider\"\n                type=\"range\"\n                min=\"0\"\n                max={maxValue}\n                step={step}\n                value={val2}\n                onChange={this.onDurationChange('val2')}\n              />\n             }\n            <div className=\"range-slider__track\"/>\n            <div ref={this.track} className=\"range-slider__inner-track\" style={innerTrackPos}/>\n            <div\n              className=\"range-thumb\"\n              ref={this.thumbs.val}\n              style={{left: this.state.thumbOffsets.val + \"px\"}}\n            >\n              <div className=\"range-thumb__border\"></div>\n              <div className=\"range-thumb__circle\"></div>\n              <div className=\"range-thumb__label\">\n                Start\n                <div className=\"range-thumb__time-label\">{this.formatTime(val)}</div>\n              </div>\n            </div>\n            {dualThumbs &&\n              <div\n                className=\"range-thumb\"\n                ref={this.thumbs.val2}\n                style={{left: this.state.thumbOffsets.val2 + \"px\"}}\n              >\n                <div className=\"range-thumb__border\"></div>\n                <div className=\"range-thumb__circle\"></div>\n                <div className=\"range-thumb__label\">\n                  End\n                  <div className=\"range-thumb__time-label\">{this.formatTime(val2)}</div>\n                </div>\n              </div>\n            }\n          <div>{this.ratio}</div>\n        </div>\n\n    );\n  }\n}\n\n\n\n\n\n\n\n// right: 300 + 4  - this.state.xOffset \nclass Application extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      val: 0,\n      val2: 10\n    }\n  }\n  \n  onChangeDuration = (value, thumb) => {\n    this.setState({[thumb]: value})\n  }\n  \n  onSlide = (val, val2) => {\n    this.setState({val, val2})\n  }\n  \n  render(){\n    return(\n      <div className=\"center\">\n        <div className=\"cont-wrap\">\n        <RangeSlider \n          maxValue={10} \n          onChange={this.onChangeDuration}\n          onSlide={this.onSlide}\n          dualThumbs\n          val={this.state.val}\n          val2={this.state.val2}\n          step=\"1\"\n         />\n         </div>\n      </div>\n    )\n  }\n}\n\nexport default Application;\n\n\n"]},"metadata":{},"sourceType":"module"}