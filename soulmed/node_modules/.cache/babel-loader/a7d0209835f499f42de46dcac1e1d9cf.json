{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/dropdown.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDown = ({ ...props\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [shownIndices, setShownIndices] = useState([]);\n  useEffect(() => {\n    if (props.data.length > 0) {\n      setData(props.data);\n    }\n  }, [props.data]);\n  useEffect(() => {\n    if (props.searchText !== \"\") {\n      setShownIndices([]);\n      let list = [];\n      props.data.map((item, i) => {\n        Object.keys(item).map((innerAttr, index) => {\n          if ((item[innerAttr] + \"\").indexOf(props.searchText) >= 0) {\n            list.push(i);\n          }\n        });\n      });\n      setShownIndices(list);\n    }\n  }, [props.searchText]);\n  const [visible, isVisible] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    const checkIfClickedOutside = e => {\n      if (visible && ref.current && !ref.current.contains(e.target)) {\n        isVisible(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\n    };\n  }, [visible]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    onClick: () => isVisible(!visible),\n    className: \"col-4\",\n    children: [props.children, visible && data.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"search-dropdown rounded col-3 d-flex flex-column \",\n      children: data.map((item, index) => {\n        return shownIndices.findIndex(index) >= 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"dropdown-content\",\n          children: item.name\n        }, \"item\" + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDown, \"e2bvvqxOLMhxyXGAyBNsb1RRWf4=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/dropdown.js"],"names":["useState","useEffect","useRef","DropDown","props","data","setData","shownIndices","setShownIndices","length","searchText","list","map","item","i","Object","keys","innerAttr","index","indexOf","push","visible","isVisible","ref","checkIfClickedOutside","e","current","contains","target","document","addEventListener","removeEventListener","children","findIndex","name"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\nconst DropDown = ({ ...props }) => {\n  const [data, setData] = useState([]);\n  const [shownIndices, setShownIndices] = useState([]);\n\n  useEffect(() => {\n    if (props.data.length > 0) {\n      setData(props.data);\n    }\n  }, [props.data]);\n\n  useEffect(() => {\n    if (props.searchText !== \"\") {\n      setShownIndices([]);\n      let list = [];\n      props.data.map((item, i) => {\n        Object.keys(item).map((innerAttr, index) => {\n          if ((item[innerAttr] + \"\").indexOf(props.searchText) >= 0) {\n            list.push(i);\n          }\n        });\n      });\n      setShownIndices(list);\n    }\n  }, [props.searchText]);\n\n  const [visible, isVisible] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    const checkIfClickedOutside = (e) => {\n      if (visible && ref.current && !ref.current.contains(e.target)) {\n        isVisible(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\n    };\n  }, [visible]);\n\n  return (\n    <div ref={ref} onClick={() => isVisible(!visible)} className=\"col-4\">\n      {props.children}\n      {visible && data.length > 0 && (\n        <ul className=\"search-dropdown rounded col-3 d-flex flex-column \">\n          {data.map((item, index) => {\n            return (\n              shownIndices.findIndex(index) >= 0 && (\n                <li key={\"item\" + index} className=\"dropdown-content\">\n                  {item.name}\n                </li>\n              )\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}