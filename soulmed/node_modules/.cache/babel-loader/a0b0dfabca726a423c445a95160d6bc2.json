{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/components/registration-modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport SelectYears from \"../inputs/select-years\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/registration-modal.css\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { util } from \"../public/util\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegistrationModal = ({ ...props\n}) => {\n  _s();\n\n  var _errors$firstName, _errors$lastName, _errors$email, _errors$password, _errors$phone_number, _errors$phone_number2;\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState,\n    watch,\n    control\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const {\n    errors,\n    isDirty,\n    isSubmitting,\n    isValid\n  } = formState;\n  const password = useRef();\n  password.current = watch(\"password\", \"\");\n\n  const onSubmitHandler = data => {\n    console.log({\n      data\n    });\n    reset();\n  };\n\n  const [termsChecked, setTermsChecked] = useState(false);\n  const [showTermsModal, setShowTermsModal] = useState(false);\n  const [showCustomDiv, setShowCustomDiv] = useState(false);\n  const [gender, setGender] = useState(\"\");\n\n  const setUserGender = gender => {\n    setGender(gender);\n    setShowCustomDiv(false);\n  };\n\n  const customHandler = () => {\n    setGender(\"\");\n    setShowCustomDiv(true);\n  };\n\n  const modal = /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    show: showTermsModal,\n    onHide: () => setShowTermsModal(false),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"subtitle\",\n            children: \"It's quick and easy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [modal, /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-title d-flex justify-content-center w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Register Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmitHandler),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group d-flex flex-column w-100\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"First Name\",\n                    className: \"input full-width\",\n                    ...register(\"firstName\", {\n                      pattern: /^[A-Za-z]+$/i,\n                      validate: value => value !== \"\" && util.isValidName(value)\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error\",\n                  children: ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"pattern\" && \"Invalid Format, special characters are not allowed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group d-flex flex-column w-100\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Last Name\",\n                    className: \"input full-width\",\n                    ...register(\"lastName\", {\n                      pattern: /^[A-Za-z]+$/i,\n                      validate: value => value !== \"\" && util.isValidName(value)\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error\",\n                  children: ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"pattern\" && \"Invalid Format, special characters are not allowed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                required: true,\n                className: \"input full-width\",\n                ...register(\"email\", {\n                  pattern: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                  validate: value => value !== \"\" && util.isValidEmail(value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"pattern\" && \"Invalid email format\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"New Password\",\n                className: \"input full-width\",\n                ...register(\"password\", {\n                  pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n                  validate: value => value !== \"\" && util.isValidPassword(value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === \"pattern\" && \"Invalid format, please retype password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                className: \"input full-width\",\n                ...register(\"confirm_password\", {\n                  validate: value => value === password.current || \"The passwords do not match\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.confirm_password && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: errors.confirm_password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              ...register(\"dob\", {\n                validate: value => value !== \"\" && value !== null && new Date() - new Date(value) >= 0\n              }),\n              render: ({\n                field: {\n                  onChange,\n                  value\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"dob full-width\",\n                  onChange: onChange,\n                  required: true,\n                  selected: value,\n                  placeholderText: \"dd/mm/yyy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", { ...register(\"country\", {\n                  validate: value => value !== \"\"\n                }),\n                required: true,\n                className: \"w-100\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  selected: true,\n                  value: \"\",\n                  children: \"Select your country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Lebanon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"US\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"France\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.country && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Select a country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"input\",\n                  disabled: true,\n                  value: \"+961\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Phone Number\",\n                  className: \"input full-width\",\n                  ...register(\"phone_number\", {\n                    pattern: /^[0-9]*$/,\n                    validate: value => value !== \"\" && util.isValidPhoneNumber(value)\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: ((_errors$phone_number = errors.phone_number) === null || _errors$phone_number === void 0 ? void 0 : _errors$phone_number.type) === \"pattern\" && \"Invalid format\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"gender\",\n                    value: \"male\",\n                    onClick: () => setUserGender(\"male\"),\n                    ...register(\"gender\", {\n                      validate: value => gender !== \"\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"gender\",\n                    value: \"female\",\n                    onClick: () => setUserGender('female'),\n                    ...register(\"gender\", {\n                      validate: value => gender !== \"\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    onClick: () => customHandler(),\n                    type: \"radio\",\n                    name: \"gender\",\n                    value: \"custom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Custom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), showCustomDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-col\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    onChange: () => setGender(\"custom\"),\n                    disabled: true,\n                    selected: true,\n                    children: \"Select yout pronoun\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"She: \\\"Wish her a happy birthday!\\\"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"He: \\\"Wish him a happy birthday!\\\"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"They: \\\"Wish them a happy birthday!\\\"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Your pronoun is visible to everyone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 26\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input full-width\",\n                  placeholder: \"Gender (optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: ((_errors$phone_number2 = errors.phone_number) === null || _errors$phone_number2 === void 0 ? void 0 : _errors$phone_number2.type) === \"pattern\" && \"Invalid format\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column justify-items-center w-100 p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center justify-content-center w-full p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  value: \"terms_and_conditions\",\n                  className: classNames(\"check\", {}),\n                  onClick: e => setTermsChecked(e.target.checked),\n                  ...register(\"terms_and_conditions\", {\n                    validate: value => termsChecked === true\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"ms-2\",\n                  children: [\"I agree with the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#\",\n                    onClick: () => setShowTermsModal(true),\n                    children: [\" \", \"terms and condition\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group flex-column w-full\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center justify-content-center w-full\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    className: \"check\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"ms-2\",\n                    children: [\"I want to receive \", /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"#\",\n                      children: \" the new letter \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"signup-btn d-flex justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"btn\",\n                  type: \"submit\",\n                  disabled: !isDirty || !isValid,\n                  value: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RegistrationModal, \"Nhd5VKws+K5WDHCdCAyhdSRvdPc=\", false, function () {\n  return [useForm];\n});\n\n_c = RegistrationModal;\nexport default RegistrationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationModal\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/components/registration-modal.js"],"names":["React","useState","useRef","Modal","SelectYears","useForm","Controller","DatePicker","yupResolver","yup","util","classNames","RegistrationModal","props","register","handleSubmit","reset","formState","watch","control","mode","errors","isDirty","isSubmitting","isValid","password","current","onSubmitHandler","data","console","log","termsChecked","setTermsChecked","showTermsModal","setShowTermsModal","showCustomDiv","setShowCustomDiv","gender","setGender","setUserGender","customHandler","modal","pattern","validate","value","isValidName","firstName","type","lastName","isValidEmail","email","isValidPassword","confirm_password","message","Date","field","onChange","country","isValidPhoneNumber","phone_number","e","target","checked"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport SelectYears from \"../inputs/select-years\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/registration-modal.css\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { util } from \"../public/util\";\nimport classNames from \"classnames\";\n\nconst RegistrationModal = ({ ...props }) => {\n  const { register, handleSubmit, reset, formState, watch, control } = useForm({\n    mode: \"onChange\",\n  });\n  const { errors, isDirty, isSubmitting, isValid } = formState;\n  const password = useRef();\n  password.current = watch(\"password\", \"\");\n\n  const onSubmitHandler = (data) => {\n    console.log({ data });\n\n    reset();\n  };\n\n  const [termsChecked, setTermsChecked] = useState(false);\n  const [showTermsModal, setShowTermsModal] = useState(false);\n  const [showCustomDiv, setShowCustomDiv] = useState(false);\n  const [gender, setGender] = useState(\"\");\n  const setUserGender = (gender) => {\n    setGender(gender);\n    setShowCustomDiv(false);\n  }\n  const customHandler = () => {\n    setGender(\"\");\n    setShowCustomDiv(true);\n  }\n  const modal = (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={showTermsModal}\n      onHide={() => setShowTermsModal(false)}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          <div className=\"signup-title\">\n            <span className=\"title\">Sign Up</span> <br />\n            <span className=\"subtitle\">It's quick and easy.</span>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body></Modal.Body>\n    </Modal>\n  );\n\n  return (\n    <>\n      {modal}\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter \">\n            <div className=\"signup-title d-flex justify-content-center w-100\">\n              <span className=\"title\">Register Now</span> <br />\n            </div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"signup-form\">\n            <form onSubmit={handleSubmit(onSubmitHandler)}>\n              <div className=\"form-group d-flex justify-content-between\">\n                {/* <div className=\"flex-column d-flex\">\n                <select\n                  placeholder=\"prefix\"\n                  {...register(\"prefix\", {\n                    validate: (value) => value !== \"\",\n                  })}\n                >\n                  <option value=\"\" selected disabled>\n                    Prefix\n                  </option>\n                  <option>Mr.</option>\n                  <option>Ms.</option>\n                  <option>Mrs.</option>\n                  <option>Dr.</option>\n                  <option>Prof.</option>\n                </select>\n                <div className=\"error\">\n                  {errors.prefix && <p>Select a prefix</p>}\n                </div>\n                </div>*/}\n\n                <div className=\"form-group d-flex flex-column w-100\">\n                  <div className=\"d-flex\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                      className=\"input full-width\"\n                      {...register(\"firstName\", {\n                        pattern: /^[A-Za-z]+$/i,\n\n                        validate: (value) =>\n                          value !== \"\" && util.isValidName(value),\n                      })}\n                    />\n                  </div>\n                  <div className=\"error\">\n                    {errors.firstName?.type === \"pattern\" &&\n                      \"Invalid Format, special characters are not allowed\"}\n                  </div>\n                </div>\n\n                <div className=\"form-group d-flex flex-column w-100\">\n                  <div className=\"d-flex\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                      className=\"input full-width\"\n                      {...register(\"lastName\", {\n                        pattern: /^[A-Za-z]+$/i,\n\n                        validate: (value) =>\n                          value !== \"\" && util.isValidName(value),\n                      })}\n                    />\n                  </div>\n                  <div className=\"error\">\n                    {errors.lastName?.type === \"pattern\" &&\n                      \"Invalid Format, special characters are not allowed\"}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group d-flex flex-column\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  required\n                  className=\"input full-width\"\n                  {...register(\"email\", {\n                    pattern: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                    validate: (value) =>\n                      value !== \"\" && util.isValidEmail(value),\n                  })}\n                />\n                <div className=\"error\">\n                  {errors.email?.type === \"pattern\" && \"Invalid email format\"}\n                </div>\n              </div>\n\n              <div className=\"form-group d-flex flex-column\">\n                <input\n                  type=\"text\"\n                  placeholder=\"New Password\"\n                  className=\"input full-width\"\n                  {...register(\"password\", {\n                    pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n                    validate: (value) =>\n                      value !== \"\" && util.isValidPassword(value),\n                  })}\n                />\n                <div className=\"error\">\n                  {errors.password?.type === \"pattern\" &&\n                    \"Invalid format, please retype password\"}\n                </div>\n              </div>\n\n              <div className=\"form-group d-flex flex-column\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  className=\"input full-width\"\n                  {...register(\"confirm_password\", {\n                    validate: (value) =>\n                      value === password.current ||\n                      \"The passwords do not match\",\n                  })}\n                />\n                <div className=\"error\">\n                  {errors.confirm_password && (\n                    <p>{errors.confirm_password.message}</p>\n                  )}\n                </div>\n              </div>\n\n              <Controller\n                control={control}\n                {...register(\"dob\", {\n                  validate: (value) =>\n                    value !== \"\" &&\n                    value !== null &&\n                    new Date() - new Date(value) >= 0,\n                })}\n                render={({ field: { onChange, value } }) => {\n                  return (\n                    <DatePicker\n                      className=\"dob full-width\"\n                      onChange={onChange}\n                      required\n                      selected={value}\n                      placeholderText=\"dd/mm/yyy\"\n                    />\n                  );\n                }}\n              />\n\n              <div className=\"form-group d-flex flex-column\">\n                <select\n                  {...register(\"country\", {\n                    validate: (value) => value !== \"\",\n                  })}\n                  required\n                  className=\"w-100\"\n                >\n                  <option disabled selected value=\"\">\n                    Select your country\n                  </option>\n                  <option>Lebanon</option>\n                  <option>US</option>\n                  <option>France</option>\n                </select>\n                <div className=\"error\">\n                  {errors.country && <p>Select a country</p>}\n                </div>\n              </div>\n\n              <div className=\"form-group d-flex flex-column\">\n                <div className=\"d-flex\">\n                  <input type=\"text\" className=\"input\" disabled value=\"+961\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Phone Number\"\n                    className=\"input full-width\"\n                    {...register(\"phone_number\", {\n                      pattern: /^[0-9]*$/,\n                      validate: (value) =>\n                        value !== \"\" && util.isValidPhoneNumber(value),\n                    })}\n                  />\n                </div>\n                <div className=\"error\">\n                  {errors.phone_number?.type === \"pattern\" && \"Invalid format\"}\n                </div>\n              </div>\n\n              <div className=\"form-group flex-column\">\n                <span>Gender</span>\n                <div className=\"d-flex\">\n                  <div className=\"form-group form-check\">\n                    <input\n                      type=\"radio\"\n                      name=\"gender\"\n                      value=\"male\"\n                      onClick={() => setUserGender(\"male\")}\n                      {...register(\"gender\", {\n                        validate: (value) => gender !== \"\",\n                      })}\n                    />\n                    <label>Male</label>\n                  </div>\n                  <div className=\"form-group form-check\">\n                    <input\n                      type=\"radio\"\n                      name=\"gender\"\n                      value=\"female\"\n                      onClick={() => setUserGender('female')}\n                      {...register(\"gender\", {\n                        validate: (value) => gender !== \"\",\n                      })}\n                    />\n                    <label>Female</label>\n                  </div>\n                  <div className=\"form-group form-check\">\n                    <input\n                      onClick={() => customHandler()}\n                      type=\"radio\"\n                      name=\"gender\"\n                      value=\"custom\"\n                    />\n                    <label>Custom</label>\n                  </div>\n                </div>\n                {showCustomDiv && (\n                  <div className=\"flex-col\">\n                    <select>\n                      <option onChange={() => setGender(\"custom\")} disabled selected>\n                        Select yout pronoun\n                      </option>\n                      <option>She: \"Wish her a happy birthday!\"</option>\n                      <option>He: \"Wish him a happy birthday!\"</option>\n                      <option>They: \"Wish them a happy birthday!\"</option>\n                    </select>\n                    <label>Your pronoun is visible to everyone</label>\n                    <br/><br/>\n                    <input\n                      className=\"input full-width\"\n                      placeholder=\"Gender (optional)\"\n                    />\n                  </div>\n                )}\n\n                <div className=\"error\">\n                  {errors.phone_number?.type === \"pattern\" && \"Invalid format\"}\n                </div>\n              </div>\n\n              <br />\n              <div className=\"d-flex flex-column justify-items-center w-100 p-4\">\n                <div className=\"d-flex align-items-center justify-content-center w-full p-3\">\n                  <input\n                    type=\"checkbox\"\n                    value=\"terms_and_conditions\"\n                    className={classNames(\"check\", {})}\n                    onClick={(e) => setTermsChecked(e.target.checked)}\n                    {...register(\"terms_and_conditions\", {\n                      validate: (value) => termsChecked === true,\n                    })}\n                  />\n                  <label className=\"ms-2\">\n                    I agree with the{\" \"}\n                    <a href=\"#\" onClick={() => setShowTermsModal(true)}>\n                      {\" \"}\n                      terms and condition{\" \"}\n                    </a>\n                  </label>\n                </div>\n                <div className=\"form-group flex-column w-full\">\n                  <div className=\"d-flex align-items-center justify-content-center w-full\">\n                    <input type=\"checkbox\" className=\"check\" />\n                    <label className=\"ms-2\">\n                      I want to receive <a href=\"#\"> the new letter </a>\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"d-flex align-items-center justify-content-center\">\n                <div className=\"signup-btn d-flex justify-content-center\">\n                  <input\n                    className=\"btn\"\n                    type=\"submit\"\n                    disabled={!isDirty || !isValid}\n                    value=\"Register\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default RegistrationModal;\n"]},"metadata":{},"sourceType":"module"}