{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\n\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport { Modal } from \"react-bootstrap\";\nimport \"../css/calendar.css\";\nimport { format } from \"date-fns\";\nimport moment from \"moment\";\nimport { util } from \"../public/util\";\nimport \"../scripts/calendar\";\nimport { doctorController } from \"../controllers/doctor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calendar = ({ ...props\n}) => {\n  _s();\n\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [showEventsListModal, setShowEventsListModal] = useState(false);\n  const [scheduleEventSelected, setScheduleEventSelected] = useState(false);\n  const [bookAppointmentSelected, setBookAppointmentSelected] = useState(false);\n  const [loading, isLoading] = useState(true);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    view: \"\",\n    filledIn: false,\n    events: [],\n    type: \"\",\n    patient_fk: 1,\n    doctor_fk: props.doctorId,\n    location: \"\"\n  });\n\n  const setType = val => {\n    let tempData = data;\n    data.type = val;\n    setData(tempData);\n  };\n\n  useEffect(() => {\n    doctorController.getAllDoctorAppointments(5).then(apptms => {\n      doctorController.getDoctorSchedule(5).then(schedule => {\n        let list = schedule.data;\n\n        for (let i = 0; i < list.length; i++) {\n          list[i][\"is_schedule\"] = true;\n          list[i][\"rendering\"] = 'background';\n        }\n\n        let tempData = data;\n\n        if (apptms && schedule.data) {\n          tempData.events = [...apptms, ...schedule.data];\n        } else {\n          if (apptms) {\n            tempData.events = [...apptms.data];\n          }\n\n          if (schedule.data) {\n            tempData.events = [...schedule.data];\n          }\n        }\n\n        setData(tempData);\n      }).then(() => {\n        isLoading(false);\n      });\n    });\n  }, []);\n\n  const handleBookApptBtn = () => {\n    setBookAppointmentSelected(true);\n    setShowAppointmentModal(true);\n  };\n\n  const createEvent = () => {\n    let submitted = true;\n    let tempData = data;\n    let events = tempData.events;\n    let checkEvents = tempData.events.filter(e => !e.is_schedule);\n    let checkSchedule = tempData.events.filter(e => e.is_schedule);\n    let startTime = \"\";\n    let endTime = \"\";\n    let newEvent = {};\n\n    if (scheduleEventSelected) {\n      startTime = new Date(tempData.start + \"T\" + datetime);\n      endTime = new Date(startTime).setMinutes(startTime.getMinutes() + 30);\n    } else if (!bookAppointmentSelected && !scheduleEventSelected) {\n      startTime = data.view === \"timeGridWeek\" || data.view === \"timeGridDay\" ? new Date(tempData.start) : tempData.start + \"T\" + datetime;\n      endTime = data.view === \"timeGridWeek\" || data.view === \"timeGridDay\" ? new Date(tempData.start) : new Date(tempData.start + \"T\" + datetime);\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      endTime = moment(endTime).format(\"YYYY-MM-DDTkk:mm:ss\");\n    } else {\n      endTime = new Date(datetime);\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      endTime = moment(endTime).format(\"YYYY-MM-DDTkk:mm:ss\");\n      startTime = datetime;\n    }\n\n    newEvent = {\n      title: appointmentText,\n      start: startTime,\n      end: endTime,\n      id: checkEvents.length + 1,\n      type: data.type\n    };\n\n    if (appointmentText === \"\") {\n      alert(\"Appointment description couldn't be empty\");\n      submitted = false;\n    } else if (data.type === 2 || data.type === \"\") {\n      alert(\"You should select a type\");\n      submitted = false;\n    } else if (datetime === \"\") {\n      alert(\"You should set a date/time\");\n      submitted = false;\n    } else if (util.isOverlapping(newEvent, checkEvents)) {\n      alert(\"Appointment Overlapping, Try another time\");\n      submitted = false;\n    } else if (!util.inSubRange(newEvent, checkSchedule)) {\n      alert(\"Cannot add at this spot\");\n      submitted = false;\n    } else {\n      events = [...events, newEvent];\n      submitted = true;\n    }\n\n    if (submitted) {\n      setDatetime(\"\");\n      setAppointmentText(\"\");\n      tempData.events = events;\n      console.log(tempData.events);\n      setData(tempData);\n      setShowAppointmentModal(false);\n      setBookAppointmentSelected(false);\n      setScheduleEventSelected(false);\n    }\n  };\n\n  const handleDateSelect = selectInfo => {\n    if (!props.allowEdit && selectInfo.view.type === \"dayGridMonth\") {\n      let tempData = data;\n      tempData.start = selectInfo.startStr;\n      tempData.end = selectInfo.endStr;\n      setData(tempData);\n      setShowEventsListModal(true);\n    }\n  };\n\n  const handleEventClick = clickInfo => {\n    if (props.allowEdit && clickInfo.event._def.extendedProps.is_schedule) {\n      let tempData = data;\n      tempData.start = moment(clickInfo.event._instance.range.start).format(\"YYYY-MM-DD\");\n      tempData.end = moment(clickInfo.event._instance.range.end).format(\"YYYY-MM-DD\");\n      tempData.type = clickInfo.event._def.extendedProps.type;\n      setData(tempData);\n      setScheduleEventSelected(true);\n      setShowAppointmentModal(true);\n    }\n  };\n\n  const workSpec = [{\n    daysOfWeek: [1, 2, 3, 4],\n    startTime: \"08:00\",\n    endTime: \"13:00\"\n  }, {\n    daysOfWeek: [5, 6],\n    startTime: \"09:00\",\n    endTime: \"14:00\",\n    backgroundColor: \"red\"\n  }];\n  const workMin = workSpec.map(item => item.startTime).sort().shift();\n  const workMax = workSpec.map(item => item.endTime).sort().pop();\n  const workDays = [...new Set(workSpec.flatMap(item => item.daysOfWeek))];\n  const hideDays = [...Array(7).keys()].filter(day => !workDays.includes(day));\n\n  const hideModal = () => {\n    setShowAppointmentModal(false);\n    let tempData = data;\n    tempData.start = \"\";\n    setData(tempData);\n    setBookAppointmentSelected(false);\n  };\n\n  return !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      headerToolbar: {\n        left: \"prev,next,today\",\n        center: \"title\",\n        right: \"timeGridWeek,timeGridDay,dayGridMonth\"\n      },\n      initialView: \"timeGridWeek\",\n      height: 600,\n      selectable: true,\n      select: handleDateSelect,\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      weekends: true,\n      events: data.events,\n      eventOverlap: true,\n      allDaySlot: false,\n      selectOverlap: function (e) {\n        console.log(e);\n      },\n      eventDidMount: function (event) {\n        if (event.event._def.extendedProps.is_schedule) {\n          let details = event.event._def.extendedProps;\n          console.log(details);\n          event.el.firstChild.parentElement.classList.add(details.type === 0 ? \"physical_appointment\" : details.type === 1 ? \"virtual_appointment\" : \"pv_appointment\");\n          event.el.firstChild.parentElement.children[0].innerHTML = \"<div>\" + details.location + \" </div>\"; //     event\n        } else {//  event.el.firstChild.parentElement.parentElement.style\n          }\n      },\n      slotDuration: \"00:30\",\n      eventConstraint: \"businessHours\",\n      aspectRatio: 5,\n      eventClick: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"physical_appointment scale_key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Physical Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"virtual_appointment scale_key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Virtual Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pv_appointment scale_key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Physical or Virtual Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), props.allowEdit && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleBookApptBtn(),\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: () => hideModal(),\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Add Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 64\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"subtitle\",\n              children: \"It's quick and easy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Appoitment description\",\n            className: \"input\",\n            onChange: e => setAppointmentText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), (!scheduleEventSelected || data.type === 2) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center p-3 input\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Appointment Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: () => setType(0),\n                type: \"radio\",\n                value: 0,\n                name: \"apmt_type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Physical\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center mx-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: () => setType(1),\n                type: \"radio\",\n                value: 1,\n                name: \"apmt_type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Virtual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            defaultValue: startDate,\n            type: bookAppointmentSelected ? \"datetime-local\" : data.view === \"dayGridMonth\" || scheduleEventSelected ? \"time\" : \"hidden\",\n            min: data.startStr,\n            max: data.endStr,\n            step: \"1\",\n            onChange: e => setDatetime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createEvent(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showEventsListModal,\n      onHide: () => setShowEventsListModal(false),\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: [\"All Appointments for\", \" \", moment(new Date(data.start)).format(\"DD-MM-YYYY\").toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [data.events.filter(aptm => util.sameDay(new Date(aptm.start), new Date(data.start)) && !aptm.is_schedule).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Events on this day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 31\n        }, this), data.events.filter(aptm => util.sameDay(new Date(aptm.start), new Date(data.start)) && !aptm.is_schedule).map((apmt, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: apmt.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(apmt.start).getHours(), \":\", new Date(apmt.start).getMinutes().toString().length === 1 ? \"0\" + new Date(apmt.start).getMinutes() : new Date(apmt.start).getMinutes()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(apmt.end).getHours(), \":\", new Date(apmt.end).getMinutes().toString().length === 1 ? \"0\" + new Date(apmt.end).getMinutes() : new Date(apmt.end).getMinutes()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 21\n            }, this)]\n          }, \"ap\" + i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Calendar, \"u83PEuzYzpv6tT42PwFBNmanVWg=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/calendar.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","format","moment","util","doctorController","Calendar","props","appointmentText","setAppointmentText","startDate","setStartDate","Date","datetime","setDatetime","showAppointmentModal","setShowAppointmentModal","showEventsListModal","setShowEventsListModal","scheduleEventSelected","setScheduleEventSelected","bookAppointmentSelected","setBookAppointmentSelected","loading","isLoading","data","setData","allFavs","favObj","start","end","view","filledIn","events","type","patient_fk","doctor_fk","doctorId","location","setType","val","tempData","getAllDoctorAppointments","then","apptms","getDoctorSchedule","schedule","list","i","length","handleBookApptBtn","createEvent","submitted","checkEvents","filter","e","is_schedule","checkSchedule","startTime","endTime","newEvent","setMinutes","getMinutes","title","id","alert","isOverlapping","inSubRange","console","log","handleDateSelect","selectInfo","allowEdit","startStr","endStr","handleEventClick","clickInfo","event","_def","extendedProps","_instance","range","workSpec","daysOfWeek","backgroundColor","workMin","map","item","sort","shift","workMax","pop","workDays","Set","flatMap","hideDays","Array","keys","day","includes","hideModal","left","center","right","details","el","firstChild","parentElement","classList","add","children","innerHTML","target","value","toString","aptm","sameDay","apmt","getHours"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport { Modal } from \"react-bootstrap\";\nimport \"../css/calendar.css\";\nimport { format } from \"date-fns\";\nimport moment from \"moment\";\nimport { util } from \"../public/util\";\nimport \"../scripts/calendar\";\nimport { doctorController } from \"../controllers/doctor\";\n\nconst Calendar = ({ ...props }) => {\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [showEventsListModal, setShowEventsListModal] = useState(false);\n  const [scheduleEventSelected, setScheduleEventSelected] = useState(false);\n  const [bookAppointmentSelected, setBookAppointmentSelected] = useState(false);\n  const [loading, isLoading] = useState(true);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    view: \"\",\n    filledIn: false,\n    events: [],\n    type: \"\",\n    patient_fk: 1,\n    doctor_fk: props.doctorId,\n    location: \"\",\n  });\n  const setType = (val) => {\n    let tempData = data;\n    data.type = val;\n    setData(tempData);\n  };\n\n  useEffect(() => {\n    doctorController.getAllDoctorAppointments(5).then((apptms) => {\n      doctorController\n        .getDoctorSchedule(5)\n        .then((schedule) => {\n          let list = schedule.data;\n          for (let i = 0; i < list.length; i++) {\n            list[i][\"is_schedule\"] = true;\n            list[i][\"rendering\"] = 'background';\n\n          }\n          let tempData = data;\n\n          if (apptms && schedule.data) {\n            tempData.events = [...apptms, ...schedule.data];\n          } else {\n            if (apptms) {\n              tempData.events = [...apptms.data];\n            }\n            if (schedule.data) {\n              tempData.events = [...schedule.data];\n            }\n          }\n\n          setData(tempData);\n        })\n        .then(() => {\n          isLoading(false);\n        });\n    });\n  }, []);\n\n  const handleBookApptBtn = () => {\n    setBookAppointmentSelected(true);\n    setShowAppointmentModal(true);\n  };\n\n  const createEvent = () => {\n    let submitted = true;\n    let tempData = data;\n    let events = tempData.events;\n    let checkEvents = tempData.events.filter((e) => !e.is_schedule);\n    let checkSchedule = tempData.events.filter((e) => e.is_schedule);\n    let startTime = \"\";\n    let endTime = \"\";\n    let newEvent = {};\n    if (scheduleEventSelected) {\n      startTime = new Date(tempData.start + \"T\" + datetime);\n      endTime = new Date(startTime).setMinutes(startTime.getMinutes() + 30);\n    } else if (!bookAppointmentSelected && !scheduleEventSelected) {\n      startTime =\n        data.view === \"timeGridWeek\" || data.view === \"timeGridDay\"\n          ? new Date(tempData.start)\n          : tempData.start + \"T\" + datetime;\n      endTime =\n        data.view === \"timeGridWeek\" || data.view === \"timeGridDay\"\n          ? new Date(tempData.start)\n          : new Date(tempData.start + \"T\" + datetime);\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      endTime = moment(endTime).format(\"YYYY-MM-DDTkk:mm:ss\");\n    } else {\n      endTime = new Date(datetime);\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      endTime = moment(endTime).format(\"YYYY-MM-DDTkk:mm:ss\");\n      startTime = datetime;\n    }\n    newEvent = {\n      title: appointmentText,\n      start: startTime,\n      end: endTime,\n      id: checkEvents.length + 1,\n      type: data.type,\n    };\n    if (appointmentText === \"\") {\n      alert(\"Appointment description couldn't be empty\");\n      submitted = false;\n    } else if (data.type === 2 || data.type === \"\") {\n      alert(\"You should select a type\");\n      submitted = false;\n    } else if (datetime === \"\") {\n      alert(\"You should set a date/time\");\n      submitted = false;\n    } else if (util.isOverlapping(newEvent, checkEvents)) {\n      alert(\"Appointment Overlapping, Try another time\");\n      submitted = false;\n    } else if (!util.inSubRange(newEvent, checkSchedule)) {\n      alert(\"Cannot add at this spot\");\n      submitted = false;\n    } else {\n      events = [...events, newEvent];\n      submitted = true;\n    }\n    if (submitted) {\n      setDatetime(\"\");\n      setAppointmentText(\"\");\n      tempData.events = events;\n      console.log(tempData.events);\n      setData(tempData);\n      setShowAppointmentModal(false);\n      setBookAppointmentSelected(false);\n      setScheduleEventSelected(false);\n    }\n  };\n\n  const handleDateSelect = (selectInfo) => {\n    if (!props.allowEdit && selectInfo.view.type === \"dayGridMonth\") {\n      let tempData = data;\n      tempData.start = selectInfo.startStr;\n      tempData.end = selectInfo.endStr;\n      setData(tempData);\n\n      setShowEventsListModal(true);\n    }\n  };\n\n  const handleEventClick = (clickInfo) => {\n    if (props.allowEdit && clickInfo.event._def.extendedProps.is_schedule) {\n      let tempData = data;\n      tempData.start = moment(clickInfo.event._instance.range.start).format(\n        \"YYYY-MM-DD\"\n      );\n      tempData.end = moment(clickInfo.event._instance.range.end).format(\n        \"YYYY-MM-DD\"\n      );\n      tempData.type = clickInfo.event._def.extendedProps.type;\n      setData(tempData);\n\n      setScheduleEventSelected(true);\n      setShowAppointmentModal(true);\n    }\n  };\n\n  const workSpec = [\n    {\n      daysOfWeek: [1, 2, 3, 4],\n      startTime: \"08:00\",\n      endTime: \"13:00\",\n    },\n    {\n      daysOfWeek: [5, 6],\n      startTime: \"09:00\",\n      endTime: \"14:00\",\n      backgroundColor: \"red\",\n    },\n  ];\n\n  const workMin = workSpec\n    .map((item) => item.startTime)\n    .sort()\n    .shift();\n  const workMax = workSpec\n    .map((item) => item.endTime)\n    .sort()\n    .pop();\n  const workDays = [...new Set(workSpec.flatMap((item) => item.daysOfWeek))];\n  const hideDays = [...Array(7).keys()].filter(\n    (day) => !workDays.includes(day)\n  );\n\n  const hideModal = () => {\n    setShowAppointmentModal(false);\n    let tempData = data;\n    tempData.start = \"\";\n    setData(tempData);\n    setBookAppointmentSelected(false);\n  };\n\n  return (\n    !loading && (\n      <>\n        <FullCalendar\n          headerToolbar={{\n            left: \"prev,next,today\",\n            center: \"title\",\n            right: \"timeGridWeek,timeGridDay,dayGridMonth\",\n          }}\n          initialView=\"timeGridWeek\"\n          height={600}\n          selectable={true}\n          select={handleDateSelect}\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          weekends={true}\n          events={data.events}\n          eventOverlap={true}\n          allDaySlot={false}\n          selectOverlap={function (e) {\n            console.log(e);\n          }}\n          eventDidMount={function (event) {\n            if (event.event._def.extendedProps.is_schedule) {\n              let details = event.event._def.extendedProps;\n              console.log(details);\n              event.el.firstChild.parentElement.classList.add(\n                details.type === 0\n                  ? \"physical_appointment\"\n                  : details.type === 1\n                  ? \"virtual_appointment\"\n                  : \"pv_appointment\"\n              );\n              event.el.firstChild.parentElement.children[0].innerHTML =\n                \"<div>\" + details.location + \" </div>\";\n\n              //     event\n            } else {\n              //  event.el.firstChild.parentElement.parentElement.style\n            }\n          }}\n          slotDuration={\"00:30\"}\n          eventConstraint=\"businessHours\"\n          aspectRatio={5}\n          eventClick={handleEventClick}\n        />\n        <br />\n        <div className=\"d-flex justify-content-between\">\n          <div className=\"d-flex justify-content-center align-items-center\">\n            <div className=\"physical_appointment scale_key\"></div>\n            <span>Physical Appointment</span>\n          </div>\n          <div className=\"d-flex justify-content-center align-items-center\">\n            <div className=\"virtual_appointment scale_key\"></div>\n            <span>Virtual Appointment</span>\n          </div>\n          <div className=\"d-flex justify-content-center align-items-center\">\n            <div className=\"pv_appointment scale_key\"></div>\n            <span>Physical or Virtual Appointment</span>\n          </div>\n        </div>\n        <br />\n        {props.allowEdit && (\n          <button onClick={() => handleBookApptBtn()}>Book Appointment</button>\n        )}\n\n        <Modal\n          show={showAppointmentModal}\n          onHide={() => hideModal()}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              <div className=\"signup-title\">\n                <span className=\"title\">Add Appointment</span> <br />\n                <span className=\"subtitle\">It's quick and easy.</span>\n              </div>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"d-flex flex-column\">\n              <input\n                type=\"text\"\n                placeholder=\"Appoitment description\"\n                className=\"input\"\n                onChange={(e) => setAppointmentText(e.target.value)}\n              />\n\n              {(!scheduleEventSelected || data.type === 2) && (\n                <div className=\"d-flex justify-content-between align-items-center p-3 input\">\n                  <span>Appointment Type</span>\n\n                  <div className=\"d-flex align-items-center\">\n                    <input\n                      onChange={() => setType(0)}\n                      type=\"radio\"\n                      value={0}\n                      name=\"apmt_type\"\n                    />\n                    <label>Physical</label>\n                  </div>\n                  <div className=\"d-flex align-items-center mx-2\">\n                    <input\n                      onChange={() => setType(1)}\n                      type=\"radio\"\n                      value={1}\n                      name=\"apmt_type\"\n                    />\n                    <label>Virtual</label>\n                  </div>\n                </div>\n              )}\n\n              <input\n                className=\"input\"\n                defaultValue={startDate}\n                type={\n                  bookAppointmentSelected\n                    ? \"datetime-local\"\n                    : data.view === \"dayGridMonth\" || scheduleEventSelected\n                    ? \"time\"\n                    : \"hidden\"\n                }\n                min={data.startStr}\n                max={data.endStr}\n                step=\"1\"\n                onChange={(e) => setDatetime(e.target.value)}\n              />\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <button onClick={() => createEvent()}>Add</button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal\n          show={showEventsListModal}\n          onHide={() => setShowEventsListModal(false)}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              <div className=\"signup-title\">\n                <span className=\"title\">\n                  All Appointments for{\" \"}\n                  {moment(new Date(data.start)).format(\"DD-MM-YYYY\").toString()}\n                </span>{\" \"}\n                <br />\n              </div>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {data.events.filter(\n              (aptm) =>\n                util.sameDay(new Date(aptm.start), new Date(data.start)) &&\n                !aptm.is_schedule\n            ).length === 0 && <div>No Events on this day</div>}\n            {data.events\n              .filter(\n                (aptm) =>\n                  util.sameDay(new Date(aptm.start), new Date(data.start)) &&\n                  !aptm.is_schedule\n              )\n              .map((apmt, i) => {\n                return (\n                  <div key={\"ap\" + i} className=\"d-flex flex-column\">\n                    <span>{apmt.title}</span>\n                    <div className=\"d-flex\">\n                      <span>Start Time</span>\n                      <span>\n                        {new Date(apmt.start).getHours()}:\n                        {new Date(apmt.start).getMinutes().toString().length ===\n                        1\n                          ? \"0\" + new Date(apmt.start).getMinutes()\n                          : new Date(apmt.start).getMinutes()}\n                      </span>\n                    </div>\n                    <div className=\"d-flex\">\n                      <span>End Time</span>\n                      <span>\n                        {new Date(apmt.end).getHours()}:\n                        {new Date(apmt.end).getMinutes().toString().length === 1\n                          ? \"0\" + new Date(apmt.end).getMinutes()\n                          : new Date(apmt.end).getMinutes()}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n          </Modal.Body>\n        </Modal>\n      </>\n    )\n  );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}