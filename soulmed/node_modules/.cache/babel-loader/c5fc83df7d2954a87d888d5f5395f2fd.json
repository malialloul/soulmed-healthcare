{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\n\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport { Modal } from \"react-bootstrap\";\nimport \"../css/calendar.css\";\nimport { format } from \"date-fns\";\nimport moment from \"moment\";\nimport { util } from \"../public/util\";\nimport \"../scripts/calendar\";\nimport { doctorController } from \"../controllers/doctor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calendar = ({ ...props\n}) => {\n  _s();\n\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [loading, isLoading] = useState(true);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    view: \"\",\n    filledIn: false,\n    events: []\n  });\n  useEffect(() => {\n    doctorController.getAllDoctorAppointments(5).then(apptms => {\n      doctorController.getDoctorSchedule(5).then(schedule => {\n        let list = schedule.data;\n\n        for (let i = 0; i < list.length; i++) {\n          list[i][\"is_schedule\"] = true;\n        }\n\n        let tempData = data;\n\n        if (apptms && schedule.data) {\n          tempData.events = [...apptms, ...schedule.data];\n        } else {\n          if (apptms) {\n            tempData.events = [...apptms.data];\n          }\n\n          if (schedule.data) {\n            tempData.events = [...schedule.data];\n          }\n        }\n\n        setData(tempData);\n      }).then(() => {\n        isLoading(false);\n      });\n    });\n  }, []);\n  const [showEventsListModal, setShowEventsListModal] = useState(false);\n  const [scheduleEventSelected, setScheduleEventSelected] = useState(false);\n  const [bookAppointmentSelected, setBookAppointmentSelected] = useState(false);\n\n  const handleBookApptBtn = () => {\n    setBookAppointmentSelected(true);\n    setShowAppointmentModal(true);\n  };\n\n  const createEvent = () => {\n    let tempData = data;\n    let events = tempData.events;\n\n    if (!bookAppointmentSelected) {\n      let endTime = data.view === \"timeGridWeek\" || data.view === \"timeGridDay\" ? new Date(tempData.start.split(\"+\")[0]) : new Date(tempData.start + \" \" + datetime);\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      endTime = moment(endTime).format(\"YYYY-MM-DDTkk:mm:ss\");\n      let newEvent = {\n        title: appointmentText,\n        id: data.events.length + 1,\n        start: data.view === \"timeGridWeek\" || data.view === \"timeGridDay\" ? tempData.start.split(\"+\")[0] : tempData.start + \"T\" + datetime,\n        end: endTime\n      };\n\n      if (util.isOverlapping(newEvent, data.events)) {\n        alert(\"Appointment Overlapping, Try another time\");\n      } else {\n        events = [...events, newEvent];\n      }\n    } else {\n      let endTime = new Date(datetime.split(\"T\")[0] + \" \" + datetime.split(\"T\")[1]);\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      endTime = moment(endTime).format(\"YYYY-MM-DDTkk:mm:ss\");\n      let newEvent = {\n        title: appointmentText,\n        start: datetime,\n        end: endTime,\n        id: data.events.length + 1\n      };\n\n      if (util.isOverlapping(newEvent, data.events)) {\n        alert(\"Appointment Overlapping, Try another time\");\n      } else {\n        events = [...events, newEvent];\n      }\n    }\n\n    setDatetime(\"\");\n    setAppointmentText(\"\");\n    tempData.events = events;\n    setData(tempData);\n    setShowAppointmentModal(false);\n    setBookAppointmentSelected(false);\n  };\n\n  const handleDateSelect = selectInfo => {\n    if (props.allowEdit) {\n      if (new Date(selectInfo.startStr) - new Date() < 0 && !util.isToday(new Date(selectInfo.startStr))) {\n        alert(\"Cannot add on this day\");\n      } else {\n        let tempData = data;\n        tempData.start = selectInfo.startStr;\n        tempData.end = selectInfo.endStr;\n        tempData.view = selectInfo.view.type;\n        setShowAppointmentModal(true);\n        setData(tempData);\n      }\n    } else {\n      if (selectInfo.view.type === \"dayGridMonth\") {\n        let tempData = data;\n        tempData.events = props.events;\n        tempData.start = selectInfo.startStr;\n        tempData.end = selectInfo.endStr;\n        setData(tempData);\n        setShowEventsListModal(true);\n      }\n    }\n  };\n\n  const handleEventClick = clickInfo => {\n    if (props.allowEdit) {\n      let tempData = data;\n      tempData.start = clickInfo.event._instance.range.start;\n      tempData.end = clickInfo.event._instance.range.end;\n      setData(tempData);\n      setScheduleEventSelected(true);\n      setShowAppointmentModal(true);\n    }\n  };\n\n  const workSpec = [{\n    daysOfWeek: [1, 2, 3, 4],\n    startTime: \"08:00\",\n    endTime: \"13:00\"\n  }, {\n    daysOfWeek: [5, 6],\n    startTime: \"09:00\",\n    endTime: \"14:00\",\n    backgroundColor: \"red\"\n  }];\n  const workMin = workSpec.map(item => item.startTime).sort().shift();\n  const workMax = workSpec.map(item => item.endTime).sort().pop();\n  const workDays = [...new Set(workSpec.flatMap(item => item.daysOfWeek))];\n  const hideDays = [...Array(7).keys()].filter(day => !workDays.includes(day));\n\n  const hideModal = () => {\n    setShowAppointmentModal(false);\n    let tempData = data;\n    tempData.start = \"\";\n    setData(tempData);\n    setBookAppointmentSelected(false);\n  };\n\n  return !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      headerToolbar: {\n        left: \"prev,next,today\",\n        center: \"title\",\n        right: \"timeGridWeek,timeGridDay,dayGridMonth\"\n      },\n      initialView: \"timeGridWeek\",\n      height: 500,\n      selectable: true,\n      select: handleDateSelect,\n      selectMirror: true,\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      weekends: true,\n      events: data.events,\n      allDaySlot: false,\n      eventDidMount: function (event) {\n        if (event.event._def.extendedProps.is_schedule) {\n          let details = event.event._def.extendedProps;\n          event.el.firstChild.parentElement.classList.add(details.type === 0 ? \"physical_appointment\" : details.type === 1 ? \"virtual_appointment\" : \"pv_appointment\");\n          event.el.firstChild.parentElement.children[0].classList.add(\"none\"); //     event\n        }\n      },\n      slotDuration: \"00:30\",\n      eventConstraint: \"businessHours\",\n      aspectRatio: 5,\n      eventClick: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"physical_appointment scale_key text-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Physical Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"virtual_appointment scale_key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Virtual Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pv_appointment scale_key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Physical \", \"&\", \" Virtual Appointment\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), props.allowEdit && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleBookApptBtn(),\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: () => hideModal(),\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Add Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 64\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"subtitle\",\n              children: \"It's quick and easy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Appoitment description\",\n            className: \"input\",\n            onChange: e => setAppointmentText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center p-3 input\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Appointment Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"physical\",\n                name: \"apmt_type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Physical\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center mx-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"virtual\",\n                name: \"apmt_type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Virtual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            defaultValue: startDate,\n            type: bookAppointmentSelected ? \"datetime-local\" : data.view === \"dayGridMonth\" || scheduleEventSelected ? \"time\" : \"hidden\",\n            min: data.startStr,\n            max: data.endStr,\n            step: \"1\",\n            onChange: e => setDatetime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createEvent(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showEventsListModal,\n      onHide: () => setShowEventsListModal(false),\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: [\"All Appointments for\", \" \", moment(new Date(data.start)).format(\"DD-MM-YYYY\").toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [data.events.filter(aptm => util.sameDay(new Date(aptm.start), new Date(data.start))).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Events on this day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 31\n        }, this), data.events.filter(aptm => util.sameDay(new Date(aptm.start), new Date(data.start))).map(apmt => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: apmt.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(apmt.start).getHours(), \":\", new Date(apmt.start).getMinutes().toString().length === 1 ? \"0\" + new Date(apmt.start).getMinutes() : new Date(apmt.start).getMinutes()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(apmt.end).getHours(), \":\", new Date(apmt.end).getMinutes().toString().length === 1 ? \"0\" + new Date(apmt.end).getMinutes() : new Date(apmt.end).getMinutes()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Calendar, \"/jCLjFyy2VAuaOuEg8ywUsyWFlQ=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/calendar.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","format","moment","util","doctorController","Calendar","props","newEvent","setNewEvent","appointmentText","setAppointmentText","startDate","setStartDate","Date","datetime","setDatetime","added","setAdded","showAppointmentModal","setShowAppointmentModal","loading","isLoading","data","setData","allFavs","favObj","start","end","view","filledIn","events","getAllDoctorAppointments","then","apptms","getDoctorSchedule","schedule","list","i","length","tempData","showEventsListModal","setShowEventsListModal","scheduleEventSelected","setScheduleEventSelected","bookAppointmentSelected","setBookAppointmentSelected","handleBookApptBtn","createEvent","endTime","split","setMinutes","getMinutes","title","id","isOverlapping","alert","handleDateSelect","selectInfo","allowEdit","startStr","isToday","endStr","type","handleEventClick","clickInfo","event","_instance","range","workSpec","daysOfWeek","startTime","backgroundColor","workMin","map","item","sort","shift","workMax","pop","workDays","Set","flatMap","hideDays","Array","keys","filter","day","includes","hideModal","left","center","right","_def","extendedProps","is_schedule","details","el","firstChild","parentElement","classList","add","children","e","target","value","toString","aptm","sameDay","apmt","getHours"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport { Modal } from \"react-bootstrap\";\nimport \"../css/calendar.css\";\nimport { format } from \"date-fns\";\nimport moment from \"moment\";\nimport { util } from \"../public/util\";\nimport \"../scripts/calendar\";\nimport { doctorController } from \"../controllers/doctor\";\n\nconst Calendar = ({ ...props }) => {\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n\n  const [loading, isLoading] = useState(true);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    view: \"\",\n    filledIn: false,\n    events: [],\n  });\n  useEffect(() => {\n    doctorController.getAllDoctorAppointments(5).then((apptms) => {\n      doctorController\n        .getDoctorSchedule(5)\n        .then((schedule) => {\n          let list = schedule.data;\n          for (let i = 0; i < list.length; i++) {\n            list[i][\"is_schedule\"] = true;\n          }\n          let tempData = data;\n\n          if (apptms && schedule.data) {\n            tempData.events = [...apptms, ...schedule.data];\n          } else {\n            if (apptms) {\n              tempData.events = [...apptms.data];\n            }\n            if (schedule.data) {\n              tempData.events = [...schedule.data];\n            }\n          }\n\n          setData(tempData);\n        })\n        .then(() => {\n          isLoading(false);\n        });\n    });\n  }, []);\n\n  const [showEventsListModal, setShowEventsListModal] = useState(false);\n  const [scheduleEventSelected, setScheduleEventSelected] = useState(false);\n\n  const [bookAppointmentSelected, setBookAppointmentSelected] = useState(false);\n  const handleBookApptBtn = () => {\n    setBookAppointmentSelected(true);\n    setShowAppointmentModal(true);\n  };\n\n  const createEvent = () => {\n    let tempData = data;\n    let events = tempData.events;\n    if (!bookAppointmentSelected) {\n      let endTime =\n        data.view === \"timeGridWeek\" || data.view === \"timeGridDay\"\n          ? new Date(tempData.start.split(\"+\")[0])\n          : new Date(tempData.start + \" \" + datetime);\n\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      endTime = moment(endTime).format(\"YYYY-MM-DDTkk:mm:ss\");\n\n      let newEvent = {\n        title: appointmentText,\n        id: data.events.length + 1,\n        start:\n          data.view === \"timeGridWeek\" || data.view === \"timeGridDay\"\n            ? tempData.start.split(\"+\")[0]\n            : tempData.start + \"T\" + datetime,\n        end: endTime,\n      };\n\n      if (util.isOverlapping(newEvent, data.events)) {\n        alert(\"Appointment Overlapping, Try another time\");\n      } else {\n        events = [...events, newEvent];\n      }\n    } else {\n      let endTime = new Date(\n        datetime.split(\"T\")[0] + \" \" + datetime.split(\"T\")[1]\n      );\n      endTime.setMinutes(endTime.getMinutes() + 30);\n\n      endTime = moment(endTime).format(\"YYYY-MM-DDTkk:mm:ss\");\n\n      let newEvent = {\n        title: appointmentText,\n        start: datetime,\n        end: endTime,\n        id: data.events.length + 1,\n      };\n      if (util.isOverlapping(newEvent, data.events)) {\n        alert(\"Appointment Overlapping, Try another time\");\n      } else {\n        events = [...events, newEvent];\n      }\n    }\n    setDatetime(\"\");\n    setAppointmentText(\"\");\n    tempData.events = events;\n    setData(tempData);\n    setShowAppointmentModal(false);\n    setBookAppointmentSelected(false);\n  };\n\n  const handleDateSelect = (selectInfo) => {\n    if (props.allowEdit) {\n      if (\n        new Date(selectInfo.startStr) - new Date() < 0 &&\n        !util.isToday(new Date(selectInfo.startStr))\n      ) {\n        alert(\"Cannot add on this day\");\n      } else {\n        let tempData = data;\n        tempData.start = selectInfo.startStr;\n        tempData.end = selectInfo.endStr;\n        tempData.view = selectInfo.view.type;\n        setShowAppointmentModal(true);\n        setData(tempData);\n      }\n    } else {\n      if (selectInfo.view.type === \"dayGridMonth\") {\n        let tempData = data;\n        tempData.events = props.events;\n        tempData.start = selectInfo.startStr;\n        tempData.end = selectInfo.endStr;\n        setData(tempData);\n\n        setShowEventsListModal(true);\n      }\n    }\n  };\n\n  const handleEventClick = (clickInfo) => {\n    if (props.allowEdit) {\n      let tempData = data;\n      tempData.start = clickInfo.event._instance.range.start;\n      tempData.end = clickInfo.event._instance.range.end;\n      setData(tempData);\n      setScheduleEventSelected(true);\n      setShowAppointmentModal(true);\n    }\n  };\n\n  const workSpec = [\n    {\n      daysOfWeek: [1, 2, 3, 4],\n      startTime: \"08:00\",\n      endTime: \"13:00\",\n    },\n    {\n      daysOfWeek: [5, 6],\n      startTime: \"09:00\",\n      endTime: \"14:00\",\n      backgroundColor: \"red\",\n    },\n  ];\n\n  const workMin = workSpec\n    .map((item) => item.startTime)\n    .sort()\n    .shift();\n  const workMax = workSpec\n    .map((item) => item.endTime)\n    .sort()\n    .pop();\n  const workDays = [...new Set(workSpec.flatMap((item) => item.daysOfWeek))];\n  const hideDays = [...Array(7).keys()].filter(\n    (day) => !workDays.includes(day)\n  );\n\n  const hideModal = () => {\n    setShowAppointmentModal(false);\n    let tempData = data;\n    tempData.start = \"\";\n    setData(tempData);\n    setBookAppointmentSelected(false);\n  };\n\n  return (\n    !loading && (\n      <>\n        <FullCalendar\n          headerToolbar={{\n            left: \"prev,next,today\",\n            center: \"title\",\n            right: \"timeGridWeek,timeGridDay,dayGridMonth\",\n          }}\n          initialView=\"timeGridWeek\"\n          height={500}\n          selectable={true}\n          select={handleDateSelect}\n          selectMirror={true}\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          weekends={true}\n          events={data.events}\n          allDaySlot={false}\n          eventDidMount={function (event) {\n            if (event.event._def.extendedProps.is_schedule) {\n              let details = event.event._def.extendedProps;\n              event.el.firstChild.parentElement.classList.add(\n                details.type === 0\n                  ? \"physical_appointment\"\n                  : details.type === 1\n                  ? \"virtual_appointment\"\n                  : \"pv_appointment\"\n              );\n              event.el.firstChild.parentElement.children[0].classList.add(\n                \"none\"\n              );\n\n              //     event\n            }\n          }}\n          slotDuration={\"00:30\"}\n          eventConstraint=\"businessHours\"\n          aspectRatio={5}\n          eventClick={handleEventClick}\n        />\n        <br />\n        <div className=\"d-flex justify-content-between\">\n          <div className=\"d-flex\">\n            <div className=\"physical_appointment scale_key text-center\"></div>\n            <span>Physical Appointment</span>\n          </div>\n          <div className=\"d-flex\">\n            <div className=\"virtual_appointment scale_key\"></div>\n            <span>Virtual Appointment</span>\n          </div>\n          <div className=\"d-flex\">\n            <div className=\"pv_appointment scale_key\"></div>\n            <span>Physical {\"&\"} Virtual Appointment</span>\n          </div>\n        </div>\n        <br />\n        {props.allowEdit && (\n          <button onClick={() => handleBookApptBtn()}>Book Appointment</button>\n        )}\n\n        <Modal\n          show={showAppointmentModal}\n          onHide={() => hideModal()}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              <div className=\"signup-title\">\n                <span className=\"title\">Add Appointment</span> <br />\n                <span className=\"subtitle\">It's quick and easy.</span>\n              </div>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"d-flex flex-column\">\n              <input\n                type=\"text\"\n                placeholder=\"Appoitment description\"\n                className=\"input\"\n                onChange={(e) => setAppointmentText(e.target.value)}\n              />\n\n              <div className=\"d-flex justify-content-between align-items-center p-3 input\">\n                <span>Appointment Type</span>\n\n                <div className=\"d-flex align-items-center\">\n                  <input type=\"radio\" value=\"physical\" name=\"apmt_type\" />\n                  <label>Physical</label>\n                </div>\n                <div className=\"d-flex align-items-center mx-2\">\n                  <input type=\"radio\" value=\"virtual\" name=\"apmt_type\" />\n                  <label>Virtual</label>\n                </div>\n              </div>\n\n              <input\n                className=\"input\"\n                defaultValue={startDate}\n                type={\n                  bookAppointmentSelected\n                    ? \"datetime-local\"\n                    : data.view === \"dayGridMonth\" || scheduleEventSelected\n                    ? \"time\"\n                    : \"hidden\"\n                }\n                min={data.startStr}\n                max={data.endStr}\n                step=\"1\"\n                onChange={(e) => setDatetime(e.target.value)}\n              />\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <button onClick={() => createEvent()}>Add</button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal\n          show={showEventsListModal}\n          onHide={() => setShowEventsListModal(false)}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              <div className=\"signup-title\">\n                <span className=\"title\">\n                  All Appointments for{\" \"}\n                  {moment(new Date(data.start)).format(\"DD-MM-YYYY\").toString()}\n                </span>{\" \"}\n                <br />\n              </div>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {data.events.filter((aptm) =>\n              util.sameDay(new Date(aptm.start), new Date(data.start))\n            ).length === 0 && <div>No Events on this day</div>}\n            {data.events\n              .filter((aptm) =>\n                util.sameDay(new Date(aptm.start), new Date(data.start))\n              )\n              .map((apmt) => {\n                return (\n                  <div className=\"d-flex flex-column\">\n                    <span>{apmt.title}</span>\n                    <div className=\"d-flex\">\n                      <span>Start Time</span>\n                      <span>\n                        {new Date(apmt.start).getHours()}:\n                        {new Date(apmt.start).getMinutes().toString().length ===\n                        1\n                          ? \"0\" + new Date(apmt.start).getMinutes()\n                          : new Date(apmt.start).getMinutes()}\n                      </span>\n                    </div>\n                    <div className=\"d-flex\">\n                      <span>End Time</span>\n                      <span>\n                        {new Date(apmt.end).getHours()}:\n                        {new Date(apmt.end).getMinutes().toString().length === 1\n                          ? \"0\" + new Date(apmt.end).getMinutes()\n                          : new Date(apmt.end).getMinutes()}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n          </Modal.Body>\n        </Modal>\n      </>\n    )\n  );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}