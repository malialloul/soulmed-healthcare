{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/views/doctor/schedule-settings.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doctorController } from \"../../controllers/doctor\";\nimport Layout from \"./layout\";\nimport \"../../css/schedule-settings.css\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport { util } from \"../../public/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScheduleSettings = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [doctorData, setDoctorData] = useState({\n    id: -1,\n    name: \"\",\n    country: \"\",\n    profession_fk: -1,\n    city: \"\",\n    Price: \"\",\n    location: []\n  });\n  useEffect(() => {\n    doctorController.getDoctorInfo(id).then(response => {\n      setDoctorData(response.data);\n    }).then(() => {\n      setLoading(false);\n    });\n  }, []);\n  const daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  const [timingIndexCount, setTimingIndexCount] = useState(-1);\n  const [timingArray, setTimingarray] = useState([]);\n\n  const addTiming = () => {\n    setTimingIndexCount(timingIndexCount + 1);\n    let temp = timingArray;\n    temp = [...temp, {\n      id: timingIndexCount + 1,\n      start: \"\",\n      end: \"\",\n      type: \"\"\n    }];\n    setTimingarray(temp);\n    console.log(temp);\n  };\n\n  const deleteTiming = index => {\n    console.log(index);\n    let temp = timingArray;\n    temp = temp.filter(timing => timing.id !== index);\n    setTimingarray(temp);\n    console.log(timingArray);\n  };\n\n  const modifyStartTiming = (index, value) => {\n    let temp = timingArray;\n    temp[index].start = value;\n    setTimingarray(temp);\n  };\n\n  const modifyEndTiming = (index, value) => {\n    let temp = timingArray;\n    temp[index].end = value;\n    setTimingarray(temp);\n    console.log(temp);\n  };\n\n  const modifyAppointmentsType = (index, value) => {\n    let temp = timingArray;\n    temp[index].type = value;\n    setTimingarray(temp);\n  };\n\n  const [loaction, setLocation] = useState(\"\");\n  const [daysSelected, setDaysSelected] = useState(Array.from({\n    length: 7\n  }, (_, i) => 0));\n\n  const updateDaysSelected = index => {\n    let temp = daysSelected;\n    temp[index] = temp[index] === 0 ? 1 : 0;\n    setDaysSelected(temp);\n  };\n\n  const navigate = useNavigate();\n  let dt = new Date();\n  let currentWeekDay = dt.getDay();\n  let lessDays = currentWeekDay === 0 ? 6 : currentWeekDay - 1;\n  let wkStart = new Date(new Date(dt).setDate(dt.getDate() - lessDays));\n  let wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6));\n\n  const updateSchedule = () => {\n    let overlapping = false;\n    let emptyFields = false;\n    let validIntervals = true;\n    let newTimingDates = [];\n    let count = 0;\n    doctorController.getDoctorSchedule(id).then(response => {\n      for (let i = 0; i < timingArray.length; i++) {\n        for (let j = 0; j < daysSelected.length; j++) {\n          if (daysSelected[j] === 1) {\n            newTimingDates = [...newTimingDates, {\n              id: response.data.length + i + count + 1,\n              doctor_fk: parseInt(id),\n              start: util.getDayDate(j) + \"T\" + timingArray[i].start,\n              end: util.getDayDate(j) + \"T\" + timingArray[i].end,\n              loaction: loaction,\n              type: parseInt(timingArray[i].type)\n            }];\n            count++;\n          }\n        }\n      }\n\n      for (let i = 0; i < newTimingDates.length; i++) {\n        if (util.isOverlapping(newTimingDates[i], newTimingDates)) {\n          overlapping = true;\n        }\n\n        if (newTimingDates[i].start === \"\" || newTimingDates[i].end === \"\" || newTimingDates[i].type === \"\") {\n          emptyFields = true;\n        }\n      }\n\n      let success = true;\n\n      if (overlapping) {\n        alert(\"Two intervals are overlapping\");\n        success = false;\n      }\n\n      if (emptyFields || loaction === \"\") {\n        alert(\"Please fill all fields\");\n        success = false;\n      }\n\n      if (daysSelected.filter(day => day === 1).length === 0) {\n        alert(\"Select at least one day\");\n        success = false;\n      }\n\n      if (success) {\n        for (let j = 0; j < newTimingDates.length; j++) {\n          doctorController.addDoctorAppointmentSchedule(newTimingDates[j]);\n        }\n\n        alert(\"Schedule Updated\");\n        navigate(\"/doctor/dashboard/\");\n      }\n    }).then(() => {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 schedule-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Weekly Schedule (From \", wkStart.toString().substring(0, 15), \" into\", \" \", wkEnd.toString().substring(0, 15), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setLocation(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              disabled: true,\n              children: \"Select your location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), doctorData.location.map((l, i) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: l\n              }, \"location\" + i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 26\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add your timings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            className: \"input\",\n            value: \"Add Timing\",\n            onClick: () => addTiming()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex w-100 flex-column justify-content-center\",\n            children: timingArray.map((time, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex  justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  placeholder: \"Start Time\",\n                  type: \"time\",\n                  onChange: e => modifyStartTiming(index, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  placeholder: \"End Time\",\n                  type: \"time\",\n                  onChange: e => modifyEndTiming(index, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => modifyAppointmentsType(index, e.target.value),\n                  className: \"input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    selected: true,\n                    disabled: true,\n                    children: \"Select type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 0,\n                    children: \"Physical\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 1,\n                    children: \"Virtual\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 2,\n                    children: [\"Physical \", \"&\", \" Virtual\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \"X\",\n                  className: \"input close\",\n                  onClick: () => deleteTiming(time.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this)]\n              }, \"time\" + index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select your preffered days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex  align-items-center justify-content-center flex-wrap\",\n              children: daysOfWeek.map((day, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex input align-items-center justify-content-center mx-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: () => updateDaysSelected(i),\n                    type: \"checkbox\",\n                    value: day\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: day\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this)]\n                }, \"day\" + i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: \"Add Appointment Schedule\",\n              className: \"input\",\n              onClick: () => updateSchedule()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ScheduleSettings, \"Sc0nl1S7nHCZlrjUp7tWTB6MZ9g=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ScheduleSettings;\nexport default ScheduleSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScheduleSettings\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/views/doctor/schedule-settings.js"],"names":["useEffect","useState","useParams","doctorController","Layout","moment","useNavigate","util","ScheduleSettings","id","loading","setLoading","doctorData","setDoctorData","name","country","profession_fk","city","Price","location","getDoctorInfo","then","response","data","daysOfWeek","timingIndexCount","setTimingIndexCount","timingArray","setTimingarray","addTiming","temp","start","end","type","console","log","deleteTiming","index","filter","timing","modifyStartTiming","value","modifyEndTiming","modifyAppointmentsType","loaction","setLocation","daysSelected","setDaysSelected","Array","from","length","_","i","updateDaysSelected","navigate","dt","Date","currentWeekDay","getDay","lessDays","wkStart","setDate","getDate","wkEnd","updateSchedule","overlapping","emptyFields","validIntervals","newTimingDates","count","getDoctorSchedule","j","doctor_fk","parseInt","getDayDate","isOverlapping","success","alert","day","addDoctorAppointmentSchedule","toString","substring","e","target","map","l","time"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doctorController } from \"../../controllers/doctor\";\nimport Layout from \"./layout\";\nimport \"../../css/schedule-settings.css\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport { util } from \"../../public/util\";\n\nconst ScheduleSettings = () => {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [doctorData, setDoctorData] = useState({\n    id: -1,\n    name: \"\",\n    country: \"\",\n    profession_fk: -1,\n    city: \"\",\n    Price: \"\",\n    location: [],\n  });\n  useEffect(() => {\n    doctorController\n      .getDoctorInfo(id)\n      .then((response) => {\n        setDoctorData(response.data);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  const [timingIndexCount, setTimingIndexCount] = useState(-1);\n\n  const [timingArray, setTimingarray] = useState([]);\n  const addTiming = () => {\n    setTimingIndexCount(timingIndexCount + 1);\n    let temp = timingArray;\n    temp = [\n      ...temp,\n      { id: timingIndexCount + 1, start: \"\", end: \"\", type: \"\" },\n    ];\n    setTimingarray(temp);\n    console.log(temp);\n  };\n  const deleteTiming = (index) => {\n    console.log(index);\n    let temp = timingArray;\n\n    temp = temp.filter((timing) => timing.id !== index);\n\n    setTimingarray(temp);\n    console.log(timingArray);\n  };\n\n  const modifyStartTiming = (index, value) => {\n    let temp = timingArray;\n    temp[index].start = value;\n    setTimingarray(temp);\n  };\n  const modifyEndTiming = (index, value) => {\n    let temp = timingArray;\n    temp[index].end = value;\n    setTimingarray(temp);\n    console.log(temp);\n  };\n  const modifyAppointmentsType = (index, value) => {\n    let temp = timingArray;\n    temp[index].type = value;\n    setTimingarray(temp);\n  };\n\n  const [loaction, setLocation] = useState(\"\");\n  const [daysSelected, setDaysSelected] = useState(\n    Array.from({ length: 7 }, (_, i) => 0)\n  );\n\n  const updateDaysSelected = (index) => {\n    let temp = daysSelected;\n    temp[index] = temp[index] === 0 ? 1 : 0;\n    setDaysSelected(temp);\n  };\n  const navigate = useNavigate();\n\n  let dt = new Date();\n  let currentWeekDay = dt.getDay();\n  let lessDays = currentWeekDay === 0 ? 6 : currentWeekDay - 1;\n  let wkStart = new Date(new Date(dt).setDate(dt.getDate() - lessDays));\n  let wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6));\n\n  const updateSchedule = () => {\n    let overlapping = false;\n    let emptyFields = false;\n    let validIntervals = true;\n    let newTimingDates = [];\n    let count = 0;\n\n    doctorController\n      .getDoctorSchedule(id)\n      .then((response) => {\n        for (let i = 0; i < timingArray.length; i++) {\n          for (let j = 0; j < daysSelected.length; j++) {\n            if (daysSelected[j] === 1) {\n              newTimingDates = [\n                ...newTimingDates,\n                {\n                  id: response.data.length + i + count + 1,\n                  doctor_fk: parseInt(id),\n                  start: util.getDayDate(j) + \"T\" + timingArray[i].start,\n                  end: util.getDayDate(j) + \"T\" + timingArray[i].end,\n                  loaction: loaction,\n                  type: parseInt(timingArray[i].type),\n                },\n              ];\n\n              count++;\n            }\n          }\n        }\n        for (let i = 0; i < newTimingDates.length; i++) {\n          if (util.isOverlapping(newTimingDates[i], newTimingDates)) {\n            overlapping = true;\n          }\n          if (\n            newTimingDates[i].start === \"\" ||\n            newTimingDates[i].end === \"\" ||\n            newTimingDates[i].type === \"\"\n          ) {\n            emptyFields = true;\n          }\n        }\n        let success = true;\n        if (overlapping) {\n          alert(\"Two intervals are overlapping\");\n          success = false;\n        }\n        if (emptyFields || loaction === \"\") {\n          alert(\"Please fill all fields\");\n          success = false;\n        }\n        if (daysSelected.filter((day) => day === 1).length === 0) {\n          alert(\"Select at least one day\");\n          success = false;\n        }\n        if (success) {\n          for (let j = 0; j < newTimingDates.length; j++) {\n            doctorController.addDoctorAppointmentSchedule(newTimingDates[j]);\n          }\n          alert(\"Schedule Updated\");\n          navigate(\"/doctor/dashboard/\");\n        }\n      })\n      .then(() => {});\n  };\n\n  return (\n    <Layout>\n      {!loading && (\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"col-8 schedule-div\">\n            <h3>\n              Weekly Schedule (From {wkStart.toString().substring(0, 15)} into{\" \"}\n              {wkEnd.toString().substring(0, 15)})\n            </h3>\n            <br />\n            <div className=\"d-flex flex-column\">\n              <span>Location</span>\n              <select onChange={(e) => setLocation(e.target.value)}>\n                <option selected disabled>\n                  Select your location\n                </option>\n                {doctorData.location.map((l, i) => {\n                  return <option key={\"location\" + i}>{l}</option>;\n                })}\n              </select>\n            </div>\n            <br />\n            <div className=\"d-flex flex-column\">\n              <span>Add your timings</span>\n              <input\n                type=\"button\"\n                className=\"input\"\n                value=\"Add Timing\"\n                onClick={() => addTiming()}\n              />\n              <div className=\"d-flex w-100 flex-column justify-content-center\">\n                {timingArray.map((time, index) => {\n                  return (\n                    <div\n                      key={\"time\" + index}\n                      className=\"d-flex  justify-content-between\"\n                    >\n                      <input\n                        className=\"input\"\n                        placeholder=\"Start Time\"\n                        type=\"time\"\n                        onChange={(e) =>\n                          modifyStartTiming(index, e.target.value)\n                        }\n                      />\n                      <input\n                        className=\"input\"\n                        placeholder=\"End Time\"\n                        type=\"time\"\n                        onChange={(e) => modifyEndTiming(index, e.target.value)}\n                      />\n                      <select\n                        onChange={(e) =>\n                          modifyAppointmentsType(index, e.target.value)\n                        }\n                        className=\"input\"\n                      >\n                        <option selected disabled>\n                          Select type\n                        </option>\n                        <option value={0}>Physical</option>\n                        <option value={1}>Virtual</option>\n                        <option value={2}>Physical {\"&\"} Virtual</option>\n                      </select>\n                      <input\n                        type=\"button\"\n                        value={\"X\"}\n                        className=\"input close\"\n                        onClick={() => deleteTiming(time.id)}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              <br />\n              <div className=\"d-flex flex-column\">\n                <label>Select your preffered days</label>\n                <div className=\"d-flex  align-items-center justify-content-center flex-wrap\">\n                  {daysOfWeek.map((day, i) => {\n                    return (\n                      <div\n                        key={\"day\" + i}\n                        className=\"d-flex input align-items-center justify-content-center mx-4\"\n                      >\n                        <input\n                          onChange={() => updateDaysSelected(i)}\n                          type=\"checkbox\"\n                          value={day}\n                        />\n                        <label>{day}</label>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              <br />\n              <div className=\"d-flex flex-column\">\n                <input\n                  type=\"button\"\n                  value={\"Add Appointment Schedule\"}\n                  className=\"input\"\n                  onClick={() => updateSchedule()}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default ScheduleSettings;\n"]},"metadata":{},"sourceType":"module"}