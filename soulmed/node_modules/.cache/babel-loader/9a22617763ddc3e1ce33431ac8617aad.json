{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/price-range.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { css } from \"@emotion/core\";\nimport { motion } from \"framer-motion\";\nimport styled from \"@emotion/styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Knob = styled.div`\n  ${({\n  knobSize\n}) => css`\nwidth: ${knobSize}rem;\nheight: ${knobSize}rem;\nborder-radius: 50%;\nbackground-color: white;\ntop: calc(-50% - 0.5rem);\nposition: absolute;\nbox-shadow: 0 1px 6px 0 rgba(0, 0, 0, 0.15);\ncursor: pointer;\n\n&:nth-of-type(2) {\n  left: -2rem;\n`}\n`;\nconst AnimatedKnob = Knob.withComponent(motion.div);\n_c = AnimatedKnob;\nconst AmountLabels = styled.div`\n  font-size: 0.875rem;\n  background-color: #fafafa;\n  border-radius: 0.5rem;\n  padding: 0.5rem;\n  display: inline-block;\n  margin-bottom: 0.5rem;\n`;\n_c2 = AmountLabels;\nconst Holder = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-items: center;\n`;\n_c3 = Holder;\nconst Track = styled(motion.div)`\n  ${({\n  trackWidth,\n  knobX,\n  knobXSecond,\n  trackWidthInPx\n}) => css`\n    width: ${trackWidth}rem;\n    height: 0.5rem;\n    background-color: #3d5ef8;\n    /* This gradient contains a calculation for the slider track. */\n    background: linear-gradient(\n      to right,\n      #dae3f4 0%,\n      #dae3f4 ${Number((100 * (knobX / trackWidthInPx)).toFixed(2))}%,\n      #3d5ef8 ${Number(100 * (knobX / trackWidthInPx) + 8).toFixed(2)}%,\n      #3d5ef8\n        ${Number((100 * (knobXSecond / trackWidthInPx)).toFixed(2)) - 8 - 0.01}%,\n      #dae3f4 ${Number(100 * (knobXSecond / trackWidthInPx)).toFixed(2)}%\n    );\n    border-radius: 0.25rem;\n    position: relative;\n    margin: 1rem 0 2rem;\n  `}\n`;\n_c4 = Track;\n\nconst Slider = ({ ...props\n}) => {\n  _s();\n\n  const {\n    label,\n    max,\n    setSliderMin,\n    setSliderMax,\n    defaultMinBudget,\n    defaultMaxBudget\n  } = props;\n  const trackLength = 10;\n  const trackWidth = 1.5 * trackLength;\n  const trackWidthInPx = trackWidth * 16; //192\n\n  const knobSize = 2;\n  const knobSizeInPx = knobSize * 16;\n  const knobSeparatorLength = knobSizeInPx * 2.25;\n\n  function getPixelValue(knob) {\n    return knob / max * trackWidthInPx;\n  }\n\n  function getValue(knob) {\n    const value = parseInt((max / (trackWidthInPx / knob)).toFixed(0), 10);\n    return Math.ceil(value / 5) * 5;\n  }\n\n  const [knobX, updateKnobX] = useState(defaultMinBudget ? getPixelValue(defaultMinBudget) : 0);\n  const [knobXSecond, updateKnobXSecond] = useState(defaultMaxBudget ? getPixelValue(defaultMaxBudget) : trackWidthInPx);\n  const constraintsRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(Holder, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      name: \"price-min\",\n      value: (max / (trackWidthInPx / knobX)).toFixed(0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      name: \"price-max\",\n      value: (max / (trackWidthInPx / knobXSecond)).toFixed(0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      css: css`\n          text-align: left;\n          font-weight: bold;\n          margin: 0.5rem 0;\n        `,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AmountLabels, {\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        css: css`\n            margin-bottom: 0.25rem;\n            margin-right: 0.25rem;\n          `,\n        children: knobX > 0 ? Math.ceil(parseInt((max / (trackWidthInPx / knobX)).toFixed(0), 10) / 5) * 5 : \"No min.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), \"-\", /*#__PURE__*/_jsxDEV(\"small\", {\n        css: css`\n            margin-bottom: 0.25rem;\n            margin-left: 0.25rem;\n          `,\n        children: Math.ceil(parseInt((max / (trackWidthInPx / knobXSecond)).toFixed(0), 10) / 5) * 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Track, {\n      ref: constraintsRef,\n      trackWidth: trackWidth,\n      knobX: knobX,\n      knobXSecond: knobXSecond,\n      trackWidthInPx: trackWidthInPx,\n      children: [/*#__PURE__*/_jsxDEV(AnimatedKnob, {\n        knobSize: knobSize,\n        drag: \"x\",\n        initial: {\n          x: knobX\n        },\n        dragMomentum: false,\n        onDragEnd: () => {\n          const minPrice = Number(getValue(knobX));\n          setSliderMin(minPrice);\n        },\n        onDrag: (event, info) => {\n          // Check if the point where you slide is bigger than second knob...\n          // knobSeparatorLength is a magic value for 2rem size of the knobs. This will influence the bounds of the knobs\n          const newValue = info.point.x > knobXSecond - knobSeparatorLength ? knobXSecond - knobSeparatorLength : info.point.x; //Math.ceil(N / 5) * 5; rounds to nearest 5\n\n          updateKnobX(newValue < 0 ? 0 : Math.ceil(newValue / 5) * 5);\n        } // Cant be dragged further than...\n        ,\n        dragConstraints: {\n          left: 0,\n          right: knobXSecond - knobSeparatorLength\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatedKnob, {\n        knobSize: knobSize,\n        drag: \"x\",\n        initial: {\n          x: knobXSecond\n        },\n        dragMomentum: false,\n        onDragEnd: () => {\n          const maxPrice = Number(getValue(knobXSecond));\n          setSliderMax(maxPrice);\n        },\n        onDrag: (event, info) => {\n          // Check if the point where you slide isn't smaller than first knob and not bigger than bounds...\n          const newValue = info.point.x > trackWidthInPx ? trackWidthInPx : info.point.x < knobX + knobSeparatorLength ? knobX + knobSeparatorLength : info.point.x;\n          updateKnobXSecond(Math.ceil(newValue / 5) * 5);\n        },\n        dragConstraints: {\n          left: knobX + knobSeparatorLength,\n          right: trackWidthInPx\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"3OZfZ14WxYM9poQr9FaO7ktxykA=\");\n\n_c5 = Slider;\nexport default Slider;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AnimatedKnob\");\n$RefreshReg$(_c2, \"AmountLabels\");\n$RefreshReg$(_c3, \"Holder\");\n$RefreshReg$(_c4, \"Track\");\n$RefreshReg$(_c5, \"Slider\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/price-range.js"],"names":["React","useRef","useState","css","motion","styled","Knob","div","knobSize","AnimatedKnob","withComponent","AmountLabels","Holder","Track","trackWidth","knobX","knobXSecond","trackWidthInPx","Number","toFixed","Slider","props","label","max","setSliderMin","setSliderMax","defaultMinBudget","defaultMaxBudget","trackLength","knobSizeInPx","knobSeparatorLength","getPixelValue","knob","getValue","value","parseInt","Math","ceil","updateKnobX","updateKnobXSecond","constraintsRef","x","minPrice","event","info","newValue","point","left","right","maxPrice"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { css } from \"@emotion/core\";\nimport { motion } from \"framer-motion\";\nimport styled from \"@emotion/styled\";\n\n\n\nconst Knob = styled.div`\n  ${({ knobSize }) => css`\nwidth: ${knobSize}rem;\nheight: ${knobSize}rem;\nborder-radius: 50%;\nbackground-color: white;\ntop: calc(-50% - 0.5rem);\nposition: absolute;\nbox-shadow: 0 1px 6px 0 rgba(0, 0, 0, 0.15);\ncursor: pointer;\n\n&:nth-of-type(2) {\n  left: -2rem;\n`}\n`;\n\nconst AnimatedKnob = Knob.withComponent(motion.div);\n\nconst AmountLabels = styled.div`\n  font-size: 0.875rem;\n  background-color: #fafafa;\n  border-radius: 0.5rem;\n  padding: 0.5rem;\n  display: inline-block;\n  margin-bottom: 0.5rem;\n`;\n\nconst Holder = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Track = styled(motion.div)`\n  ${({ trackWidth, knobX, knobXSecond, trackWidthInPx }) => css`\n    width: ${trackWidth}rem;\n    height: 0.5rem;\n    background-color: #3d5ef8;\n    /* This gradient contains a calculation for the slider track. */\n    background: linear-gradient(\n      to right,\n      #dae3f4 0%,\n      #dae3f4 ${Number((100 * (knobX / trackWidthInPx)).toFixed(2))}%,\n      #3d5ef8 ${Number(100 * (knobX / trackWidthInPx) + 8).toFixed(2)}%,\n      #3d5ef8\n        ${Number((100 * (knobXSecond / trackWidthInPx)).toFixed(2)) - 8 - 0.01}%,\n      #dae3f4 ${Number(100 * (knobXSecond / trackWidthInPx)).toFixed(2)}%\n    );\n    border-radius: 0.25rem;\n    position: relative;\n    margin: 1rem 0 2rem;\n  `}\n`;\n\nconst Slider  = ({...props}) => {\n  const {\n    label,\n    max,\n    setSliderMin,\n    setSliderMax,\n    defaultMinBudget,\n    defaultMaxBudget\n  } = props;\n\n  const trackLength = 10;\n  const trackWidth = 1.5 * trackLength;\n  const trackWidthInPx = trackWidth * 16; //192\n  const knobSize = 2;\n  const knobSizeInPx = knobSize * 16;\n  const knobSeparatorLength = knobSizeInPx * 2.25;\n\n  function getPixelValue(knob) {\n    return (knob / max) * trackWidthInPx;\n  }\n\n  function getValue(knob) {\n    const value = parseInt(\n      (max / (trackWidthInPx / knob)).toFixed(0),\n      10\n    );\n    return Math.ceil(value / 5) * 5;\n  }\n\n  const [knobX, updateKnobX] = useState(\n    defaultMinBudget ? getPixelValue(defaultMinBudget) : 0\n  );\n  const [knobXSecond, updateKnobXSecond] = useState(\n    defaultMaxBudget ? getPixelValue(defaultMaxBudget) : trackWidthInPx\n  );\n  const constraintsRef = useRef(null);\n\n  return (\n    <Holder>\n      <input\n        type=\"hidden\"\n        name={\"price-min\"}\n        value={(max / (trackWidthInPx / knobX)).toFixed(0)}\n      />\n      <input\n        type=\"hidden\"\n        name={\"price-max\"}\n        value={(max / (trackWidthInPx / knobXSecond)).toFixed(0)}\n      />\n      <p\n        css={css`\n          text-align: left;\n          font-weight: bold;\n          margin: 0.5rem 0;\n        `}\n      >\n        {label}\n      </p>\n      <AmountLabels>\n        <small\n          css={css`\n            margin-bottom: 0.25rem;\n            margin-right: 0.25rem;\n          `}\n        >\n          {knobX > 0\n            ? Math.ceil(\n                parseInt((max / (trackWidthInPx / knobX)).toFixed(0), 10) / 5\n              ) * 5\n            : \"No min.\"}\n        </small>\n        {\"-\"}\n        <small\n          css={css`\n            margin-bottom: 0.25rem;\n            margin-left: 0.25rem;\n          `}\n        >\n          {/* We set the text value for knobXSecond */}\n          {Math.ceil(\n            parseInt((max / (trackWidthInPx / knobXSecond)).toFixed(0), 10) / 5\n          ) * 5}\n        </small>\n      </AmountLabels>\n\n      <Track\n        ref={constraintsRef}\n        trackWidth={trackWidth}\n        knobX={knobX}\n        knobXSecond={knobXSecond}\n        trackWidthInPx={trackWidthInPx}\n      >\n        <AnimatedKnob\n          knobSize={knobSize}\n          drag=\"x\"\n          initial={{\n            x: knobX\n          }}\n          dragMomentum={false}\n          onDragEnd={() => {\n            const minPrice = Number(getValue(knobX));\n            setSliderMin(minPrice);\n          }}\n          onDrag={(event, info) => {\n            // Check if the point where you slide is bigger than second knob...\n            // knobSeparatorLength is a magic value for 2rem size of the knobs. This will influence the bounds of the knobs\n            const newValue =\n              info.point.x > knobXSecond - knobSeparatorLength\n                ? knobXSecond - knobSeparatorLength\n                : info.point.x;\n            //Math.ceil(N / 5) * 5; rounds to nearest 5\n            updateKnobX(newValue < 0 ? 0 : Math.ceil(newValue / 5) * 5);\n          }}\n          // Cant be dragged further than...\n          dragConstraints={{\n            left: 0,\n            right: knobXSecond - knobSeparatorLength\n          }}\n        />\n        <AnimatedKnob\n          knobSize={knobSize}\n          drag=\"x\"\n          initial={{\n            x: knobXSecond\n          }}\n          dragMomentum={false}\n          onDragEnd={() => {\n            const maxPrice = Number(getValue(knobXSecond));\n            setSliderMax(maxPrice);\n          }}\n          onDrag={(event, info) => {\n            // Check if the point where you slide isn't smaller than first knob and not bigger than bounds...\n            const newValue =\n              info.point.x > trackWidthInPx\n                ? trackWidthInPx\n                : info.point.x < knobX + knobSeparatorLength\n                ? knobX + knobSeparatorLength\n                : info.point.x;\n            updateKnobXSecond(Math.ceil(newValue / 5) * 5);\n          }}\n          dragConstraints={{\n            left: knobX + knobSeparatorLength,\n            right: trackWidthInPx\n          }}\n        />\n      </Track>\n    </Holder>\n  );\n};\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}