{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/views/doctor/schedule-settings.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doctorController } from \"../../controllers/doctor\";\nimport Layout from \"./layout\";\nimport \"../../css/schedule-settings.css\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport { util } from \"../../public/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ScheduleSettings = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [schedueList, setSchdeuleList] = useState([]);\n  const [doctorData, setDoctorData] = useState({\n    id: -1,\n    name: \"\",\n    country: \"\",\n    profession_fk: -1,\n    city: \"\",\n    Price: \"\",\n    location: []\n  });\n  const [timingIndexCount, setTimingIndexCount] = useState(-1);\n  const [addTimingDisbaled, setAddTimingDisabled] = useState(false);\n  useEffect(() => {\n    doctorController.getDoctorInfo(id).then(response => {\n      setDoctorData(response.data);\n    }).then(() => {\n      doctorController.getDoctorSchedule(id).then(res => {\n        setSchdeuleList(res.data);\n        setTimingIndexCount(res.data.length > 0 ? res.data[res.data.length - 1].id + 1 : 1);\n      }).then(() => {\n        setLoading(false);\n      });\n    });\n  }, []);\n  const daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  const [timingArray, setTimingarray] = useState([]);\n\n  const addTiming = () => {\n    setAddTimingDisabled(true);\n    let temp = timingArray;\n    temp = [...temp, {\n      id: timingIndexCount,\n      start: \"\",\n      end: \"\",\n      type: 0\n    }];\n    setTimingarray(temp);\n    setTimingIndexCount(timingIndexCount + 1);\n    console.log(timingArray);\n  };\n\n  const deleteTiming = (id, index) => {\n    if (index === timingArray.length - 1) {\n      setAddTimingDisabled(false);\n    }\n\n    let temp = timingArray;\n    temp = timingArray.filter(timing => timing.id !== id);\n    setTimingarray(temp);\n  };\n\n  const modifyStartTiming = (index, value) => {\n    let temp = [...timingArray];\n    temp[index].start = value;\n    setTimingarray(temp);\n  };\n\n  const modifyEndTiming = (index, value) => {\n    let temp = [...timingArray];\n    temp[index].end = value;\n    setTimingarray(temp);\n\n    if (temp[temp.length - 1].start !== \"\") {\n      setAddTimingDisabled(false);\n    }\n  };\n\n  const modifyAppointmentsType = (index, value) => {\n    let temp = [...timingArray];\n    temp[index].type = value;\n    setTimingarray(temp);\n  };\n\n  const [location, setLocation] = useState(\"\");\n  const [daysSelected, setDaysSelected] = useState([]);\n  const [previousWeekSchedule, setPreviousWeekSchedule] = useState(true);\n  const navigate = useNavigate();\n\n  const importPreviousWeekScheduke = () => {\n    let thisWeekScheduleList = [];\n\n    for (let i = -7; i < 0; i++) {\n      let previousWeekDay = new Date(util.getDayDate(i));\n\n      for (let j = 0; j < schedueList.length; j++) {\n        if (util.sameDay(new Date(schedueList[j].start), previousWeekDay)) {\n          let daySchedule = schedueList[j];\n          daySchedule.id = timingIndexCount;\n          daySchedule.start = moment(new Date(daySchedule.start).setDate(previousWeekDay.getDate() + 7)).format(\"YYYY-MM-DDTkk:mm:ss\");\n          daySchedule.end = moment(new Date(daySchedule.end).setDate(previousWeekDay.getDate() + 7)).format(\"YYYY-MM-DDTkk:mm:ss\");\n          thisWeekScheduleList.push(daySchedule);\n          setTimingIndexCount(timingIndexCount + 1 + j);\n        }\n      }\n    }\n\n    for (let j = 0; j < thisWeekScheduleList.length; j++) {\n      doctorController.addDoctorAppointmentSchedule(thisWeekScheduleList[j]);\n    }\n\n    alert(\"Schedule Imported Successfully\");\n    navigate(\"/doctor/dashboard/\");\n  };\n\n  const sendScheduleRequests = () => {\n    if (checkScheduleDataValidity()) {\n      Promise.all(sendRequestData().then(arrayResponse => console.log(\"dowhatever\", arrayResponse)));\n    } else {\n      alert(\"Fill all fields, time overlappings and time ranges validity\");\n    }\n  };\n\n  const sendRequestData = async () => {\n    let promises = [];\n    let count = 0;\n\n    for (let i = 0; i < daysSelected.length; i++) {\n      promises = [];\n      let list = getDaySchedule(i, count);\n      count += list.length + 1;\n      console.log(list);\n\n      for (let j = 0; j < list.length; j++) {\n        promises.push(doctorController.addDoctorAppointmentSchedule(list[j]));\n      }\n\n      await Promise.all(promises).then(() => {\n        console.log(daysSelected + \" Done...\");\n      });\n    }\n  };\n\n  const getDaySchedule = ({\n    daySelectedIndex,\n    count\n  }) => {\n    let newTimingDates = [];\n    let increment = count;\n\n    for (let i = 0; i < timingArray.length; i++) {\n      newTimingDates = [...newTimingDates, {\n        id: null,\n        doctor_fk: parseInt(id),\n        start: moment(util.getDayDate(daysOfWeek.indexOf(daysSelected[daySelectedIndex]))).format(\"YYYY-MM-DD\") + \"T\" + timingArray[i].start,\n        end: moment(util.getDayDate(daysOfWeek.indexOf(daysSelected[daySelectedIndex]))).format(\"YYYY-MM-DD\") + \"T\" + timingArray[i].end,\n        location: location,\n        type: parseInt(timingArray[i].type)\n      }];\n      increment++;\n    }\n\n    return newTimingDates;\n  };\n\n  const checkScheduleDataValidity = () => {\n    let overlapping = false;\n    let emptyFields = false;\n    let validIntervals = true;\n    let newEvent = {};\n    let newTimingArray = [];\n\n    for (let i = 0; i < timingArray.length; i++) {\n      newEvent = {\n        start: moment(util.getDayDate(daysOfWeek.indexOf(daysSelected[0]))).format(\"YYYY-MM-DD\") + \"T\" + timingArray[i].start,\n        end: moment(util.getDayDate(daysOfWeek.indexOf(daysSelected[0]))).format(\"YYYY-MM-DD\") + \"T\" + timingArray[i].end\n      };\n      newTimingArray.push(newEvent);\n    }\n\n    for (let j = 0; j < newTimingArray.length; j++) {\n      if (util.isOverlapping(newTimingArray[j], newTimingArray)) {\n        overlapping = true;\n      }\n\n      if (!util.isValidTimingInterval(newTimingArray[j].start, newTimingArray[j].end)) {\n        validIntervals = false;\n      }\n    }\n\n    if (overlapping || emptyFields || location === \"\" || daysSelected.length === 0 || !validIntervals) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = (e, data) => {\n    const {\n      name,\n      checked\n    } = e.target;\n\n    if (checked) {\n      // if cheked and selectall checkbox add all fileds to selectedList\n      if (name === \"allSelect\") {\n        let temp = daysOfWeek;\n        setDaysSelected(temp);\n      } else {\n        // if cheked and specific checkbox add specific field to selectedList\n        setDaysSelected([...daysSelected, name]);\n      }\n    } else {\n      // if uncheked and selectall checkbox add remove all fileds from selectedList\n      if (name === \"allSelect\") {\n        setDaysSelected([]);\n      } else {\n        // if uncheked and specific checkbox remove specific field from selectedList\n        let tempSelected = daysSelected.filter((item, i) => item !== name);\n        setDaysSelected(tempSelected);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 schedule-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Weekly Schedule (From\", \" \", util.getDayDate(0).toString().substring(0, 15), \" into\", \" \", util.getDayDate(6).toString().substring(0, 15), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Do you want to import the schedule of previous week?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex input align-items-center justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center justify-content-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => setPreviousWeekSchedule(e.target.checked ? true : false),\n                type: \"radio\",\n                name: \"pws\",\n                checked: previousWeekSchedule\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"YES\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center justify-content-center mx-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => setPreviousWeekSchedule(e.target.checked ? false : true),\n                type: \"radio\",\n                checked: !previousWeekSchedule,\n                name: \"pws\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"NO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: \"Import\",\n              className: \"input\",\n              onClick: () => importPreviousWeekScheduke()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), !previousWeekSchedule && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setLocation(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                disabled: true,\n                children: \"Select your location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this), doctorData.location.map((l, i) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: l\n                }, \"location\" + i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 30\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Appointment Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              className: \"input\",\n              value: \"Add Timing\",\n              disabled: addTimingDisbaled,\n              onClick: () => addTiming()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex w-100 flex-column justify-content-center\",\n              children: timingArray.map((time, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex  justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input\",\n                    placeholder: \"Start Time \",\n                    type: \"time\",\n                    value: timingArray[index].start,\n                    onChange: e => modifyStartTiming(index, e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input\",\n                    placeholder: \"End Time\",\n                    type: \"time\",\n                    value: timingArray[index].end,\n                    onChange: e => modifyEndTiming(index, e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => modifyAppointmentsType(index, e.target.value),\n                    value: timingArray[index].type,\n                    className: \"input\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      selected: true,\n                      disabled: true,\n                      children: \"Select type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: 0,\n                      children: \"Physical\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: 1,\n                      children: \"Virtual\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: 2,\n                      children: \"Physical or Virtual\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: 3,\n                      children: \"Meeting\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: 4,\n                      children: \"Lunch Break\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"button\",\n                    value: \"X\",\n                    className: \"input close\",\n                    onClick: () => deleteTiming(time.id, index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 27\n                  }, this)]\n                }, \"time\" + index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Select your preffered days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex  align-items-center justify-content-center mx-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"allSelect\",\n                  onChange: e => handleChange(e),\n                  type: \"checkbox\",\n                  checked: daysSelected.length === 7\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Select All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex  align-items-center justify-content-center flex-wrap\",\n                children: daysOfWeek.map((day, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex input align-items-center justify-content-center mx-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      name: day,\n                      onChange: e => handleChange(e),\n                      type: \"checkbox\",\n                      value: day,\n                      checked: daysSelected.some((item, j) => item === day)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: day\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 29\n                    }, this)]\n                  }, \"day\" + i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-column\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \"Validate\",\n                  className: \"input\",\n                  onClick: () => sendScheduleRequests()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ScheduleSettings, \"Ohz02HzcuGZQ9gqDNAJd543AjTk=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ScheduleSettings;\nexport default ScheduleSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScheduleSettings\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/views/doctor/schedule-settings.js"],"names":["useEffect","useState","useParams","doctorController","Layout","moment","useNavigate","util","ScheduleSettings","id","loading","setLoading","schedueList","setSchdeuleList","doctorData","setDoctorData","name","country","profession_fk","city","Price","location","timingIndexCount","setTimingIndexCount","addTimingDisbaled","setAddTimingDisabled","getDoctorInfo","then","response","data","getDoctorSchedule","res","length","daysOfWeek","timingArray","setTimingarray","addTiming","temp","start","end","type","console","log","deleteTiming","index","filter","timing","modifyStartTiming","value","modifyEndTiming","modifyAppointmentsType","setLocation","daysSelected","setDaysSelected","previousWeekSchedule","setPreviousWeekSchedule","navigate","importPreviousWeekScheduke","thisWeekScheduleList","i","previousWeekDay","Date","getDayDate","j","sameDay","daySchedule","setDate","getDate","format","push","addDoctorAppointmentSchedule","alert","sendScheduleRequests","checkScheduleDataValidity","Promise","all","sendRequestData","arrayResponse","promises","count","list","getDaySchedule","daySelectedIndex","newTimingDates","increment","doctor_fk","parseInt","indexOf","overlapping","emptyFields","validIntervals","newEvent","newTimingArray","isOverlapping","isValidTimingInterval","handleChange","e","checked","target","tempSelected","item","toString","substring","map","l","time","day","some"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doctorController } from \"../../controllers/doctor\";\nimport Layout from \"./layout\";\nimport \"../../css/schedule-settings.css\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport { util } from \"../../public/util\";\n\nconst ScheduleSettings = () => {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [schedueList, setSchdeuleList] = useState([]);\n  const [doctorData, setDoctorData] = useState({\n    id: -1,\n    name: \"\",\n    country: \"\",\n    profession_fk: -1,\n    city: \"\",\n    Price: \"\",\n    location: [],\n  });\n  const [timingIndexCount, setTimingIndexCount] = useState(-1);\n  const [addTimingDisbaled, setAddTimingDisabled] = useState(false);\n  useEffect(() => {\n    doctorController\n      .getDoctorInfo(id)\n      .then((response) => {\n        setDoctorData(response.data);\n      })\n      .then(() => {\n        doctorController\n          .getDoctorSchedule(id)\n          .then((res) => {\n            setSchdeuleList(res.data);\n            setTimingIndexCount(\n              res.data.length > 0 ? res.data[res.data.length - 1].id + 1 : 1\n            );\n          })\n          .then(() => {\n            setLoading(false);\n          });\n      });\n  }, []);\n\n  const daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\n  const [timingArray, setTimingarray] = useState([]);\n  const addTiming = () => {\n    setAddTimingDisabled(true);\n    let temp = timingArray;\n    temp = [...temp, { id: timingIndexCount, start: \"\", end: \"\", type: 0 }];\n    setTimingarray(temp);\n\n    setTimingIndexCount(timingIndexCount + 1);\n    console.log(timingArray);\n  };\n  const deleteTiming = (id, index) => {\n    if (index === timingArray.length - 1) {\n      setAddTimingDisabled(false);\n    }\n    let temp = timingArray;\n    temp = timingArray.filter((timing) => timing.id !== id);\n    setTimingarray(temp);\n  };\n\n  const modifyStartTiming = (index, value) => {\n    let temp = [...timingArray];\n    temp[index].start = value;\n\n    setTimingarray(temp);\n  };\n  const modifyEndTiming = (index, value) => {\n    let temp = [...timingArray];\n    temp[index].end = value;\n\n    setTimingarray(temp);\n    if (temp[temp.length - 1].start !== \"\") {\n      setAddTimingDisabled(false);\n    }\n  };\n  const modifyAppointmentsType = (index, value) => {\n    let temp = [...timingArray];\n    temp[index].type = value;\n\n    setTimingarray(temp);\n  };\n\n  const [location, setLocation] = useState(\"\");\n  const [daysSelected, setDaysSelected] = useState([]);\n  const [previousWeekSchedule, setPreviousWeekSchedule] = useState(true);\n\n  const navigate = useNavigate();\n\n  const importPreviousWeekScheduke = () => {\n    let thisWeekScheduleList = [];\n    for (let i = -7; i < 0; i++) {\n      let previousWeekDay = new Date(util.getDayDate(i));\n\n      for (let j = 0; j < schedueList.length; j++) {\n        if (util.sameDay(new Date(schedueList[j].start), previousWeekDay)) {\n          let daySchedule = schedueList[j];\n          daySchedule.id = timingIndexCount;\n          daySchedule.start = moment(\n            new Date(daySchedule.start).setDate(previousWeekDay.getDate() + 7)\n          ).format(\"YYYY-MM-DDTkk:mm:ss\");\n          daySchedule.end = moment(\n            new Date(daySchedule.end).setDate(previousWeekDay.getDate() + 7)\n          ).format(\"YYYY-MM-DDTkk:mm:ss\");\n\n          thisWeekScheduleList.push(daySchedule);\n          setTimingIndexCount(timingIndexCount + 1 + j);\n        }\n      }\n    }\n\n    for (let j = 0; j < thisWeekScheduleList.length; j++) {\n      doctorController.addDoctorAppointmentSchedule(thisWeekScheduleList[j]);\n    }\n    alert(\"Schedule Imported Successfully\");\n    navigate(\"/doctor/dashboard/\");\n  };\n\n  const sendScheduleRequests = () => {\n    if (checkScheduleDataValidity()) {\n      Promise.all(\n        sendRequestData().then((arrayResponse) =>\n          console.log(\"dowhatever\", arrayResponse)\n        )\n      );\n    } else {\n      alert(\"Fill all fields, time overlappings and time ranges validity\");\n    }\n  };\n\n  const sendRequestData = async () => {\n    let promises = [];\n    let count = 0;\n    for (let i = 0; i < daysSelected.length; i++) {\n      promises = [];\n      let list = getDaySchedule(i, count);\n      count += list.length + 1;\n      console.log(list);\n      for (let j = 0; j < list.length; j++) {\n        promises.push(doctorController.addDoctorAppointmentSchedule(list[j]));\n      }\n      await Promise.all(promises).then(() => {\n        console.log(daysSelected + \" Done...\");\n      });\n\n    }\n  };\n\n  const getDaySchedule = ({ daySelectedIndex, count }) => {\n    let newTimingDates = [];\n    let increment = count;\n\n    for (let i = 0; i < timingArray.length; i++) {\n      newTimingDates = [\n        ...newTimingDates,\n        {\n          id: null,\n          doctor_fk: parseInt(id),\n          start:\n            moment(\n              util.getDayDate(\n                daysOfWeek.indexOf(daysSelected[daySelectedIndex])\n              )\n            ).format(\"YYYY-MM-DD\") +\n            \"T\" +\n            timingArray[i].start,\n          end:\n            moment(\n              util.getDayDate(\n                daysOfWeek.indexOf(daysSelected[daySelectedIndex])\n              )\n            ).format(\"YYYY-MM-DD\") +\n            \"T\" +\n            timingArray[i].end,\n          location: location,\n          type: parseInt(timingArray[i].type),\n        },\n      ];\n      increment++;\n    }\n\n    return newTimingDates;\n  };\n\n  const checkScheduleDataValidity = () => {\n    let overlapping = false;\n    let emptyFields = false;\n    let validIntervals = true;\n    let newEvent = {};\n    let newTimingArray = [];\n    for (let i = 0; i < timingArray.length; i++) {\n      newEvent = {\n        start:\n          moment(util.getDayDate(daysOfWeek.indexOf(daysSelected[0]))).format(\n            \"YYYY-MM-DD\"\n          ) +\n          \"T\" +\n          timingArray[i].start,\n        end:\n          moment(util.getDayDate(daysOfWeek.indexOf(daysSelected[0]))).format(\n            \"YYYY-MM-DD\"\n          ) +\n          \"T\" +\n          timingArray[i].end,\n      };\n      newTimingArray.push(newEvent);\n    }\n    for (let j = 0; j < newTimingArray.length; j++) {\n      if (util.isOverlapping(newTimingArray[j], newTimingArray)) {\n        overlapping = true;\n      }\n\n      if (\n        !util.isValidTimingInterval(\n          newTimingArray[j].start,\n          newTimingArray[j].end\n        )\n      ) {\n        validIntervals = false;\n      }\n    }\n\n    if (\n      overlapping ||\n      emptyFields ||\n      location === \"\" ||\n      daysSelected.length === 0 ||\n      !validIntervals\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleChange = (e, data) => {\n    const { name, checked } = e.target;\n    if (checked) {\n      // if cheked and selectall checkbox add all fileds to selectedList\n      if (name === \"allSelect\") {\n        let temp = daysOfWeek;\n        setDaysSelected(temp);\n      } else {\n        // if cheked and specific checkbox add specific field to selectedList\n        setDaysSelected([...daysSelected, name]);\n      }\n    } else {\n      // if uncheked and selectall checkbox add remove all fileds from selectedList\n      if (name === \"allSelect\") {\n        setDaysSelected([]);\n      } else {\n        // if uncheked and specific checkbox remove specific field from selectedList\n        let tempSelected = daysSelected.filter((item, i) => item !== name);\n\n        setDaysSelected(tempSelected);\n      }\n    }\n  };\n\n  return (\n    <Layout>\n      {!loading && (\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"col-8 schedule-div\">\n            <h3>\n              Weekly Schedule (From{\" \"}\n              {util.getDayDate(0).toString().substring(0, 15)} into{\" \"}\n              {util.getDayDate(6).toString().substring(0, 15)})\n            </h3>\n            <br />\n            <div className=\"d-flex flex-column\">\n              <span>Do you want to import the schedule of previous week?</span>\n              <div className=\"d-flex input align-items-center justify-content-center\">\n                <div className=\"d-flex align-items-center justify-content-center\">\n                  <input\n                    onChange={(e) =>\n                      setPreviousWeekSchedule(e.target.checked ? true : false)\n                    }\n                    type=\"radio\"\n                    name=\"pws\"\n                    checked={previousWeekSchedule}\n                  />\n                  <label>YES</label>\n                </div>\n                <div className=\"d-flex align-items-center justify-content-center mx-4\">\n                  <input\n                    onChange={(e) =>\n                      setPreviousWeekSchedule(e.target.checked ? false : true)\n                    }\n                    type=\"radio\"\n                    checked={!previousWeekSchedule}\n                    name=\"pws\"\n                  />\n                  <label>NO</label>\n                </div>\n              </div>\n              <div className=\"d-flex flex-column\">\n                <input\n                  type=\"button\"\n                  value={\"Import\"}\n                  className=\"input\"\n                  onClick={() => importPreviousWeekScheduke()}\n                />\n              </div>\n            </div>\n            {!previousWeekSchedule && (\n              <>\n                <div className=\"d-flex flex-column\">\n                  <span>Location</span>\n                  <select onChange={(e) => setLocation(e.target.value)}>\n                    <option selected disabled>\n                      Select your location\n                    </option>\n                    {doctorData.location.map((l, i) => {\n                      return <option key={\"location\" + i}>{l}</option>;\n                    })}\n                  </select>\n                </div>\n                <br />\n                <div className=\"d-flex flex-column\">\n                  <span>Appointment Schedule</span>\n                  <input\n                    type=\"button\"\n                    className=\"input\"\n                    value=\"Add Timing\"\n                    disabled={addTimingDisbaled}\n                    onClick={() => addTiming()}\n                  />\n                  <div className=\"d-flex w-100 flex-column justify-content-center\">\n                    {timingArray.map((time, index) => {\n                      return (\n                        <div\n                          key={\"time\" + index}\n                          className=\"d-flex  justify-content-between\"\n                        >\n                          <input\n                            className=\"input\"\n                            placeholder={\"Start Time \"}\n                            type=\"time\"\n                            value={timingArray[index].start}\n                            onChange={(e) =>\n                              modifyStartTiming(index, e.target.value)\n                            }\n                          />\n                          <input\n                            className=\"input\"\n                            placeholder=\"End Time\"\n                            type=\"time\"\n                            value={timingArray[index].end}\n                            onChange={(e) =>\n                              modifyEndTiming(index, e.target.value)\n                            }\n                          />\n                          <select\n                            onChange={(e) =>\n                              modifyAppointmentsType(index, e.target.value)\n                            }\n                            value={timingArray[index].type}\n                            className=\"input\"\n                          >\n                            <option selected disabled>\n                              Select type\n                            </option>\n                            <option value={0}>Physical</option>\n                            <option value={1}>Virtual</option>\n                            <option value={2}>Physical or Virtual</option>\n                            <option value={3}>Meeting</option>\n                            <option value={4}>Lunch Break</option>\n                          </select>\n                          <input\n                            type=\"button\"\n                            value={\"X\"}\n                            className=\"input close\"\n                            onClick={() => deleteTiming(time.id, index)}\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                  <br />\n                  <div className=\"d-flex flex-column\">\n                    <label>Select your preffered days</label>\n                    <div className=\"d-flex  align-items-center justify-content-center mx-4\">\n                      <input\n                        name=\"allSelect\"\n                        onChange={(e) => handleChange(e)}\n                        type=\"checkbox\"\n                        checked={daysSelected.length === 7}\n                      />\n                      <label>Select All</label>\n                    </div>\n                    <br />\n                    <div className=\"d-flex  align-items-center justify-content-center flex-wrap\">\n                      {daysOfWeek.map((day, i) => {\n                        return (\n                          <div\n                            key={\"day\" + i}\n                            className=\"d-flex input align-items-center justify-content-center mx-4\"\n                          >\n                            <input\n                              name={day}\n                              onChange={(e) => handleChange(e)}\n                              type=\"checkbox\"\n                              value={day}\n                              checked={daysSelected.some(\n                                (item, j) => item === day\n                              )}\n                            />\n                            <label>{day}</label>\n                          </div>\n                        );\n                      })}\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                      <input\n                        type=\"button\"\n                        value={\"Validate\"}\n                        className=\"input\"\n                        onClick={() => sendScheduleRequests()}\n                      />\n                    </div>\n                  </div>\n                  <br />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default ScheduleSettings;\n"]},"metadata":{},"sourceType":"module"}