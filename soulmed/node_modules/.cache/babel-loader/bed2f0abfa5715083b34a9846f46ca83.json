{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/pagination.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React from \"react\";\nimport { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\nimport LeftChevron from \"../icons/left-chevron\";\nimport RightChevron from \"../icons/right-chevron\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Pagination({ ...props\n}) {\n  _s();\n\n  const [items, setItems] = React.useState(props.children);\n  const [selected, setSelected] = React.useState([]);\n  const [position, setPosition] = React.useState(0);\n\n  const isItemSelected = id => !!selected.find(el => el === id);\n\n  const handleClick = id => ({\n    getItemById,\n    scrollToItem\n  }) => {\n    const itemSelected = isItemSelected(id);\n    setSelected(currentSelected => itemSelected ? currentSelected.filter(el => el !== id) : currentSelected.concat(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ScrollMenu, {\n    LeftArrow: LeftArrow,\n    RightArrow: RightArrow,\n    children: items.map((item, id) => {\n      /*#__PURE__*/\n      _jsxDEV(Card, {\n        itemId: id // NOTE: itemId is required for track items\n        ,\n        title: id,\n        onClick: handleClick(id),\n        selected: isItemSelected(id),\n        item: item\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"05j8aKDHd4ZoyrmIoVEmA15rwQc=\");\n\n_c = Pagination;\n\nfunction LeftArrow() {\n  _s2();\n\n  const {\n    isFirstItemVisible,\n    scrollPrev\n  } = React.useContext(VisibilityContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    disabled: isFirstItemVisible,\n    onClick: () => scrollPrev(),\n    children: /*#__PURE__*/_jsxDEV(LeftChevron, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(LeftArrow, \"7jIBA3f6wpQrSoSpOqBzBD7M7QQ=\");\n\n_c2 = LeftArrow;\n\nfunction RightArrow() {\n  _s3();\n\n  const {\n    isLastItemVisible,\n    scrollNext\n  } = React.useContext(VisibilityContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    disabled: isLastItemVisible,\n    onClick: () => scrollNext(),\n    children: /*#__PURE__*/_jsxDEV(RightChevron, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(RightArrow, \"F/wm/0gG0EqvotRFx60gSLDQ574=\");\n\n_c3 = RightArrow;\n\nfunction Card({\n  onClick,\n  selected,\n  title,\n  itemId,\n  item\n}) {\n  _s4();\n\n  const visibility = React.useContext(VisibilityContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => onClick(visibility),\n    style: {\n      width: \"160px\"\n    },\n    tabIndex: 0,\n    children: item\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(Card, \"wzCNnUK2b4GmsbLaFyuDONa1PJI=\");\n\n_c4 = Card;\nexport default Pagination;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Pagination\");\n$RefreshReg$(_c2, \"LeftArrow\");\n$RefreshReg$(_c3, \"RightArrow\");\n$RefreshReg$(_c4, \"Card\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/pagination.js"],"names":["React","ScrollMenu","VisibilityContext","LeftChevron","RightChevron","Pagination","props","items","setItems","useState","children","selected","setSelected","position","setPosition","isItemSelected","id","find","el","handleClick","getItemById","scrollToItem","itemSelected","currentSelected","filter","concat","LeftArrow","RightArrow","map","item","isFirstItemVisible","scrollPrev","useContext","isLastItemVisible","scrollNext","Card","onClick","title","itemId","visibility","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,iCAA9C;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;AAEA,SAASC,UAAT,CAAoB,EAAE,GAAGC;AAAL,CAApB,EAAkC;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAeH,KAAK,CAACI,QAArB,CAA1B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,KAAK,CAACS,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0Bd,KAAK,CAACS,QAAN,CAAe,CAAf,CAAhC;;AAEA,QAAMM,cAAc,GAAIC,EAAD,IAAQ,CAAC,CAACL,QAAQ,CAACM,IAAT,CAAeC,EAAD,IAAQA,EAAE,KAAKF,EAA7B,CAAjC;;AAEA,QAAMG,WAAW,GACdH,EAAD,IACA,CAAC;AAAEI,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAD,KAAmC;AACjC,UAAMC,YAAY,GAAGP,cAAc,CAACC,EAAD,CAAnC;AAEAJ,IAAAA,WAAW,CAAEW,eAAD,IACVD,YAAY,GACRC,eAAe,CAACC,MAAhB,CAAwBN,EAAD,IAAQA,EAAE,KAAKF,EAAtC,CADQ,GAERO,eAAe,CAACE,MAAhB,CAAuBT,EAAvB,CAHK,CAAX;AAKD,GAVH;;AAYA,sBACE,QAAC,UAAD;AAAY,IAAA,SAAS,EAAEU,SAAvB;AAAkC,IAAA,UAAU,EAAEC,UAA9C;AAAA,cACGpB,KAAK,CAACqB,GAAN,CAAU,CAACC,IAAD,EAAOb,EAAP,KAAc;AACvB;AAAA,cAAC,IAAD;AACE,QAAA,MAAM,EAAEA,EADV,CACc;AADd;AAEE,QAAA,KAAK,EAAEA,EAFT;AAIE,QAAA,OAAO,EAAEG,WAAW,CAACH,EAAD,CAJtB;AAKE,QAAA,QAAQ,EAAED,cAAc,CAACC,EAAD,CAL1B;AAME,QAAA,IAAI,EAAEa;AANR,SAGOb,EAHP;AAAA;AAAA;AAAA;AAAA;AAQD,KATA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAjCQX,U;;KAAAA,U;;AAmCT,SAASqB,SAAT,GAAqB;AAAA;;AACnB,QAAM;AAAEI,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MACJ/B,KAAK,CAACgC,UAAN,CAAiB9B,iBAAjB,CADF;AAGA,sBACE;AAAK,IAAA,QAAQ,EAAE4B,kBAAf;AAAmC,IAAA,OAAO,EAAE,MAAMC,UAAU,EAA5D;AAAA,2BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IATQL,S;;MAAAA,S;;AAWT,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEM,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAoClC,KAAK,CAACgC,UAAN,CAAiB9B,iBAAjB,CAA1C;AAEA,sBACE;AAAK,IAAA,QAAQ,EAAE+B,iBAAf;AAAkC,IAAA,OAAO,EAAE,MAAMC,UAAU,EAA3D;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IARQP,U;;MAAAA,U;;AAUT,SAASQ,IAAT,CAAc;AAAEC,EAAAA,OAAF;AAAWzB,EAAAA,QAAX;AAAqB0B,EAAAA,KAArB;AAA4BC,EAAAA,MAA5B;AAAoCT,EAAAA;AAApC,CAAd,EAA0D;AAAA;;AACxD,QAAMU,UAAU,GAAGvC,KAAK,CAACgC,UAAN,CAAiB9B,iBAAjB,CAAnB;AAEA,sBACE;AACE,IAAA,OAAO,EAAE,MAAMkC,OAAO,CAACG,UAAD,CADxB;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE;AADF,KAFT;AAKE,IAAA,QAAQ,EAAE,CALZ;AAAA,cAOGX;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;IAdQM,I;;MAAAA,I;AAgBT,eAAe9B,UAAf","sourcesContent":["import React from \"react\";\nimport { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\nimport LeftChevron from \"../icons/left-chevron\";\nimport RightChevron from \"../icons/right-chevron\";\n\nfunction Pagination({ ...props }) {\n  const [items, setItems] = React.useState(props.children);\n  const [selected, setSelected] = React.useState([]);\n  const [position, setPosition] = React.useState(0);\n\n  const isItemSelected = (id) => !!selected.find((el) => el === id);\n\n  const handleClick =\n    (id) =>\n    ({ getItemById, scrollToItem }) => {\n      const itemSelected = isItemSelected(id);\n\n      setSelected((currentSelected) =>\n        itemSelected\n          ? currentSelected.filter((el) => el !== id)\n          : currentSelected.concat(id)\n      );\n    };\n\n  return (\n    <ScrollMenu LeftArrow={LeftArrow} RightArrow={RightArrow}>\n      {items.map((item, id) => {\n        <Card\n          itemId={id} // NOTE: itemId is required for track items\n          title={id}\n          key={id}\n          onClick={handleClick(id)}\n          selected={isItemSelected(id)}\n          item={item}\n        />;\n      })}\n    </ScrollMenu>\n  );\n}\n\nfunction LeftArrow() {\n  const { isFirstItemVisible, scrollPrev } =\n    React.useContext(VisibilityContext);\n\n  return (\n    <div disabled={isFirstItemVisible} onClick={() => scrollPrev()}>\n      <LeftChevron />\n    </div>\n  );\n}\n\nfunction RightArrow() {\n  const { isLastItemVisible, scrollNext } = React.useContext(VisibilityContext);\n\n  return (\n    <div disabled={isLastItemVisible} onClick={() => scrollNext()}>\n      <RightChevron />\n    </div>\n  );\n}\n\nfunction Card({ onClick, selected, title, itemId, item }) {\n  const visibility = React.useContext(VisibilityContext);\n\n  return (\n    <div\n      onClick={() => onClick(visibility)}\n      style={{\n        width: \"160px\",\n      }}\n      tabIndex={0}\n    >\n      {item}\n    </div>\n  );\n}\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}