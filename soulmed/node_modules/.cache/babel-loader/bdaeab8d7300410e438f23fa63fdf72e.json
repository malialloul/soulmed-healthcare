{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\n\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = ({ ...props\n}) => {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    setEvents(props.events);\n  }, [props.events]);\n\n  const handleDateSelect = selectInfo => {\n    let title = prompt(\"Please enter a new title for your event\");\n    let calendarApi = selectInfo.view.calendar;\n    calendarApi.unselect(); // clear date selection\n\n    if (title) {\n      calendarApi.addEvent({\n        id: 1,\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay\n      });\n    }\n  };\n\n  const handleEventClick = clickInfo => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FullCalendar, {\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n    },\n    editable: true,\n    initialView: \"dayGridMonth\",\n    selectable: true,\n    select: handleDateSelect,\n    selectMirror: true,\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    weekends: false,\n    events: events,\n    eventClick: handleEventClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/calendar.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Calendar","props","events","setEvents","handleDateSelect","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","start","startStr","end","endStr","allDay","handleEventClick","clickInfo","window","confirm","event","remove","left","center","right"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CAAgD;;AAChD,OAAOC,aAAP,MAA0B,uBAA1B,C,CAAmD;;AACnD,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B,C,CAA2D;;;;AAE3D,MAAMC,QAAQ,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAkB;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS,CAACF,KAAK,CAACC,MAAP,CAAT;AACD,GAFQ,EAEN,CAACD,KAAK,CAACC,MAAP,CAFM,CAAT;;AAIA,QAAME,gBAAgB,GAAIC,UAAD,IAAgB;AACvC,QAAIC,KAAK,GAAGC,MAAM,CAAC,yCAAD,CAAlB;AACA,QAAIC,WAAW,GAAGH,UAAU,CAACI,IAAX,CAAgBC,QAAlC;AAEAF,IAAAA,WAAW,CAACG,QAAZ,GAJuC,CAIf;;AAExB,QAAIL,KAAJ,EAAW;AACTE,MAAAA,WAAW,CAACI,QAAZ,CAAqB;AACnBC,QAAAA,EAAE,EAAE,CADe;AAEnBP,QAAAA,KAFmB;AAGnBQ,QAAAA,KAAK,EAAET,UAAU,CAACU,QAHC;AAInBC,QAAAA,GAAG,EAAEX,UAAU,CAACY,MAJG;AAKnBC,QAAAA,MAAM,EAAEb,UAAU,CAACa;AALA,OAArB;AAOD;AACF,GAfD;;AAiBA,QAAMC,gBAAgB,GAAIC,SAAD,IAAe;AACtC,QACEC,MAAM,CAACC,OAAP,CACG,8CAA6CF,SAAS,CAACG,KAAV,CAAgBjB,KAAM,GADtE,CADF,EAIE;AACAc,MAAAA,SAAS,CAACG,KAAV,CAAgBC,MAAhB;AACD;AACF,GARD;;AAUA,sBACE,QAAC,YAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE,iBADO;AAEbC,MAAAA,MAAM,EAAE,OAFK;AAGbC,MAAAA,KAAK,EAAE;AAHM,KADjB;AAME,IAAA,QAAQ,EAAE,IANZ;AAOE,IAAA,WAAW,EAAC,cAPd;AAQE,IAAA,UAAU,EAAE,IARd;AASE,IAAA,MAAM,EAAEvB,gBATV;AAUE,IAAA,YAAY,EAAE,IAVhB;AAWE,IAAA,OAAO,EAAE,CAACP,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,CAXX;AAYE,IAAA,QAAQ,EAAE,KAZZ;AAaE,IAAA,MAAM,EAAEG,MAbV;AAcE,IAAA,UAAU,EAAEiB;AAdd;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnDD;;GAAMnB,Q;;KAAAA,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nconst Calendar = ({ ...props }) => {\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    setEvents(props.events);\n  }, [props.events]);\n\n  const handleDateSelect = (selectInfo) => {\n    let title = prompt(\"Please enter a new title for your event\");\n    let calendarApi = selectInfo.view.calendar;\n\n    calendarApi.unselect(); // clear date selection\n\n    if (title) {\n      calendarApi.addEvent({\n        id: 1,\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay,\n      });\n    }\n  };\n\n  const handleEventClick = (clickInfo) => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  return (\n    <FullCalendar\n      headerToolbar={{\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n      }}\n      editable={true}\n      initialView=\"dayGridMonth\"\n      selectable={true}\n      select={handleDateSelect}\n      selectMirror={true}\n      plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n      weekends={false}\n      events={events}\n      eventClick={handleEventClick}\n    />\n  );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}