{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\n\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport { Modal } from \"react-bootstrap\";\nimport \"../css/calendar.css\";\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calendar = ({ ...props\n}) => {\n  _s();\n\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    filledIn: false,\n    events: props.events\n  });\n  const [bookAppointmentSelected, setBookAppointmentSelected] = useState(false);\n\n  const handleBookApptBtn = () => {\n    setBookAppointmentSelected(true);\n    setShowAppointmentModal(true);\n  };\n\n  const createEvent = () => {\n    let tempData = data;\n    let events = tempData.events;\n\n    if (!bookAppointmentSelected) {\n      let endTime = new Date(tempData.start + \" \" + datetime); //console.log(endTime)\n\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      console.log(endTime);\n      endTime = endTime.getFullYear() + \"-\" + (endTime.getMonth() + 1) + \"-\" + endTime.getDate() + \"T\" + endTime.getHours() + \":\" + endTime.getMinutes() + \":\" + endTime.getSeconds();\n      console.log(endTime);\n      events = [...events, {\n        title: appointmentText,\n        start: tempData.start + \"T\" + datetime,\n        end: endTime\n      }];\n      tempData.events = events;\n    } else {\n      events = [...events, {\n        title: appointmentText,\n        start: datetime,\n        end: datetime\n      }];\n    }\n\n    setDatetime(\"\");\n    setAppointmentText(\"\");\n    tempData.events = events;\n    setData(tempData);\n    setShowAppointmentModal(false);\n    setBookAppointmentSelected(false);\n  };\n\n  const handleDateSelect = selectInfo => {\n    let tempData = data;\n    tempData.start = selectInfo.startStr;\n    tempData.end = selectInfo.endStr;\n    setShowAppointmentModal(true);\n    setData(tempData);\n  };\n\n  const handleEventClick = clickInfo => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n    }\n  };\n\n  const workSpec = [{\n    daysOfWeek: [1, 2, 3, 4],\n    startTime: \"08:00\",\n    endTime: \"11:00\"\n  }, {\n    daysOfWeek: [5],\n    startTime: \"09:00\",\n    endTime: \"12:00\"\n  }];\n  const workMin = workSpec.map(item => item.startTime).sort().shift();\n  const workMax = workSpec.map(item => item.endTime).sort().pop();\n  const workDays = [...new Set(workSpec.flatMap(item => item.daysOfWeek))];\n  const hideDays = [...Array(7).keys()].filter(day => !workDays.includes(day));\n\n  let calendar = /*#__PURE__*/_jsxDEV(FullCalendar, {\n    headerToolbar: {\n      left: \"prev,next,today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n    },\n    initialView: \"dayGridMonth\",\n    height: 600,\n    selectable: true,\n    select: handleDateSelect,\n    selectMirror: true,\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    weekends: false,\n    events: data.events,\n    businessHours: workSpec,\n    slotMinTime: workMin,\n    slotMaxTime: workMax,\n    hiddenDays: hideDays,\n    slotDuration: \"00:30\",\n    eventConstraint: \"businessHours\" //  eventClick={handleEventClick}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n\n  const hideModal = () => {\n    let tempData = data;\n    tempData.start = \"\";\n    setData(tempData);\n    setShowAppointmentModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [calendar, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleBookApptBtn(),\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: () => hideModal(),\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Add Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"subtitle\",\n              children: \"It's quick and easy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Appoitment description\",\n            className: \"input\",\n            onChange: e => setAppointmentText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            defaultValue: \"10:00:00\",\n            type: data.start === \"\" ? \"datetime-local\" : \"time\",\n            step: \"1\",\n            onChange: e => setDatetime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createEvent(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Calendar, \"Nmxs88xVekmVoLnpNIm/gsCNXWY=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/calendar.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","format","Calendar","props","newEvent","setNewEvent","appointmentText","setAppointmentText","startDate","setStartDate","Date","datetime","setDatetime","added","setAdded","showAppointmentModal","setShowAppointmentModal","data","setData","allFavs","favObj","start","end","filledIn","events","bookAppointmentSelected","setBookAppointmentSelected","handleBookApptBtn","createEvent","tempData","endTime","setMinutes","getMinutes","console","log","getFullYear","getMonth","getDate","getHours","getSeconds","title","handleDateSelect","selectInfo","startStr","endStr","handleEventClick","clickInfo","window","confirm","event","remove","workSpec","daysOfWeek","startTime","workMin","map","item","sort","shift","workMax","pop","workDays","Set","flatMap","hideDays","Array","keys","filter","day","includes","calendar","left","center","right","hideModal","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport { Modal } from \"react-bootstrap\";\nimport \"../css/calendar.css\";\nimport { format } from \"date-fns\";\n\nconst Calendar = ({ ...props }) => {\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    filledIn: false,\n    events: props.events,\n  });\n\n  const [bookAppointmentSelected, setBookAppointmentSelected] = useState(false);\n  const handleBookApptBtn = () => {\n    setBookAppointmentSelected(true);\n    setShowAppointmentModal(true);\n  };\n\n  const createEvent = () => {\n    let tempData = data;\n    let events = tempData.events;\n\n    if (!bookAppointmentSelected) {\n      let endTime = new Date(tempData.start + \" \" + datetime);\n      //console.log(endTime)\n\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      console.log(endTime);\n\n      endTime =\n        endTime.getFullYear() +\n        \"-\" +\n        (endTime.getMonth() + 1) +\n        \"-\" +\n        endTime.getDate() +\n        \"T\" +\n        endTime.getHours() +\n        \":\" +\n        endTime.getMinutes() +\n        \":\" +\n        endTime.getSeconds();\n      console.log(endTime);\n\n      events = [\n        ...events,\n        {\n          title: appointmentText,\n          start: tempData.start + \"T\" + datetime,\n          end: endTime,\n        },\n      ];\n      tempData.events = events;\n    } else {\n      events = [\n        ...events,\n        {\n          title: appointmentText,\n          start: datetime,\n          end: datetime,\n        },\n      ];\n    }\n    setDatetime(\"\");\n    setAppointmentText(\"\");\n    tempData.events = events;\n    setData(tempData);\n    setShowAppointmentModal(false);\n    setBookAppointmentSelected(false);\n  };\n\n  const handleDateSelect = (selectInfo) => {\n    let tempData = data;\n    tempData.start = selectInfo.startStr;\n    tempData.end = selectInfo.endStr;\n    setShowAppointmentModal(true);\n    setData(tempData);\n  };\n\n  const handleEventClick = (clickInfo) => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  const workSpec = [\n    {\n      daysOfWeek: [1, 2, 3, 4],\n      startTime: \"08:00\",\n      endTime: \"11:00\",\n    },\n    {\n      daysOfWeek: [5],\n      startTime: \"09:00\",\n      endTime: \"12:00\",\n    },\n  ];\n\n  const workMin = workSpec\n    .map((item) => item.startTime)\n    .sort()\n    .shift();\n  const workMax = workSpec\n    .map((item) => item.endTime)\n    .sort()\n    .pop();\n  const workDays = [...new Set(workSpec.flatMap((item) => item.daysOfWeek))];\n  const hideDays = [...Array(7).keys()].filter(\n    (day) => !workDays.includes(day)\n  );\n\n  let calendar = (\n    <FullCalendar\n      headerToolbar={{\n        left: \"prev,next,today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n      }}\n      initialView=\"dayGridMonth\"\n      height={600}\n      selectable={true}\n      select={handleDateSelect}\n      selectMirror={true}\n      plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n      weekends={false}\n      events={data.events}\n      businessHours={workSpec}\n      slotMinTime={workMin}\n      slotMaxTime={workMax}\n      hiddenDays={hideDays}\n      slotDuration={\"00:30\"}\n      eventConstraint=\"businessHours\"\n\n      //  eventClick={handleEventClick}\n    />\n  );\n\n  const hideModal = () => {\n    let tempData = data;\n    tempData.start = \"\";\n    setData(tempData);\n    setShowAppointmentModal(false);\n  };\n\n  return (\n    <>\n      {calendar}\n      <br />\n      <button onClick={() => handleBookApptBtn()}>Book Appointment</button>\n\n      <Modal\n        show={showAppointmentModal}\n        onHide={() => hideModal()}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <div className=\"signup-title\">\n              <span className=\"title\">Add Appointment</span> <br />\n              <span className=\"subtitle\">It's quick and easy.</span>\n            </div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"d-flex flex-column\">\n            <input\n              type=\"text\"\n              placeholder=\"Appoitment description\"\n              className=\"input\"\n              onChange={(e) => setAppointmentText(e.target.value)}\n            />\n            <input\n              className=\"input\"\n              defaultValue=\"10:00:00\"\n              type={data.start === \"\" ? \"datetime-local\" : \"time\"}\n              step=\"1\"\n              onChange={(e) => setDatetime(e.target.value)}\n            />\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <button onClick={() => createEvent()}>Add</button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}