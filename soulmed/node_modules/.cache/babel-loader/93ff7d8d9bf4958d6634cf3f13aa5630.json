{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/components/registration-modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport SelectYears from \"../inputs/select-years\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/registration-modal.css\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationModal = ({ ...props\n}) => {\n  _s();\n\n  var _errors$firstName, _errors$lastName, _errors$email, _errors$password, _errors$phone_number;\n\n  const schema = yup.object().shape({\n    firstName: yup.string().email().required()\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState,\n    watch,\n    control\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const {\n    errors,\n    isDirty,\n    isSubmitting,\n    isValid\n  } = formState;\n  const password = useRef();\n  password.current = watch(\"password\", \"\");\n\n  const onSubmitHandler = data => {\n    console.log({\n      data\n    });\n    reset();\n  };\n\n  const isValidEmail = email => // eslint-disable-next-line no-useless-escape\n  /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n\n  const isValidPassword = password => {\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(password);\n  };\n\n  const isValidPhoneNumber = phone_number => {\n    /^[0-9]*$/.test(phone_number);\n  };\n\n  const [termsChecked, setTermsChecked] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"subtitle\",\n            children: \"It's quick and easy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmitHandler),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-column d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                placeholder: \"prefix\",\n                ...register(\"prefix\", {\n                  validate: value => value !== \"\"\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: true,\n                  disabled: true,\n                  children: \"Prefix\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Mr.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Ms.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Mrs.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Dr.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Prof.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.prefix && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Select a prefix\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"First Name\",\n                  className: \"input full-width\",\n                  ...register(\"firstName\", {\n                    pattern: /^[A-Za-z]+$/i,\n                    validate: value => value !== \"\" && new RegExp(/^[A-Za-z]+$/i).test(value)\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"pattern\" && \"Invalid Format, special characters are not allowed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Last Name\",\n                  className: \"input full-width\",\n                  ...register(\"lastName\", {\n                    pattern: /^[A-Za-z]+$/i,\n                    validate: value => value !== \"\" && new RegExp(/^[A-Za-z]+$/i).test(value)\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"pattern\" && \"Invalid Format, special characters are not allowed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              required: true,\n              className: \"input full-width\",\n              ...register(\"email\", {\n                pattern: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                validate: value => value !== \"\" && isValidEmail(value)\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"pattern\" && \"Invalid email format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"New Password\",\n              className: \"input full-width\",\n              ...register(\"password\", {\n                pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n                validate: value => value !== \"\" && isValidPassword(value)\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === \"pattern\" && \"Invalid format, please retype password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              className: \"input full-width\",\n              ...register(\"confirm_password\", {\n                validate: value => value === password.current || \"The passwords do not match\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errors.confirm_password && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: errors.confirm_password.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            ...register(\"dob\", {\n              validate: value => value !== \"\" && value !== null && new Date() - new Date(value) >= 0\n            }),\n            render: ({\n              field: {\n                onChange,\n                value\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"dob full-width\",\n                onChange: onChange,\n                required: true,\n                selected: value,\n                placeholderText: \"dd/mm/yyy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", { ...register(\"country\", {\n                validate: value => value !== \"\"\n              }),\n              required: true,\n              className: \"w-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                disabled: true,\n                selected: true,\n                value: \"\",\n                children: \"Select your country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Lebanon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"US\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"France\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errors.country && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Select a country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input\",\n                disabled: true,\n                value: \"+961\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Phone Number\",\n                className: \"input full-width\",\n                ...register(\"phone_number\", {\n                  pattern: /^[0-9]*$/,\n                  validate: value => value !== \"\" && isValidPhoneNumber(value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: ((_errors$phone_number = errors.phone_number) === null || _errors$phone_number === void 0 ? void 0 : _errors$phone_number.type) === \"pattern\" && \"Invalid format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Terms and conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center form-check w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                value: \"terms_and_conditions\",\n                onClick: e => setTermsChecked(e.target.checked),\n                ...register(\"terms_and_conditions\", {\n                  validate: value => termsChecked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"I agree with the \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"\",\n                  children: \" terms and condition \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group d-flex flex-column w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Newsletter subscription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center form-check w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"I agree with the \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"\",\n                  children: \" terms and condition \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"signup-btn d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"btn\",\n                type: \"submit\",\n                disabled: !isDirty || !isValid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationModal, \"ga9N+wfcK6wecHwQjhOADk6l/U4=\", false, function () {\n  return [useForm];\n});\n\n_c = RegistrationModal;\nexport default RegistrationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationModal\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/components/registration-modal.js"],"names":["React","useState","useRef","Modal","SelectYears","useForm","Controller","DatePicker","yupResolver","yup","RegistrationModal","props","schema","object","shape","firstName","string","email","required","register","handleSubmit","reset","formState","watch","control","mode","errors","isDirty","isSubmitting","isValid","password","current","onSubmitHandler","data","console","log","isValidEmail","test","isValidPassword","isValidPhoneNumber","phone_number","termsChecked","setTermsChecked","validate","value","prefix","pattern","RegExp","type","lastName","confirm_password","message","Date","field","onChange","country","e","target","checked"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport SelectYears from \"../inputs/select-years\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/registration-modal.css\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst RegistrationModal = ({ ...props }) => {\n  const schema = yup.object().shape({\n    firstName: yup.string().email().required(),\n  });\n  const { register, handleSubmit, reset, formState, watch, control } = useForm({\n    mode: \"onChange\",\n  });\n  const { errors, isDirty, isSubmitting, isValid } = formState;\n  const password = useRef();\n  password.current = watch(\"password\", \"\");\n\n  const onSubmitHandler = (data) => {\n    console.log({ data });\n    reset();\n  };\n\n  const isValidEmail = (email) =>\n    // eslint-disable-next-line no-useless-escape\n    /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n\n  const isValidPassword = (password) => {\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(password);\n  };\n\n  const isValidPhoneNumber = (phone_number) => {\n    /^[0-9]*$/.test(phone_number);\n  };\n\n  const [termsChecked, setTermsChecked] = useState(false);\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          <div className=\"signup-title\">\n            <span className=\"title\">Sign Up</span> <br />\n            <span className=\"subtitle\">It's quick and easy.</span>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"signup-form\">\n          <form onSubmit={handleSubmit(onSubmitHandler)}>\n            <div className=\"form-group d-flex justify-content-between\">\n              <div className=\"flex-column d-flex\">\n                <select\n                  placeholder=\"prefix\"\n                  {...register(\"prefix\", {\n                    validate: (value) => value !== \"\",\n                  })}\n                >\n                  <option value=\"\" selected disabled>\n                    Prefix\n                  </option>\n                  <option>Mr.</option>\n                  <option>Ms.</option>\n                  <option>Mrs.</option>\n                  <option>Dr.</option>\n                  <option>Prof.</option>\n                </select>\n                <div className=\"error\">\n                  {errors.prefix && <p>Select a prefix</p>}\n                </div>\n              </div>\n\n              <div className=\"form-group d-flex flex-column\">\n                <div className=\"d-flex\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    className=\"input full-width\"\n                    {...register(\"firstName\", {\n                      pattern: /^[A-Za-z]+$/i,\n\n                      validate: (value) =>\n                        value !== \"\" && new RegExp(/^[A-Za-z]+$/i).test(value),\n                    })}\n                  />\n                </div>\n                <div className=\"error\">\n                  {errors.firstName?.type === \"pattern\" &&\n                    \"Invalid Format, special characters are not allowed\"}\n                </div>\n              </div>\n\n              <div className=\"form-group d-flex flex-column\">\n                <div className=\"d-flex\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    className=\"input full-width\"\n                    {...register(\"lastName\", {\n                      pattern: /^[A-Za-z]+$/i,\n\n                      validate: (value) =>\n                        value !== \"\" && new RegExp(/^[A-Za-z]+$/i).test(value),\n                    })}\n                  />\n                </div>\n                <div className=\"error\">\n                  {errors.lastName?.type === \"pattern\" &&\n                    \"Invalid Format, special characters are not allowed\"}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-group d-flex flex-column\">\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n                className=\"input full-width\"\n                {...register(\"email\", {\n                  pattern: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                  validate: (value) => value !== \"\" && isValidEmail(value),\n                })}\n              />\n              <div className=\"error\">\n                {errors.email?.type === \"pattern\" && \"Invalid email format\"}\n              </div>\n            </div>\n\n            <div className=\"form-group d-flex flex-column\">\n              <input\n                type=\"text\"\n                placeholder=\"New Password\"\n                className=\"input full-width\"\n                {...register(\"password\", {\n                  pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n                  validate: (value) => value !== \"\" && isValidPassword(value),\n                })}\n              />\n              <div className=\"error\">\n                {errors.password?.type === \"pattern\" &&\n                  \"Invalid format, please retype password\"}\n              </div>\n            </div>\n\n            <div className=\"form-group d-flex flex-column\">\n              <input\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                className=\"input full-width\"\n                {...register(\"confirm_password\", {\n                  validate: (value) =>\n                    value === password.current || \"The passwords do not match\",\n                })}\n              />\n              <div className=\"error\">\n                {errors.confirm_password && (\n                  <p>{errors.confirm_password.message}</p>\n                )}\n              </div>\n            </div>\n\n            <Controller\n              control={control}\n              {...register(\"dob\", {\n                validate: (value) =>\n                  value !== \"\" &&\n                  value !== null &&\n                  new Date() - new Date(value) >= 0,\n              })}\n              render={({ field: { onChange, value } }) => {\n                return (\n                  <DatePicker\n                    className=\"dob full-width\"\n                    onChange={onChange}\n                    required\n                    selected={value}\n                    placeholderText=\"dd/mm/yyy\"\n                  />\n                );\n              }}\n            />\n\n            <div className=\"form-group d-flex flex-column\">\n              <select\n                {...register(\"country\", {\n                  validate: (value) => value !== \"\",\n                })}\n                required\n                className=\"w-100\"\n              >\n                <option disabled selected value=\"\">\n                  Select your country\n                </option>\n                <option>Lebanon</option>\n                <option>US</option>\n                <option>France</option>\n              </select>\n              <div className=\"error\">\n                {errors.country && <p>Select a country</p>}\n              </div>\n            </div>\n\n            <div className=\"form-group d-flex flex-column\">\n              <div className=\"d-flex\">\n                <input type=\"text\" className=\"input\" disabled value=\"+961\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Phone Number\"\n                  className=\"input full-width\"\n                  {...register(\"phone_number\", {\n                    pattern: /^[0-9]*$/,\n                    validate: (value) =>\n                      value !== \"\" && isValidPhoneNumber(value),\n                  })}\n                />\n              </div>\n              <div className=\"error\">\n                {errors.phone_number?.type === \"pattern\" && \"Invalid format\"}\n              </div>\n            </div>\n\n            <div className=\"form-group flex-column\">\n              <span>Terms and conditions</span>\n              <div className=\"d-flex align-items-center form-check w-full\">\n                <input\n                  type=\"checkbox\"\n                  value=\"terms_and_conditions\"\n                  onClick={(e) => setTermsChecked(e.target.checked)}\n                  {...register(\"terms_and_conditions\", {\n                    validate: (value) => termsChecked,\n                  })}\n                />\n                <label>\n                  I agree with the <a href=\"\"> terms and condition </a>\n                </label>\n              </div>\n            </div>\n\n            <div className=\"form-group d-flex flex-column w-full\">\n              <span>Newsletter subscription</span>\n              <div className=\"d-flex align-items-center form-check w-full\">\n                <input type=\"checkbox\" />\n                <label>\n                  I agree with the <a href=\"\"> terms and condition </a>\n                </label>\n              </div>\n            </div>\n\n            <div className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"signup-btn d-flex justify-content-center\">\n                <input\n                  className=\"btn\"\n                  type=\"submit\"\n                  disabled={!isDirty || !isValid}\n                />\n              </div>\n            </div>\n          </form>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default RegistrationModal;\n"]},"metadata":{},"sourceType":"module"}