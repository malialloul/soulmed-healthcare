{"ast":null,"code":"import { welcomeConroller } from \"../controllers/welcome-page\";\n\nconst isValidEmail = email => // eslint-disable-next-line no-useless-escape\n/^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n\nconst isValidPassword = password => {\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(password);\n};\n\nconst isValidPhoneNumber = phone_number => {\n  /^[0-9]*$/.test(phone_number);\n};\n\nconst isValidName = firstName => {\n  /^[A-Za-z]+$/i.test(firstName);\n};\n\nconst showItem = (item, searchText) => {\n  let show = false;\n\n  if (searchText === \"\") {\n    return true;\n  }\n\n  Object.keys(item).map((innerAttr, index) => {\n    if ((item[innerAttr] + \"\").indexOf(searchText) >= 0) {\n      show = true;\n    }\n  });\n  return show;\n};\n\nconst getProfessionAndCategoriesNames = profession_id => {\n  return welcomeConroller.getInfoByQuery().then(response => {\n    let res = response.data;\n    let list = [];\n\n    for (let i = 0; i < res.length; i++) {\n      let json = {};\n      welcomeConroller.getProfession(res[i].profession_fk).then(pr => {\n        console.log(pr.data);\n        welcomeConroller.getCategory(res[i].category_fk).then(cat => {\n          json[\"profession_name\"] = pr.data[0].name;\n          json[\"category_name\"] = cat.data[0].name;\n          json[\"userId\"] = res[i].id;\n          list.push(json);\n        });\n      });\n    }\n\n    return list;\n  });\n};\n\nexport const util = {\n  isValidEmail,\n  isValidName,\n  isValidPassword,\n  isValidPhoneNumber,\n  showItem,\n  getProfessionAndCategoriesNames\n};","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/public/util.js"],"names":["welcomeConroller","isValidEmail","email","test","isValidPassword","password","isValidPhoneNumber","phone_number","isValidName","firstName","showItem","item","searchText","show","Object","keys","map","innerAttr","index","indexOf","getProfessionAndCategoriesNames","profession_id","getInfoByQuery","then","response","res","data","list","i","length","json","getProfession","profession_fk","pr","console","log","getCategory","category_fk","cat","name","id","push","util"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,6BAAjC;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IACnB;AACA,kDAAkDC,IAAlD,CAAuDD,KAAvD,CAFF;;AAIA,MAAME,eAAe,GAAIC,QAAD,IAAc;AACpC,mDAAiDF,IAAjD,CAAsDE,QAAtD;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,YAAD,IAAkB;AAC3C,aAAWJ,IAAX,CAAgBI,YAAhB;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAIC,SAAD,IAAe;AACjC,iBAAeN,IAAf,CAAoBM,SAApB;AACD,CAFD;;AAIA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;AACrC,MAAIC,IAAI,GAAG,KAAX;;AACA,MAAID,UAAU,KAAK,EAAnB,EAAuB;AACrB,WAAO,IAAP;AACD;;AACDE,EAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,GAAlB,CAAsB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC1C,QAAI,CAACP,IAAI,CAACM,SAAD,CAAJ,GAAkB,EAAnB,EAAuBE,OAAvB,CAA+BP,UAA/B,KAA8C,CAAlD,EAAqD;AACnDC,MAAAA,IAAI,GAAG,IAAP;AACD;AACF,GAJD;AAMA,SAAOA,IAAP;AACD,CAZD;;AAcA,MAAMO,+BAA+B,GAAIC,aAAD,IAAmB;AACzD,SAAOrB,gBAAgB,CAACsB,cAAjB,GAAkCC,IAAlC,CAAwCC,QAAD,IAAc;AAE1D,QAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAIE,IAAI,GAAG,EAAX;AACA9B,MAAAA,gBAAgB,CAAC+B,aAAjB,CAA+BN,GAAG,CAACG,CAAD,CAAH,CAAOI,aAAtC,EAAqDT,IAArD,CAA2DU,EAAD,IAAQ;AAChEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,EAAE,CAACP,IAAf;AAEA1B,QAAAA,gBAAgB,CAACoC,WAAjB,CAA6BX,GAAG,CAACG,CAAD,CAAH,CAAOS,WAApC,EAAiDd,IAAjD,CAAuDe,GAAD,IAAS;AAC7DR,UAAAA,IAAI,CAAC,iBAAD,CAAJ,GAA0BG,EAAE,CAACP,IAAH,CAAQ,CAAR,EAAWa,IAArC;AACAT,UAAAA,IAAI,CAAC,eAAD,CAAJ,GAAwBQ,GAAG,CAACZ,IAAJ,CAAS,CAAT,EAAYa,IAApC;AACAT,UAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiBL,GAAG,CAACG,CAAD,CAAH,CAAOY,EAAxB;AACAb,UAAAA,IAAI,CAACc,IAAL,CAAUX,IAAV;AACD,SALD;AAMD,OATD;AAUD;;AACD,WAAOH,IAAP;AACD,GAlBM,CAAP;AAmBD,CApBD;;AAsBA,OAAO,MAAMe,IAAI,GAAG;AAClBzC,EAAAA,YADkB;AAElBO,EAAAA,WAFkB;AAGlBJ,EAAAA,eAHkB;AAIlBE,EAAAA,kBAJkB;AAKlBI,EAAAA,QALkB;AAMlBU,EAAAA;AANkB,CAAb","sourcesContent":["import { welcomeConroller } from \"../controllers/welcome-page\";\n\nconst isValidEmail = (email) =>\n  // eslint-disable-next-line no-useless-escape\n  /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n\nconst isValidPassword = (password) => {\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(password);\n};\n\nconst isValidPhoneNumber = (phone_number) => {\n  /^[0-9]*$/.test(phone_number);\n};\n\nconst isValidName = (firstName) => {\n  /^[A-Za-z]+$/i.test(firstName);\n};\n\nconst showItem = (item, searchText) => {\n  let show = false;\n  if (searchText === \"\") {\n    return true;\n  }\n  Object.keys(item).map((innerAttr, index) => {\n    if ((item[innerAttr] + \"\").indexOf(searchText) >= 0) {\n      show = true;\n    }\n  });\n\n  return show;\n};\n\nconst getProfessionAndCategoriesNames = (profession_id) => {\n  return welcomeConroller.getInfoByQuery().then((response) => {\n\n    let res = response.data;\n    let list = [];\n    for (let i = 0; i < res.length; i++) {\n      let json = {};\n      welcomeConroller.getProfession(res[i].profession_fk).then((pr) => {\n        console.log(pr.data)\n\n        welcomeConroller.getCategory(res[i].category_fk).then((cat) => {\n          json[\"profession_name\"] = pr.data[0].name;\n          json[\"category_name\"] = cat.data[0].name;\n          json[\"userId\"] = res[i].id;\n          list.push(json);\n        });\n      });\n    }\n    return list;\n  });\n};\n\nexport const util = {\n  isValidEmail,\n  isValidName,\n  isValidPassword,\n  isValidPhoneNumber,\n  showItem,\n  getProfessionAndCategoriesNames,\n};\n"]},"metadata":{},"sourceType":"module"}