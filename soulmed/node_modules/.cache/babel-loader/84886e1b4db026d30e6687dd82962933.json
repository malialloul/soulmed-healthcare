{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\n\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport { Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calendar = ({ ...props\n}) => {\n  _s();\n\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    filledIn: false,\n    events: props.events\n  });\n\n  const appointmentModal = /*#__PURE__*/_jsxDEV(Modal, {\n    show: data.filledIn,\n    onHide: () => setShowAppointmentModal(false),\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: \"Add Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"subtitle\",\n            children: \"It's quick and easy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Appoitment description\",\n          className: \"input\",\n          onChange: e => setAppointmentText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          defaultValue: startDate,\n          type: \"datetime-local\",\n          onChange: e => setDatetime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => createEvent(),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n\n  const createEvent = () => {\n    let tempData = data;\n    let events = tempData.events;\n    events = [...events, {\n      title: appointmentText,\n      start: tempData.start,\n      end: tempData.end\n    }];\n    tempData.events = events;\n    setData(tempData);\n    toggleFilledIn();\n  };\n\n  const toggleFilledIn = () => {\n    let tempData = data;\n    tempData.filledIn = false;\n    setData(tempData);\n  };\n\n  const handleDateSelect = selectInfo => {\n    let tempData = data;\n    tempData.start = selectInfo.startStr;\n    tempData.end = selectInfo.endStr;\n    tempData.filledIn = true;\n    setData(tempData);\n  };\n\n  const handleEventClick = clickInfo => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n    }\n  };\n\n  let calendar = /*#__PURE__*/_jsxDEV(FullCalendar, {\n    headerToolbar: {\n      left: \"prev,next,today,myCustomButton\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n    },\n    editable: true,\n    initialView: \"dayGridMonth\",\n    selectable: true,\n    select: handleDateSelect,\n    selectMirror: true,\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    weekends: false,\n    events: data.events,\n    eventClick: handleEventClick,\n    customButtons: {\n      myCustomButton: {\n        text: \"Book Appointment\",\n        click: function () {}\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [calendar, appointmentModal]\n  }, void 0, true);\n};\n\n_s(Calendar, \"sihXvzHRXzP9z1nJCiM2ZEVrjkA=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/calendar.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","Calendar","props","newEvent","setNewEvent","appointmentText","setAppointmentText","startDate","setStartDate","Date","datetime","setDatetime","added","setAdded","showAppointmentModal","setShowAppointmentModal","data","setData","allFavs","favObj","start","end","filledIn","events","appointmentModal","e","target","value","createEvent","tempData","title","toggleFilledIn","handleDateSelect","selectInfo","startStr","endStr","handleEventClick","clickInfo","window","confirm","event","remove","calendar","left","center","right","myCustomButton","text","click"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CAAgD;;AAChD,OAAOC,aAAP,MAA0B,uBAA1B,C,CAAmD;;AACnD,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B,C,CAA2D;;AAC3D,SAASC,KAAT,QAAsB,iBAAtB;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAkB;AAAA;;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAIe,IAAJ,EAAD,CAA1C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACoB,oBAAD,EAAuBC,uBAAvB,IAAkDrB,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC;AAC/BwB,IAAAA,OAAO,EAAE,EADsB;AAE/BC,IAAAA,MAAM,EAAE,EAFuB;AAG/BC,IAAAA,KAAK,EAAE,EAHwB;AAI/BC,IAAAA,GAAG,EAAE,EAJ0B;AAK/BC,IAAAA,QAAQ,EAAE,KALqB;AAM/BC,IAAAA,MAAM,EAAErB,KAAK,CAACqB;AANiB,GAAD,CAAhC;;AASA,QAAMC,gBAAgB,gBACpB,QAAC,KAAD;AACE,IAAA,IAAI,EAAER,IAAI,CAACM,QADb;AAEE,IAAA,MAAM,EAAE,MAAMP,uBAAuB,CAAC,KAAD,CAFvC;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,uBAAgB,+BAJlB;AAKE,IAAA,QAAQ,MALV;AAAA,4BAOE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,+BAAhB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,oBACiD;AAAA;AAAA;AAAA;AAAA,kBADjD,eAEE;AAAM,YAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAeE,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,wBAFd;AAGE,UAAA,SAAS,EAAC,OAHZ;AAIE,UAAA,QAAQ,EAAGU,CAAD,IAAOnB,kBAAkB,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJrC;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,SAAS,EAAC,OADZ;AAEE,UAAA,YAAY,EAAEpB,SAFhB;AAGE,UAAA,IAAI,EAAC,gBAHP;AAIE,UAAA,QAAQ,EAAGkB,CAAD,IAAOd,WAAW,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF,eA+BE,QAAC,KAAD,CAAO,MAAP;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMC,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAsCA,QAAMA,WAAW,GAAG,MAAM;AACxB,QAAIC,QAAQ,GAAGb,IAAf;AACA,QAAIO,MAAM,GAAGM,QAAQ,CAACN,MAAtB;AACAA,IAAAA,MAAM,GAAG,CACP,GAAGA,MADI,EAEP;AACEO,MAAAA,KAAK,EAAEzB,eADT;AAEEe,MAAAA,KAAK,EAAES,QAAQ,CAACT,KAFlB;AAGEC,MAAAA,GAAG,EAAEQ,QAAQ,CAACR;AAHhB,KAFO,CAAT;AAQAQ,IAAAA,QAAQ,CAACN,MAAT,GAAkBA,MAAlB;AACAN,IAAAA,OAAO,CAACY,QAAD,CAAP;AACAE,IAAAA,cAAc;AACf,GAdD;;AAgBA,QAAMA,cAAc,GAAG,MAAM;AAC3B,QAAIF,QAAQ,GAAGb,IAAf;AACAa,IAAAA,QAAQ,CAACP,QAAT,GAAoB,KAApB;AACAL,IAAAA,OAAO,CAACY,QAAD,CAAP;AACD,GAJD;;AAMA,QAAMG,gBAAgB,GAAIC,UAAD,IAAgB;AACvC,QAAIJ,QAAQ,GAAGb,IAAf;AACAa,IAAAA,QAAQ,CAACT,KAAT,GAAiBa,UAAU,CAACC,QAA5B;AACAL,IAAAA,QAAQ,CAACR,GAAT,GAAeY,UAAU,CAACE,MAA1B;AACAN,IAAAA,QAAQ,CAACP,QAAT,GAAoB,IAApB;AACAL,IAAAA,OAAO,CAACY,QAAD,CAAP;AACD,GAND;;AAQA,QAAMO,gBAAgB,GAAIC,SAAD,IAAe;AACtC,QACEC,MAAM,CAACC,OAAP,CACG,8CAA6CF,SAAS,CAACG,KAAV,CAAgBV,KAAM,GADtE,CADF,EAIE;AACAO,MAAAA,SAAS,CAACG,KAAV,CAAgBC,MAAhB;AACD;AACF,GARD;;AAUA,MAAIC,QAAQ,gBACV,QAAC,YAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE,gCADO;AAEbC,MAAAA,MAAM,EAAE,OAFK;AAGbC,MAAAA,KAAK,EAAE;AAHM,KADjB;AAME,IAAA,QAAQ,EAAE,IANZ;AAOE,IAAA,WAAW,EAAC,cAPd;AAQE,IAAA,UAAU,EAAE,IARd;AASE,IAAA,MAAM,EAAEb,gBATV;AAUE,IAAA,YAAY,EAAE,IAVhB;AAWE,IAAA,OAAO,EAAE,CAACnC,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,CAXX;AAYE,IAAA,QAAQ,EAAE,KAZZ;AAaE,IAAA,MAAM,EAAEiB,IAAI,CAACO,MAbf;AAcE,IAAA,UAAU,EAAEa,gBAdd;AAeE,IAAA,aAAa,EAAE;AACbU,MAAAA,cAAc,EAAE;AACdC,QAAAA,IAAI,EAAE,kBADQ;AAEdC,QAAAA,KAAK,EAAE,YAAY,CAAE;AAFP;AADH;AAfjB;AAAA;AAAA;AAAA;AAAA,UADF;;AAyBA,sBACE;AAAA,eACGN,QADH,EAEGlB,gBAFH;AAAA,kBADF;AAMD,CA7HD;;GAAMvB,Q;;KAAAA,Q;AA+HN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport { Modal } from \"react-bootstrap\";\n\nconst Calendar = ({ ...props }) => {\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    filledIn: false,\n    events: props.events,\n  });\n\n  const appointmentModal = (\n    <Modal\n      show={data.filledIn}\n      onHide={() => setShowAppointmentModal(false)}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          <div className=\"signup-title\">\n            <span className=\"title\">Add Appointment</span> <br />\n            <span className=\"subtitle\">It's quick and easy.</span>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"d-flex flex-column\">\n          <input\n            type=\"text\"\n            placeholder=\"Appoitment description\"\n            className=\"input\"\n            onChange={(e) => setAppointmentText(e.target.value)}\n          />\n          <input\n            className=\"input\"\n            defaultValue={startDate}\n            type=\"datetime-local\"\n            onChange={(e) => setDatetime(e.target.value)}\n          />\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <button onClick={() => createEvent()}>Add</button>\n      </Modal.Footer>\n    </Modal>\n  );\n\n  const createEvent = () => {\n    let tempData = data;\n    let events = tempData.events;\n    events = [\n      ...events,\n      {\n        title: appointmentText,\n        start: tempData.start,\n        end: tempData.end,\n      },\n    ];\n    tempData.events = events;\n    setData(tempData);\n    toggleFilledIn();\n  };\n\n  const toggleFilledIn = () => {\n    let tempData = data;\n    tempData.filledIn = false;\n    setData(tempData);\n  };\n\n  const handleDateSelect = (selectInfo) => {\n    let tempData = data;\n    tempData.start = selectInfo.startStr;\n    tempData.end = selectInfo.endStr;\n    tempData.filledIn = true;\n    setData(tempData);\n  };\n\n  const handleEventClick = (clickInfo) => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  let calendar = (\n    <FullCalendar\n      headerToolbar={{\n        left: \"prev,next,today,myCustomButton\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n      }}\n      editable={true}\n      initialView=\"dayGridMonth\"\n      selectable={true}\n      select={handleDateSelect}\n      selectMirror={true}\n      plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n      weekends={false}\n      events={data.events}\n      eventClick={handleEventClick}\n      customButtons={{\n        myCustomButton: {\n          text: \"Book Appointment\",\n          click: function () {},\n        },\n      }}\n    />\n  );\n\n  return (\n    <>\n      {calendar}\n      {appointmentModal}\n    </>\n  );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}