{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/views/doctor/doctor-dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NavBar from \"../../components/nav-bar\";\nimport \"../../css/doctor-dashboard.css\";\nimport Calendar from \"../../inputs/calendar\";\nimport { util } from \"../../public/util\";\nimport { doctorController } from \"../../controllers/doctor\";\nimport Layout from \"./layout\";\nimport DoctorAppointments from \"../../components/doctor-appointments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DoctorDashboard = () => {\n  _s();\n\n  const [appointmentsList, setAppointmentsList] = useState([]);\n  useEffect(() => {\n    doctorController.getAllDoctorAppointments(5).then(response => {\n      let list = response.data;\n\n      for (let i = 0; i < list.length; i++) {\n        doctorController.getPatientInfo(list[i].patient_fk).then(res => {\n          list[\"patient_name\"] = res.data[0].name;\n        });\n      }\n\n      setAppointmentsList(list);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col d-flex justify-content-start\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          isDoctor: true,\n          allowEdit: false,\n          events: appointmentsList,\n          doctorId: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col appointments d-flex flex-column align-items-center  justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(DoctorAppointments, {\n            appointments: appointmentsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [appointmentsList.filter(aptm => util.sameDay(new Date(aptm.start), new Date())).length, \" \", \"Appointment/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent-activities col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Recent Activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), appointmentsList.map((apmt, i) => {\n          return apmt.status !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column recent-activity\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: apmt.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(apmt.start).getHours(), \":\", new Date(apmt.start).getMinutes().toString().length === 1 ? \"0\" + new Date(apmt.start).getMinutes() : new Date(apmt.start).getMinutes()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(apmt.end).getHours(), \":\", new Date(apmt.end).getMinutes().toString().length === 1 ? \"0\" + new Date(apmt.end).getMinutes() : new Date(apmt.end).getMinutes()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Status: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: apmt.status === 1 ? \"Done\" : \"Cancelled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, \"apmt\" + i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DoctorDashboard, \"fGqKlmNdHFc5jbARFizuxecyPcE=\");\n\n_c = DoctorDashboard;\nexport default DoctorDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/views/doctor/doctor-dashboard.js"],"names":["React","useEffect","useState","NavBar","Calendar","util","doctorController","Layout","DoctorAppointments","DoctorDashboard","appointmentsList","setAppointmentsList","getAllDoctorAppointments","then","response","list","data","i","length","getPatientInfo","patient_fk","res","name","filter","aptm","sameDay","Date","start","map","apmt","status","title","getHours","getMinutes","toString","end"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NavBar from \"../../components/nav-bar\";\nimport \"../../css/doctor-dashboard.css\";\nimport Calendar from \"../../inputs/calendar\";\nimport { util } from \"../../public/util\";\nimport { doctorController } from \"../../controllers/doctor\";\nimport Layout from \"./layout\";\nimport DoctorAppointments from \"../../components/doctor-appointments\";\n\nconst DoctorDashboard = () => {\n  const [appointmentsList, setAppointmentsList] = useState([]);\n  useEffect(() => {\n    doctorController\n      .getAllDoctorAppointments(5)\n      .then((response) => {\n        let list = response.data;\n        for (let i = 0; i < list.length; i++) {\n          doctorController.getPatientInfo(list[i].patient_fk).then((res) => {\n            list[\"patient_name\"] = res.data[0].name;\n          });\n        }\n        setAppointmentsList(list);\n      })\n      \n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"row\">\n        <div className=\"col d-flex justify-content-start\">\n          <Calendar\n            isDoctor={true}\n            allowEdit={false}\n            events={appointmentsList}\n            doctorId={5}\n          />\n        </div>\n        <div className=\"col appointments d-flex flex-column align-items-center  justify-content-between\">\n          <div>\n            <DoctorAppointments appointments={appointmentsList} />\n          </div>\n          <span>\n            {\n              appointmentsList.filter((aptm) =>\n                util.sameDay(new Date(aptm.start), new Date())\n              ).length\n            }{\" \"}\n            Appointment/s\n          </span>\n        </div>\n        <br />\n      </div>\n      <br />\n      <div className=\"row\">\n        <div className=\"recent-activities col\">\n          <h1>Recent Activities</h1>\n          {appointmentsList.map((apmt, i) => {\n            return (\n              apmt.status !== 0 && (\n                <div\n                  key={\"apmt\" + i}\n                  className=\"d-flex flex-column recent-activity\"\n                >\n                  <span>{apmt.title}</span>\n                  <div className=\"d-flex\">\n                    <span>Start Time</span>\n                    <span>\n                      {new Date(apmt.start).getHours()}:\n                      {new Date(apmt.start).getMinutes().toString().length === 1\n                        ? \"0\" + new Date(apmt.start).getMinutes()\n                        : new Date(apmt.start).getMinutes()}\n                    </span>\n                  </div>\n                  <div className=\"d-flex\">\n                    <span>End Time</span>\n                    <span>\n                      {new Date(apmt.end).getHours()}:\n                      {new Date(apmt.end).getMinutes().toString().length === 1\n                        ? \"0\" + new Date(apmt.end).getMinutes()\n                        : new Date(apmt.end).getMinutes()}\n                    </span>\n                  </div>\n                  <div className=\"d-flex\">\n                    <span>Status: </span>\n                    <span>{apmt.status === 1 ? \"Done\" : \"Cancelled\"}</span>\n                  </div>\n                </div>\n              )\n            );\n          })}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default DoctorDashboard;\n"]},"metadata":{},"sourceType":"module"}