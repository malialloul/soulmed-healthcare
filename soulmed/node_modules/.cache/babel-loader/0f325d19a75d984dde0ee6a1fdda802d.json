{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/views/doctor/schedule-settings.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doctorController } from \"../../controllers/doctor\";\nimport Layout from \"./layout\";\nimport \"../../css/schedule-settings.css\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport { util } from \"../../public/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScheduleSettings = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [doctorData, setDoctorData] = useState({\n    id: -1,\n    name: \"\",\n    country: \"\",\n    profession_fk: -1,\n    city: \"\",\n    Price: \"\",\n    location: []\n  });\n  useEffect(() => {\n    doctorController.getDoctorInfo(id).then(response => {\n      setDoctorData(response.data);\n    }).then(() => {\n      setLoading(false);\n    });\n  }, []);\n  const daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  const [timingArray, setTimingarray] = useState([{\n    id: 0,\n    start: \"\",\n    end: \"\",\n    type: \"\"\n  }]);\n\n  const addTiming = () => {\n    let temp = timingArray;\n    temp = [...temp, {\n      id: timingArray.length,\n      start: \"\",\n      end: \"\",\n      type: \"\"\n    }];\n    setTimingarray(temp);\n    console.log(temp);\n  };\n\n  const deleteTiming = index => {\n    console.log(index);\n    let temp = timingArray;\n    temp = temp.filter(timing => timing.id !== index);\n    console.log(temp);\n    setTimingarray(temp);\n  };\n\n  const modifyStartTiming = (index, value) => {\n    let temp = timingArray;\n    temp[index].start = value;\n    setTimingarray(temp);\n  };\n\n  const modifyEndTiming = (index, value) => {\n    let temp = timingArray;\n    temp[index].end = value;\n    setTimingarray(temp);\n  };\n\n  const modifyAppointmentsType = (index, value) => {\n    let temp = timingArray;\n    temp[index].type = value;\n    setTimingarray(temp);\n  };\n\n  const [loaction, setLocation] = useState(\"\");\n  const [daysSelected, setDaysSelected] = useState(Array.from({\n    length: 7\n  }, (_, i) => 0));\n\n  const updateDaysSelected = index => {\n    let temp = daysSelected;\n    temp[index] = temp[index] === 0 ? 1 : 0;\n    setDaysSelected(temp);\n  };\n\n  const navigate = useNavigate();\n  let dt = new Date();\n  let currentWeekDay = dt.getDay();\n  let lessDays = currentWeekDay === 0 ? 6 : currentWeekDay - 1;\n  let wkStart = new Date(new Date(dt).setDate(dt.getDate() - lessDays));\n  let wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6));\n\n  const updateSchedule = () => {\n    let overlapping = false;\n    let emptyFields = false;\n    let validIntervals = true;\n\n    for (let i = 0; i < timingArray.length; i++) {\n      if (util.isOverlapping(timingArray[i], timingArray)) {\n        overlapping = true;\n      }\n\n      if (!util.isValidTimingInterval(timingArray[i].start, timingArray[i].end)) {\n        validIntervals = false;\n      }\n\n      if (timingArray[i].start === \"\" || timingArray[i].end === \"\" || timingArray[i].type === \"\") {\n        emptyFields = true;\n      }\n    }\n\n    if (overlapping) {\n      alert(\"Two intervals are overlapping\");\n      return false;\n    }\n\n    if (emptyFields || loaction === \"\") {\n      alert(\"Please fill all fields\");\n      return false;\n    }\n\n    if (daysSelected.filter(day => day === 1).length === 0) {\n      alert(\"Select at least one day\");\n      return false;\n    }\n\n    let count = 0;\n    doctorController.getDoctorSchedule(id).then(response => {\n      for (let i = 0; i < timingArray.length; i++) {\n        for (let j = 0; j < daysSelected.length; j++) {\n          if (daysSelected[j] === 1) {\n            doctorController.addDoctorAppointmentSchedule({\n              id: response.data.length + i + count + 1,\n              doctor_fk: parseInt(id),\n              start: util.getDayDate(j) + \"T\" + timingArray[i].start,\n              end: util.getDayDate(j) + \"T\" + timingArray[i].end,\n              loaction: loaction,\n              type: parseInt(timingArray[i].type)\n            });\n            count++;\n          }\n        }\n      }\n    }).then(() => {\n      alert(\"Schedule Updated\");\n      navigate(\"/doctor/dashboard/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 schedule-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Weekly Schedule (From \", wkStart.toString().substring(0, 15), \" into\", \" \", wkEnd.toString().substring(0, 15), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setLocation(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              disabled: true,\n              children: \"Select your location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), doctorData.location.map(l => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: l\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 26\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add your timings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            className: \"input\",\n            value: \"Add Timing\",\n            onClick: () => addTiming()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex w-100 flex-column justify-content-center\",\n            children: timingArray.map((time, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex  justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  placeholder: \"Start Time\",\n                  type: \"time\",\n                  onChange: e => modifyStartTiming(index, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  placeholder: \"End Time\",\n                  type: \"time\",\n                  onChange: e => modifyEndTiming(index, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => modifyAppointmentsType(index, e.target.value),\n                  className: \"input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    selected: true,\n                    disabled: true,\n                    children: \"Select type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 0,\n                    children: \"Physical\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 1,\n                    children: \"Virtual\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 2,\n                    children: [\"Physical \", \"&\", \" Virtual\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \"X\",\n                  className: \"input close\",\n                  onClick: () => deleteTiming(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select your preffered days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex  align-items-center justify-content-center flex-wrap\",\n              children: daysOfWeek.map((day, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex input align-items-center justify-content-center mx-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: () => updateDaysSelected(i),\n                    type: \"checkbox\",\n                    value: day\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: day\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this)]\n                }, \"day\" + i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: \"Add Appointment Schedule\",\n              className: \"input\",\n              onClick: () => updateSchedule()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ScheduleSettings, \"NvgU9VBig9Ow0twV0D+hsku0kiA=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ScheduleSettings;\nexport default ScheduleSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScheduleSettings\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/views/doctor/schedule-settings.js"],"names":["useEffect","useState","useParams","doctorController","Layout","moment","useNavigate","util","ScheduleSettings","id","loading","setLoading","doctorData","setDoctorData","name","country","profession_fk","city","Price","location","getDoctorInfo","then","response","data","daysOfWeek","timingArray","setTimingarray","start","end","type","addTiming","temp","length","console","log","deleteTiming","index","filter","timing","modifyStartTiming","value","modifyEndTiming","modifyAppointmentsType","loaction","setLocation","daysSelected","setDaysSelected","Array","from","_","i","updateDaysSelected","navigate","dt","Date","currentWeekDay","getDay","lessDays","wkStart","setDate","getDate","wkEnd","updateSchedule","overlapping","emptyFields","validIntervals","isOverlapping","isValidTimingInterval","alert","day","count","getDoctorSchedule","j","addDoctorAppointmentSchedule","doctor_fk","parseInt","getDayDate","toString","substring","e","target","map","l","time"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doctorController } from \"../../controllers/doctor\";\nimport Layout from \"./layout\";\nimport \"../../css/schedule-settings.css\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport { util } from \"../../public/util\";\n\nconst ScheduleSettings = () => {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [doctorData, setDoctorData] = useState({\n    id: -1,\n    name: \"\",\n    country: \"\",\n    profession_fk: -1,\n    city: \"\",\n    Price: \"\",\n    location: [],\n  });\n  useEffect(() => {\n    doctorController\n      .getDoctorInfo(id)\n      .then((response) => {\n        setDoctorData(response.data);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\n  const [timingArray, setTimingarray] = useState([\n    {\n      id: 0,\n      start: \"\",\n      end: \"\",\n      type: \"\",\n    },\n  ]);\n  const addTiming = () => {\n    let temp = timingArray;\n    temp = [...temp, { id: timingArray.length, start: \"\", end: \"\", type:\"\" }];\n    setTimingarray(temp);\n    console.log(temp);\n  };\n  const deleteTiming = (index) => {\n    console.log(index);\n    let temp = timingArray;\n\n    temp = temp.filter((timing) => timing.id !== index);\n    console.log(temp);\n\n    setTimingarray(temp);\n  };\n\n  const modifyStartTiming = (index, value) => {\n    let temp = timingArray;\n    temp[index].start = value;\n    setTimingarray(temp);\n  };\n  const modifyEndTiming = (index, value) => {\n    let temp = timingArray;\n    temp[index].end = value;\n    setTimingarray(temp);\n  };\n  const modifyAppointmentsType = (index, value) => {\n    let temp = timingArray;\n    temp[index].type = value;\n    setTimingarray(temp);\n  };\n\n  const [loaction, setLocation] = useState(\"\");\n  const [daysSelected, setDaysSelected] = useState(\n    Array.from({ length: 7 }, (_, i) => 0)\n  );\n\n  const updateDaysSelected = (index) => {\n    let temp = daysSelected;\n    temp[index] = temp[index] === 0 ? 1 : 0;\n    setDaysSelected(temp);\n  };\n  const navigate = useNavigate();\n\n  let dt = new Date();\n  let currentWeekDay = dt.getDay();\n  let lessDays = currentWeekDay === 0 ? 6 : currentWeekDay - 1;\n  let wkStart = new Date(new Date(dt).setDate(dt.getDate() - lessDays));\n  let wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6));\n\n  const updateSchedule = () => {\n    let overlapping = false;\n    let emptyFields = false;\n    let validIntervals = true;\n    for (let i = 0; i < timingArray.length; i++) {\n      if (util.isOverlapping(timingArray[i], timingArray)) {\n        overlapping = true;\n      }\n      if (\n        !util.isValidTimingInterval(timingArray[i].start, timingArray[i].end)\n      ) {\n        validIntervals = false;\n      }\n      if (\n        timingArray[i].start === \"\" ||\n        timingArray[i].end === \"\" ||\n        timingArray[i].type === \"\"\n      ) {\n        emptyFields = true;\n      }\n    }\n\n    if (overlapping) {\n      alert(\"Two intervals are overlapping\");\n      return false;\n    }\n    if (emptyFields || loaction === \"\") {\n      alert(\"Please fill all fields\");\n      return false;\n    }\n    if (daysSelected.filter((day) => day === 1).length === 0) {\n      alert(\"Select at least one day\");\n      return false;\n    }\n   \n    let count = 0;\n    doctorController\n      .getDoctorSchedule(id)\n      .then((response) => {\n        for (let i = 0; i < timingArray.length; i++) {\n          for (let j = 0; j < daysSelected.length; j++) {\n            if (daysSelected[j] === 1) {\n              doctorController.addDoctorAppointmentSchedule({\n                id: response.data.length + i + count + 1,\n                doctor_fk: parseInt(id),\n                start: util.getDayDate(j) + \"T\" + timingArray[i].start,\n                end: util.getDayDate(j) + \"T\" + timingArray[i].end,\n                loaction: loaction,\n                type: parseInt(timingArray[i].type),\n              });\n              count++;\n            }\n          }\n        }\n      })\n      .then(() => {\n        alert(\"Schedule Updated\");\n        navigate(\"/doctor/dashboard/\");\n      });\n  };\n\n  return (\n    <Layout>\n      {!loading && (\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"col-8 schedule-div\">\n            <h3>\n              Weekly Schedule (From {wkStart.toString().substring(0, 15)} into{\" \"}\n              {wkEnd.toString().substring(0, 15)})\n            </h3>\n            <br />\n            <div className=\"d-flex flex-column\">\n              <span>Location</span>\n              <select onChange={(e) => setLocation(e.target.value)}>\n                <option selected disabled>\n                  Select your location\n                </option>\n                {doctorData.location.map((l) => {\n                  return <option>{l}</option>;\n                })}\n              </select>\n            </div>\n            <br />\n            <div className=\"d-flex flex-column\">\n              <span>Add your timings</span>\n              <input\n                type=\"button\"\n                className=\"input\"\n                value=\"Add Timing\"\n                onClick={() => addTiming()}\n              />\n              <div className=\"d-flex w-100 flex-column justify-content-center\">\n                {timingArray.map((time, index) => {\n                  return (\n                    <div className=\"d-flex  justify-content-between\">\n                      <input\n                        className=\"input\"\n                        placeholder=\"Start Time\"\n                        type=\"time\"\n                        onChange={(e) =>\n                          modifyStartTiming(index, e.target.value)\n                        }\n                      />\n                      <input\n                        className=\"input\"\n                        placeholder=\"End Time\"\n                        type=\"time\"\n                        onChange={(e) => modifyEndTiming(index, e.target.value)}\n                      />\n                      <select\n                        onChange={(e) =>\n                          modifyAppointmentsType(index, e.target.value)\n                        }\n                        className=\"input\"\n                      >\n                        <option selected disabled>\n                          Select type\n                        </option>\n                        <option value={0}>Physical</option>\n                        <option value={1}>Virtual</option>\n                        <option value={2}>Physical {\"&\"} Virtual</option>\n                      </select>\n                      <input\n                        type=\"button\"\n                        value={\"X\"}\n                        className=\"input close\"\n                        onClick={() => deleteTiming(index)}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              <br />\n              <div className=\"d-flex flex-column\">\n                <label>Select your preffered days</label>\n                <div className=\"d-flex  align-items-center justify-content-center flex-wrap\">\n                  {daysOfWeek.map((day, i) => {\n                    return (\n                      <div\n                        key={\"day\" + i}\n                        className=\"d-flex input align-items-center justify-content-center mx-4\"\n                      >\n                        <input\n                          onChange={() => updateDaysSelected(i)}\n                          type=\"checkbox\"\n                          value={day}\n                        />\n                        <label>{day}</label>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              <br />\n              <div className=\"d-flex flex-column\">\n                <input\n                  type=\"button\"\n                  value={\"Add Appointment Schedule\"}\n                  className=\"input\"\n                  onClick={() => updateSchedule()}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default ScheduleSettings;\n"]},"metadata":{},"sourceType":"module"}