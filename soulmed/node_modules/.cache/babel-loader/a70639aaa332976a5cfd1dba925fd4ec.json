{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/views/advanced-search.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { welcomeConroller } from \"../controllers/welcome-page\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdvancedSearch = () => {\n  _s();\n\n  const {\n    categotyId,\n    professionId,\n    searchText\n  } = useParams();\n  const [allData, setAllData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  useEffect(() => {\n    welcomeConroller.getProfessionByCategory(categotyId).then(response => {\n      let ids = \"\";\n      response.data.map((pr, i) => {\n        ids += \"provision_fk=\" + pr.id + \"&\";\n      });\n      welcomeConroller.getInfoByQuery(ids).then(res => {\n        setAllData(res.data);\n      });\n    });\n  }, []);\n  useEffect(() => {\n    welcomeConroller.getProfession(professionId).then(response => {\n      let query = \"\";\n\n      if (response.data.length === 1) {\n        query = \"profession_fk=\" + response.data[0].id;\n      } else {\n        response.data.map((pr, i) => {\n          query += \"profession_fk=\" + pr.id + \"&\";\n        });\n      }\n\n      welcomeConroller.getInfoByQuery(query).then(res => {\n        setAllData(res.data);\n      });\n    });\n  }, []);\n  useEffect(() => {\n    let list = [];\n    allData.map((item, i) => {\n      Object.keys(item).map((innerAttr, index) => {\n        if ((item[innerAttr] + \"\").indexOf(searchText) >= 0) {\n          list.push(item);\n        }\n      });\n    });\n    setFilteredData(list);\n  }, [allData]);\n  console.log(filteredData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AdvancedSearch, \"2mwFEvQ/Fl5tymmGzWrkvAJN3+4=\", false, function () {\n  return [useParams];\n});\n\n_c = AdvancedSearch;\nexport default AdvancedSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvancedSearch\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/views/advanced-search.js"],"names":["useEffect","useState","useParams","welcomeConroller","AdvancedSearch","categotyId","professionId","searchText","allData","setAllData","filteredData","setFilteredData","getProfessionByCategory","then","response","ids","data","map","pr","i","id","getInfoByQuery","res","getProfession","query","length","list","item","Object","keys","innerAttr","index","indexOf","push","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA;AAA5B,MAA2CL,SAAS,EAA1D;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,gBAAgB,CAACS,uBAAjB,CAAyCP,UAAzC,EAAqDQ,IAArD,CAA2DC,QAAD,IAAc;AACtE,UAAIC,GAAG,GAAG,EAAV;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,CAACC,EAAD,EAAKC,CAAL,KAAW;AAC3BJ,QAAAA,GAAG,IAAI,kBAAkBG,EAAE,CAACE,EAArB,GAA0B,GAAjC;AACD,OAFD;AAGAjB,MAAAA,gBAAgB,CAACkB,cAAjB,CAAgCN,GAAhC,EAAqCF,IAArC,CAA2CS,GAAD,IAAS;AACjDb,QAAAA,UAAU,CAACa,GAAG,CAACN,IAAL,CAAV;AACD,OAFD;AAGD,KARD;AASD,GAVQ,EAUN,EAVM,CAAT;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,gBAAgB,CAACoB,aAAjB,CAA+BjB,YAA/B,EAA6CO,IAA7C,CAAmDC,QAAD,IAAc;AAC9D,UAAIU,KAAK,GAAG,EAAZ;;AAEA,UAAIV,QAAQ,CAACE,IAAT,CAAcS,MAAd,KAAyB,CAA7B,EAAgC;AAC9BD,QAAAA,KAAK,GAAG,mBAAmBV,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBI,EAA5C;AACD,OAFD,MAEO;AACLN,QAAAA,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,CAACC,EAAD,EAAKC,CAAL,KAAW;AAC3BK,UAAAA,KAAK,IAAI,mBAAmBN,EAAE,CAACE,EAAtB,GAA2B,GAApC;AACD,SAFD;AAGD;;AAEDjB,MAAAA,gBAAgB,CAACkB,cAAjB,CAAgCG,KAAhC,EAAuCX,IAAvC,CAA6CS,GAAD,IAAS;AACnDb,QAAAA,UAAU,CAACa,GAAG,CAACN,IAAL,CAAV;AACD,OAFD;AAGD,KAdD;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAiBAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,IAAI,GAAG,EAAX;AACAlB,IAAAA,OAAO,CAACS,GAAR,CAAY,CAACU,IAAD,EAAOR,CAAP,KAAa;AACvBS,MAAAA,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBV,GAAlB,CAAsB,CAACa,SAAD,EAAYC,KAAZ,KAAsB;AAC1C,YAAI,CAACJ,IAAI,CAACG,SAAD,CAAJ,GAAkB,EAAnB,EAAuBE,OAAvB,CAA+BzB,UAA/B,KAA8C,CAAlD,EAAqD;AACnDmB,UAAAA,IAAI,CAACO,IAAL,CAAUN,IAAV;AACD;AACF,OAJD;AAKD,KAND;AAOAhB,IAAAA,eAAe,CAACe,IAAD,CAAf;AACG,GAVI,EAUF,CAAClB,OAAD,CAVE,CAAT;AAWI0B,EAAAA,OAAO,CAACC,GAAR,CAAYzB,YAAZ;AAEJ,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA/CD;;GAAMN,c;UAC6CF,S;;;KAD7CE,c;AAiDN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { welcomeConroller } from \"../controllers/welcome-page\";\n\nconst AdvancedSearch = () => {\n  const { categotyId, professionId, searchText } = useParams();\n  const [allData, setAllData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  useEffect(() => {\n    welcomeConroller.getProfessionByCategory(categotyId).then((response) => {\n      let ids = \"\";\n      response.data.map((pr, i) => {\n        ids += \"provision_fk=\" + pr.id + \"&\";\n      });\n      welcomeConroller.getInfoByQuery(ids).then((res) => {\n        setAllData(res.data);\n      });\n    });\n  }, []);\n  useEffect(() => {\n    welcomeConroller.getProfession(professionId).then((response) => {\n      let query = \"\";\n\n      if (response.data.length === 1) {\n        query = \"profession_fk=\" + response.data[0].id;\n      } else {\n        response.data.map((pr, i) => {\n          query += \"profession_fk=\" + pr.id + \"&\";\n        });\n      }\n\n      welcomeConroller.getInfoByQuery(query).then((res) => {\n        setAllData(res.data);\n      });\n    });\n  }, []);\n  useEffect(() => {\n    let list = [];\n    allData.map((item, i) => {\n      Object.keys(item).map((innerAttr, index) => {\n        if ((item[innerAttr] + \"\").indexOf(searchText) >= 0) {\n          list.push(item);\n        }\n      });\n    });\n    setFilteredData(list);\n      }, [allData]);\n      console.log(filteredData)\n\n  return <div></div>;\n};\n\nexport default AdvancedSearch;\n"]},"metadata":{},"sourceType":"module"}