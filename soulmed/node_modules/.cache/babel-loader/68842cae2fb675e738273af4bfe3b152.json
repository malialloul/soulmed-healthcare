{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\nimport \"../css/pagination.css\"; // list of items\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst list = [{\n  name: \"item1\"\n}, {\n  name: \"item2\"\n}, {\n  name: \"item3\"\n}, {\n  name: \"item4\"\n}, {\n  name: \"item5\"\n}, {\n  name: \"item6\"\n}, {\n  name: \"item7\"\n}, {\n  name: \"item8\"\n}, {\n  name: \"item9\"\n}]; // One item component\n// selected prop will be passed\n\nconst MenuItem = ({\n  text,\n  selected\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `menu-item ${selected ? \"active\" : \"\"}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}; // All items component\n// Important! add unique key\n\n\n_c = MenuItem;\nexport const Menu = (list, selected) => list.map(el => {\n  const {\n    name\n  } = el;\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    text: name,\n    selected: selected\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Menu;\n\nconst Arrow = ({\n  text,\n  className\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = Arrow;\nconst ArrowLeft = Arrow({\n  text: \"<\",\n  className: \"arrow-prev\"\n});\nconst ArrowRight = Arrow({\n  text: \">\",\n  className: \"arrow-next\"\n});\n\nconst Pagination = () => {\n  _s();\n\n  const selected = \"item1\"; // call it again if items count changes\n\n  const [menuItems, setMenuItems] = Menu(list, selected);\n  const [selectedKey, setSelectedKey] = useState(-1);\n\n  const onSelect = key => {\n    setSelectedKey(key);\n  }; // Create menu from items\n\n\n  const menu = this.menuItems;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ScrollMenu, {\n      data: menu,\n      arrowLeft: ArrowLeft,\n      arrowRight: ArrowRight,\n      selected: selectedKey,\n      onSelect: onSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"kZQ0TgaH9+Js6/VaM3nlhv/vnF0=\");\n\n_c4 = Pagination;\nexport default Pagination;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MenuItem\");\n$RefreshReg$(_c2, \"Menu\");\n$RefreshReg$(_c3, \"Arrow\");\n$RefreshReg$(_c4, \"Pagination\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/pagination.js"],"names":["React","Component","useState","ScrollMenu","list","name","MenuItem","text","selected","Menu","map","el","Arrow","className","ArrowLeft","ArrowRight","Pagination","menuItems","setMenuItems","selectedKey","setSelectedKey","onSelect","key","menu"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAO,uBAAP,C,CAEA;;;AACA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE;AAAR,CADW,EAEX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAFW,EAGX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAHW,EAIX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAJW,EAKX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CALW,EAMX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CANW,EAOX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAPW,EAQX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CARW,EASX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CATW,CAAb,C,CAYA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AACvC,sBAAO;AAAK,IAAA,SAAS,EAAG,aAAYA,QAAQ,GAAG,QAAH,GAAc,EAAG,EAAtD;AAAA,cAA0DD;AAA1D;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD,C,CAIA;AACA;;;KALMD,Q;AAMN,OAAO,MAAMG,IAAI,GAAG,CAACL,IAAD,EAAOI,QAAP,KAClBJ,IAAI,CAACM,GAAL,CAAUC,EAAD,IAAQ;AACf,QAAM;AAAEN,IAAAA;AAAF,MAAWM,EAAjB;AAEA,sBAAO,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEN,IAAhB;AAAiC,IAAA,QAAQ,EAAEG;AAA3C,KAA2BH,IAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD,CADK;MAAMI,I;;AAOb,MAAMG,KAAK,GAAG,CAAC;AAAEL,EAAAA,IAAF;AAAQM,EAAAA;AAAR,CAAD,KAAyB;AACrC,sBAAO;AAAK,IAAA,SAAS,EAAEA,SAAhB;AAAA,cAA4BN;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMK,K;AAIN,MAAME,SAAS,GAAGF,KAAK,CAAC;AAAEL,EAAAA,IAAI,EAAE,GAAR;AAAaM,EAAAA,SAAS,EAAE;AAAxB,CAAD,CAAvB;AACA,MAAME,UAAU,GAAGH,KAAK,CAAC;AAAEL,EAAAA,IAAI,EAAE,GAAR;AAAaM,EAAAA,SAAS,EAAE;AAAxB,CAAD,CAAxB;;AAEA,MAAMG,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMR,QAAQ,GAAG,OAAjB,CADuB,CAGvB;;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BT,IAAI,CAACL,IAAD,EAAOI,QAAP,CAAtC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,CAAC,CAAF,CAA9C;;AAEA,QAAMmB,QAAQ,GAAIC,GAAD,IAAS;AACxBF,IAAAA,cAAc,CAACE,GAAD,CAAd;AACD,GAFD,CAPuB,CAWvB;;;AACA,QAAMC,IAAI,GAAG,KAAKN,SAAlB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,IAAI,EAAEM,IADR;AAEE,MAAA,SAAS,EAAET,SAFb;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,QAAQ,EAAEI,WAJZ;AAKE,MAAA,QAAQ,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzBD;;GAAML,U;;MAAAA,U;AA2BN,eAAeA,UAAf","sourcesContent":["import React, { Component, useState } from \"react\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\nimport \"../css/pagination.css\";\n\n// list of items\nconst list = [\n  { name: \"item1\" },\n  { name: \"item2\" },\n  { name: \"item3\" },\n  { name: \"item4\" },\n  { name: \"item5\" },\n  { name: \"item6\" },\n  { name: \"item7\" },\n  { name: \"item8\" },\n  { name: \"item9\" },\n];\n\n// One item component\n// selected prop will be passed\nconst MenuItem = ({ text, selected }) => {\n  return <div className={`menu-item ${selected ? \"active\" : \"\"}`}>{text}</div>;\n};\n\n// All items component\n// Important! add unique key\nexport const Menu = (list, selected) =>\n  list.map((el) => {\n    const { name } = el;\n\n    return <MenuItem text={name} key={name} selected={selected} />;\n  });\n\nconst Arrow = ({ text, className }) => {\n  return <div className={className}>{text}</div>;\n};\n\nconst ArrowLeft = Arrow({ text: \"<\", className: \"arrow-prev\" });\nconst ArrowRight = Arrow({ text: \">\", className: \"arrow-next\" });\n\nconst Pagination = () => {\n  const selected = \"item1\";\n\n  // call it again if items count changes\n  const [menuItems, setMenuItems] = Menu(list, selected);\n  const [selectedKey, setSelectedKey] = useState(-1);\n\n  const onSelect = (key) => {\n    setSelectedKey(key);\n  };\n\n  // Create menu from items\n  const menu = this.menuItems;\n\n  return (\n    <div className=\"App\">\n      <ScrollMenu\n        data={menu}\n        arrowLeft={ArrowLeft}\n        arrowRight={ArrowRight}\n        selected={selectedKey}\n        onSelect={onSelect}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}