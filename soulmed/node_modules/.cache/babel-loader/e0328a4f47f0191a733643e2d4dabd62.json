{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateAggs = updateAggs;\nexports.updateCompositeAggs = updateCompositeAggs;\nexports.updateHits = updateHits;\nexports.saveQueryToHits = saveQueryToHits;\n\nvar _constants = require('../constants');\n\nvar _constants2 = require('../../lib/constants');\n\nfunction updateAggs(component, aggregations) {\n  var append = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    type: _constants.UPDATE_AGGS,\n    component: component,\n    aggregations: aggregations,\n    append: append\n  };\n}\n\nfunction updateCompositeAggs(component, aggregations) {\n  var append = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    type: _constants.UPDATE_COMPOSITE_AGGS,\n    component: component,\n    aggregations: aggregations,\n    append: append\n  };\n}\n\nfunction updateHits(component, hits, time, hidden) {\n  var append = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  return {\n    type: _constants.UPDATE_HITS,\n    component: component,\n    hits: hits.hits,\n    total: typeof hits.total === 'object' ? hits.total.value : hits.total,\n    hidden: hidden,\n    time: time,\n    append: append\n  };\n}\n\nfunction saveQueryToHits(component, query) {\n  return {\n    type: _constants2.SET_QUERY_TO_HITS,\n    component: component,\n    query: query\n  };\n}","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/node_modules/@appbaseio/reactivecore/lib/actions/hits.js"],"names":["Object","defineProperty","exports","value","updateAggs","updateCompositeAggs","updateHits","saveQueryToHits","_constants","require","_constants2","component","aggregations","append","arguments","length","undefined","type","UPDATE_AGGS","UPDATE_COMPOSITE_AGGS","hits","time","hidden","UPDATE_HITS","total","query","SET_QUERY_TO_HITS"],"mappings":"AAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,EAAAA,KAAK,EAAC;AAAP,CAA3C;AAAyDD,OAAO,CAACE,UAAR,GAAmBA,UAAnB;AAA8BF,OAAO,CAACG,mBAAR,GAA4BA,mBAA5B;AAAgDH,OAAO,CAACI,UAAR,GAAmBA,UAAnB;AAA8BJ,OAAO,CAACK,eAAR,GAAwBA,eAAxB;;AAAwC,IAAIC,UAAU,GAACC,OAAO,CAAC,cAAD,CAAtB;;AAAuC,IAAIC,WAAW,GAACD,OAAO,CAAC,qBAAD,CAAvB;;AAA+C,SAASL,UAAT,CAAoBO,SAApB,EAA8BC,YAA9B,EAA2C;AAAC,MAAIC,MAAM,GAACC,SAAS,CAACC,MAAV,GAAiB,CAAjB,IAAoBD,SAAS,CAAC,CAAD,CAAT,KAAeE,SAAnC,GAA6CF,SAAS,CAAC,CAAD,CAAtD,GAA0D,KAArE;AAA2E,SAAM;AAACG,IAAAA,IAAI,EAACT,UAAU,CAACU,WAAjB;AAA6BP,IAAAA,SAAS,EAACA,SAAvC;AAAiDC,IAAAA,YAAY,EAACA,YAA9D;AAA2EC,IAAAA,MAAM,EAACA;AAAlF,GAAN;AAAiG;;AAAA,SAASR,mBAAT,CAA6BM,SAA7B,EAAuCC,YAAvC,EAAoD;AAAC,MAAIC,MAAM,GAACC,SAAS,CAACC,MAAV,GAAiB,CAAjB,IAAoBD,SAAS,CAAC,CAAD,CAAT,KAAeE,SAAnC,GAA6CF,SAAS,CAAC,CAAD,CAAtD,GAA0D,KAArE;AAA2E,SAAM;AAACG,IAAAA,IAAI,EAACT,UAAU,CAACW,qBAAjB;AAAuCR,IAAAA,SAAS,EAACA,SAAjD;AAA2DC,IAAAA,YAAY,EAACA,YAAxE;AAAqFC,IAAAA,MAAM,EAACA;AAA5F,GAAN;AAA2G;;AAAA,SAASP,UAAT,CAAoBK,SAApB,EAA8BS,IAA9B,EAAmCC,IAAnC,EAAwCC,MAAxC,EAA+C;AAAC,MAAIT,MAAM,GAACC,SAAS,CAACC,MAAV,GAAiB,CAAjB,IAAoBD,SAAS,CAAC,CAAD,CAAT,KAAeE,SAAnC,GAA6CF,SAAS,CAAC,CAAD,CAAtD,GAA0D,KAArE;AAA2E,SAAM;AAACG,IAAAA,IAAI,EAACT,UAAU,CAACe,WAAjB;AAA6BZ,IAAAA,SAAS,EAACA,SAAvC;AAAiDS,IAAAA,IAAI,EAACA,IAAI,CAACA,IAA3D;AAAgEI,IAAAA,KAAK,EAAC,OAAOJ,IAAI,CAACI,KAAZ,KAAoB,QAApB,GAA6BJ,IAAI,CAACI,KAAL,CAAWrB,KAAxC,GAA8CiB,IAAI,CAACI,KAAzH;AAA+HF,IAAAA,MAAM,EAACA,MAAtI;AAA6ID,IAAAA,IAAI,EAACA,IAAlJ;AAAuJR,IAAAA,MAAM,EAACA;AAA9J,GAAN;AAA6K;;AAAA,SAASN,eAAT,CAAyBI,SAAzB,EAAmCc,KAAnC,EAAyC;AAAC,SAAM;AAACR,IAAAA,IAAI,EAACP,WAAW,CAACgB,iBAAlB;AAAoCf,IAAAA,SAAS,EAACA,SAA9C;AAAwDc,IAAAA,KAAK,EAACA;AAA9D,GAAN;AAA4E","sourcesContent":["Object.defineProperty(exports,\"__esModule\",{value:true});exports.updateAggs=updateAggs;exports.updateCompositeAggs=updateCompositeAggs;exports.updateHits=updateHits;exports.saveQueryToHits=saveQueryToHits;var _constants=require('../constants');var _constants2=require('../../lib/constants');function updateAggs(component,aggregations){var append=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return{type:_constants.UPDATE_AGGS,component:component,aggregations:aggregations,append:append};}function updateCompositeAggs(component,aggregations){var append=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return{type:_constants.UPDATE_COMPOSITE_AGGS,component:component,aggregations:aggregations,append:append};}function updateHits(component,hits,time,hidden){var append=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;return{type:_constants.UPDATE_HITS,component:component,hits:hits.hits,total:typeof hits.total==='object'?hits.total.value:hits.total,hidden:hidden,time:time,append:append};}function saveQueryToHits(component,query){return{type:_constants2.SET_QUERY_TO_HITS,component:component,query:query};}"]},"metadata":{},"sourceType":"script"}