{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/components/categories-dropdown.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { welcomeConroller } from \"../controllers/welcome-page\";\nimport RightChevron from \"../icons/right-chevron\";\nimport Toggle from \"../icons/toggle\";\nimport DownChevron from \"../icons/down-chevron\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoriesDropDown = ({ ...props\n}) => {\n  _s();\n\n  const [visible, isVisible] = useState(false);\n  const [categorySelected, setCategorySelected] = useState(0);\n  const [professionselected, setProfessionSelected] = useState(-1);\n  const [provCategoriesList, setProvCategoriesList] = useState([]);\n  const [headerText, setHeaderText] = useState(\"\");\n  const [showHeaderText, setShowHeaderText] = useState(props.data ? false : true);\n  const ref = useRef();\n  useEffect(() => {\n    if (props.data.length === 0) {\n      let category_id = props.category_id;\n      welcomeConroller.getCategory(category_id).then(response => {\n        console.log(response);\n        setHeaderText(response.data[0].name);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const checkIfClickedOutside = e => {\n      if (visible && ref.current && !ref.current.contains(e.target)) {\n        isVisible(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\n    };\n  }, [visible]);\n\n  const selectAll = () => {\n    setShowHeaderText(\"\");\n    isVisible(false);\n    setCategorySelected(0);\n    props.onChange({\n      category_id: 0,\n      profession_id: professionselected\n    });\n  };\n\n  const modifyHeader = (name, id) => {\n    props.onChange({\n      category_id: categorySelected,\n      profession_id: id\n    });\n    setProfessionSelected(id);\n    isVisible(false);\n    setHeaderText(name);\n    setShowHeaderText(true);\n  };\n\n  const modifyCategorySelected = (id, name, provision) => {\n    props.onChange({\n      category_id: id,\n      provision_id: professionselected\n    });\n    setCategorySelected(id);\n\n    if (!provision) {\n      isVisible(false);\n      setHeaderText(name);\n      setShowHeaderText(true);\n    }\n  };\n\n  useEffect(() => {\n    welcomeConroller.getProfessionByCategory(categorySelected).then(response => {\n      setProvCategoriesList(response.data);\n    });\n  }, [categorySelected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"col-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => isVisible(!visible),\n      className: \"dropdown-header d-flex\",\n      children: [!showHeaderText && /*#__PURE__*/_jsxDEV(Toggle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: [\" \", showHeaderText ? headerText : \"Categories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(DownChevron, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), visible && props.data.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex categories-dropdown rounded \",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"col-5 categories\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectAll(),\n          className: \"dropdown-content\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), props.data.map((category, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => modifyCategorySelected(category.id, category.name, category.provisions),\n            className: classNames(\"dropdown-content \", {\n              selected: category.id === categorySelected\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", category.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this), category.provisions && /*#__PURE__*/_jsxDEV(RightChevron, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 43\n            }, this)]\n          }, \"category\" + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), categorySelected !== 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"sub-categories col-7 hidden\",\n        children: provCategoriesList.map((provcategory, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => modifyHeader(provcategory.name, provcategory.id),\n            className: \"dropdown-content\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", provcategory.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this)\n          }, \"sub_categrory\" + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoriesDropDown, \"XE4IIzscDsCWtoODiaaTKcwXNDI=\");\n\n_c = CategoriesDropDown;\nexport default CategoriesDropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesDropDown\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/components/categories-dropdown.js"],"names":["useEffect","useState","useRef","welcomeConroller","RightChevron","Toggle","DownChevron","classNames","CategoriesDropDown","props","visible","isVisible","categorySelected","setCategorySelected","professionselected","setProfessionSelected","provCategoriesList","setProvCategoriesList","headerText","setHeaderText","showHeaderText","setShowHeaderText","data","ref","length","category_id","getCategory","then","response","console","log","name","checkIfClickedOutside","e","current","contains","target","document","addEventListener","removeEventListener","selectAll","onChange","profession_id","modifyHeader","id","modifyCategorySelected","provision","provision_id","getProfessionByCategory","map","category","index","provisions","selected","provcategory"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport { welcomeConroller } from \"../controllers/welcome-page\";\nimport RightChevron from \"../icons/right-chevron\";\nimport Toggle from \"../icons/toggle\";\nimport DownChevron from \"../icons/down-chevron\";\nimport classNames from \"classnames\";\n\nconst CategoriesDropDown = ({ ...props }) => {\n  const [visible, isVisible] = useState(false);\n  const [categorySelected, setCategorySelected] = useState(0);\n  const [professionselected, setProfessionSelected] = useState(-1);\n  const [provCategoriesList, setProvCategoriesList] = useState([]);\n  const [headerText, setHeaderText] = useState(\"\");\n  const [showHeaderText, setShowHeaderText] = useState(props.data ? false : true);\n  const ref = useRef();\n\n  useEffect(() => {\n    if(props.data.length === 0){\n      let category_id = props.category_id;\n      welcomeConroller.getCategory(category_id).then((response) => {\n        console.log(response)\n        setHeaderText(response.data[0].name)\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    const checkIfClickedOutside = (e) => {\n      if (visible && ref.current && !ref.current.contains(e.target)) {\n        isVisible(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\n    };\n  }, [visible]);\n\n\n\n  const selectAll = () => {\n    setShowHeaderText(\"\");\n    isVisible(false);\n    setCategorySelected(0);\n    props.onChange({\n      category_id: 0,\n      profession_id: professionselected,\n    });\n  };\n\n  const modifyHeader = (name, id) => {\n    props.onChange({\n      category_id: categorySelected,\n      profession_id: id,\n    });\n    setProfessionSelected(id);\n    isVisible(false);\n    setHeaderText(name);\n    setShowHeaderText(true);\n  };\n\n  const modifyCategorySelected = (id, name, provision) => {\n    props.onChange({\n      category_id: id,\n      provision_id: professionselected,\n    });\n    setCategorySelected(id);\n    if (!provision) {\n      isVisible(false);\n      setHeaderText(name);\n      setShowHeaderText(true);\n    }\n  };\n\n  useEffect(() => {\n    welcomeConroller\n      .getProfessionByCategory(categorySelected)\n      .then((response) => {\n        setProvCategoriesList(response.data);\n      });\n  }, [categorySelected]);\n\n  return (\n    <div ref={ref} className=\"col-3\">\n      <div\n        onClick={() => isVisible(!visible)}\n        className=\"dropdown-header d-flex\"\n      >\n        {!showHeaderText && <Toggle />}\n        <span className=\"title\">\n          {\" \"}\n          {showHeaderText ? headerText : \"Categories\"}\n        </span>\n        <div>\n          <DownChevron />\n        </div>\n      </div>\n      {visible && props.data.length !== 0 && (\n        <div  className=\"d-flex categories-dropdown rounded \">\n          <ul className=\"col-5 categories\">\n            <li onClick={() => selectAll()} className=\"dropdown-content\">\n              <span>All Categories</span>\n            </li>\n            {props.data.map((category, index) => {\n              return (\n                <li\n                  key={\"category\" + index}\n                  onClick={() =>\n                    modifyCategorySelected(\n                      category.id,\n                      category.name,\n                      category.provisions\n                    )\n                  }\n                  className={classNames(\"dropdown-content \", {\n                    selected: category.id === categorySelected,\n                  })}\n                >\n                  <span> {category.name}</span>\n                  {category.provisions && <RightChevron />}\n                </li>\n              );\n            })}\n          </ul>\n          {categorySelected !== 0 && (\n            <ul className=\"sub-categories col-7 hidden\">\n              {provCategoriesList.map((provcategory, index) => {\n                return (\n                  <li\n                  key={\"sub_categrory\"+index}\n                    onClick={() =>\n                      modifyHeader(provcategory.name, provcategory.id)\n                    }\n                    className=\"dropdown-content\"\n                  >\n                    <span> {provcategory.name}</span>\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CategoriesDropDown;\n"]},"metadata":{},"sourceType":"module"}