{"ast":null,"code":"import { welcomeConroller } from \"../controllers/welcome-page\";\n\nconst isValidEmail = email => // eslint-disable-next-line no-useless-escape\n/^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n\nconst isValidPassword = password => {\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(password);\n};\n\nconst isValidPhoneNumber = phone_number => {\n  /^[0-9]*$/.test(phone_number);\n};\n\nconst isValidName = firstName => {\n  /^[A-Za-z]+$/i.test(firstName);\n};\n\nconst showItem = (item, searchText) => {\n  let show = false;\n\n  if (searchText === \"\") {\n    return true;\n  }\n\n  Object.keys(item).map((innerAttr, index) => {\n    if ((item[innerAttr] + \"\").indexOf(searchText) >= 0) {\n      show = true;\n    }\n  });\n  return show;\n};\n\nconst getSearchData = ({\n  choiceSelected\n}) => {\n  welcomeConroller.getProfessionByCategory(choiceSelected.category_id).then(response => {\n    let ids = \"\";\n    response.data.map((pr, i) => {\n      ids += \"profession_fk=\" + pr.id + \"&\";\n    });\n    welcomeConroller.getInfoByQuery(ids).then(res => {\n      let list = res.data;\n\n      if (choiceSelected.profession_id !== -1) {\n        list = list.filter(item => item.profession_fk === choiceSelected.profession_id);\n      }\n\n      return list;\n    });\n  });\n};\n\nexport const util = {\n  isValidEmail,\n  isValidName,\n  isValidPassword,\n  isValidPhoneNumber,\n  showItem\n};","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/public/util.js"],"names":["welcomeConroller","isValidEmail","email","test","isValidPassword","password","isValidPhoneNumber","phone_number","isValidName","firstName","showItem","item","searchText","show","Object","keys","map","innerAttr","index","indexOf","getSearchData","choiceSelected","getProfessionByCategory","category_id","then","response","ids","data","pr","i","id","getInfoByQuery","res","list","profession_id","filter","profession_fk","util"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,6BAAjC;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IACnB;AACA,kDAAkDC,IAAlD,CAAuDD,KAAvD,CAFF;;AAIA,MAAME,eAAe,GAAIC,QAAD,IAAc;AACpC,mDAAiDF,IAAjD,CAAsDE,QAAtD;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,YAAD,IAAkB;AAC3C,aAAWJ,IAAX,CAAgBI,YAAhB;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAIC,SAAD,IAAe;AACjC,iBAAeN,IAAf,CAAoBM,SAApB;AACD,CAFD;;AAIA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;AACrC,MAAIC,IAAI,GAAG,KAAX;;AACA,MAAID,UAAU,KAAK,EAAnB,EAAuB;AACrB,WAAO,IAAP;AACD;;AACDE,EAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,GAAlB,CAAsB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC1C,QAAI,CAACP,IAAI,CAACM,SAAD,CAAJ,GAAkB,EAAnB,EAAuBE,OAAvB,CAA+BP,UAA/B,KAA8C,CAAlD,EAAqD;AACnDC,MAAAA,IAAI,GAAG,IAAP;AACD;AACF,GAJD;AAMA,SAAOA,IAAP;AACD,CAZD;;AAcA,MAAMO,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAC5CrB,EAAAA,gBAAgB,CACbsB,uBADH,CAC2BD,cAAc,CAACE,WAD1C,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,QAAIC,GAAG,GAAG,EAAV;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcX,GAAd,CAAkB,CAACY,EAAD,EAAKC,CAAL,KAAW;AAC3BH,MAAAA,GAAG,IAAI,mBAAmBE,EAAE,CAACE,EAAtB,GAA2B,GAAlC;AACD,KAFD;AAIA9B,IAAAA,gBAAgB,CAAC+B,cAAjB,CAAgCL,GAAhC,EAAqCF,IAArC,CAA2CQ,GAAD,IAAS;AACjD,UAAIC,IAAI,GAAGD,GAAG,CAACL,IAAf;;AAEA,UAAIN,cAAc,CAACa,aAAf,KAAiC,CAAC,CAAtC,EAAyC;AACvCD,QAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CACJxB,IAAD,IAAUA,IAAI,CAACyB,aAAL,KAAuBf,cAAc,CAACa,aAD3C,CAAP;AAGD;;AACD,aAAOD,IAAP;AACD,KATD;AAUD,GAlBH;AAmBD,CApBD;;AAsBA,OAAO,MAAMI,IAAI,GAAG;AAClBpC,EAAAA,YADkB;AAElBO,EAAAA,WAFkB;AAGlBJ,EAAAA,eAHkB;AAIlBE,EAAAA,kBAJkB;AAKlBI,EAAAA;AALkB,CAAb","sourcesContent":["import { welcomeConroller } from \"../controllers/welcome-page\";\n\nconst isValidEmail = (email) =>\n  // eslint-disable-next-line no-useless-escape\n  /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n\nconst isValidPassword = (password) => {\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(password);\n};\n\nconst isValidPhoneNumber = (phone_number) => {\n  /^[0-9]*$/.test(phone_number);\n};\n\nconst isValidName = (firstName) => {\n  /^[A-Za-z]+$/i.test(firstName);\n};\n\nconst showItem = (item, searchText) => {\n  let show = false;\n  if (searchText === \"\") {\n    return true;\n  }\n  Object.keys(item).map((innerAttr, index) => {\n    if ((item[innerAttr] + \"\").indexOf(searchText) >= 0) {\n      show = true;\n    }\n  });\n\n  return show;\n};\n\nconst getSearchData = ({ choiceSelected }) => {\n  welcomeConroller\n    .getProfessionByCategory(choiceSelected.category_id)\n    .then((response) => {\n      let ids = \"\";\n      response.data.map((pr, i) => {\n        ids += \"profession_fk=\" + pr.id + \"&\";\n      });\n\n      welcomeConroller.getInfoByQuery(ids).then((res) => {\n        let list = res.data;\n\n        if (choiceSelected.profession_id !== -1) {\n          list = list.filter(\n            (item) => item.profession_fk === choiceSelected.profession_id\n          );\n        }\n        return list;\n      });\n    });\n};\n\nexport const util = {\n  isValidEmail,\n  isValidName,\n  isValidPassword,\n  isValidPhoneNumber,\n  showItem,\n};\n"]},"metadata":{},"sourceType":"module"}