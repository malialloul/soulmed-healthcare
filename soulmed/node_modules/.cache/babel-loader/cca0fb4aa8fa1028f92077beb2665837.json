{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/components/registration-modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport SelectYears from \"../inputs/select-years\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/registration-modal.css\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { util } from \"../public/util\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegistrationModal = ({ ...props\n}) => {\n  _s();\n\n  var _errors$firstName, _errors$lastName, _errors$email, _errors$password, _errors$phone_number;\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState,\n    watch,\n    control\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const {\n    errors,\n    isDirty,\n    isSubmitting,\n    isValid\n  } = formState;\n  const password = useRef();\n  password.current = watch(\"password\", \"\");\n\n  const onSubmitHandler = data => {\n    props.onSubmit();\n    reset();\n  };\n\n  const [termsChecked, setTermsChecked] = useState(false);\n  const [showTermsModal, setShowTermsModal] = useState(false);\n  const [showCustomDiv, setShowCustomDiv] = useState(false);\n  const [gender, setGender] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const options = [{\n    value: \"1\",\n    label: 'She: \"Wish her a happy birthday!\"'\n  }, {\n    value: \"2\",\n    label: 'He: \"Wish him a happy birthday!\"'\n  }, {\n    value: \"3\",\n    label: 'They: \"Wish them a happy birthday!\"'\n  }];\n\n  const setUserGender = gender => {\n    setGender(gender);\n    setShowCustomDiv(false);\n  };\n\n  const customHandler = () => {\n    setGender(\"custom\");\n    setShowCustomDiv(true);\n  };\n\n  const modal = /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    show: showTermsModal,\n    onHide: () => setShowTermsModal(false),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"subtitle\",\n            children: \"It's quick and easy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [modal, /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-title d-flex justify-content-center w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Register Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmitHandler),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group d-flex flex-column w-100\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"First Name\",\n                    className: \"input full-width\",\n                    ...register(\"firstName\", {\n                      pattern: /^[A-Za-z]+$/i,\n                      validate: value => value !== \"\" && util.isValidName(value)\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error\",\n                  children: ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"pattern\" && \"Invalid Format, special characters are not allowed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group d-flex flex-column w-100\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Last Name\",\n                    className: \"input full-width\",\n                    ...register(\"lastName\", {\n                      pattern: /^[A-Za-z]+$/i,\n                      validate: value => value !== \"\" && util.isValidName(value)\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error\",\n                  children: ((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"pattern\" && \"Invalid Format, special characters are not allowed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                required: true,\n                className: \"input full-width\",\n                ...register(\"email\", {\n                  pattern: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                  validate: value => value !== \"\" && util.isValidEmail(value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"pattern\" && \"Invalid email format\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"New Password\",\n                className: \"input full-width\",\n                ...register(\"password\", {\n                  pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n                  validate: value => value !== \"\" && util.isValidPassword(value)\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === \"pattern\" && \"Invalid format, please retype password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                className: \"input full-width\",\n                ...register(\"confirm_password\", {\n                  validate: value => value === password.current || \"The passwords do not match\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.confirm_password && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: errors.confirm_password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              ...register(\"dob\", {\n                validate: value => value !== \"\" && value !== null && new Date() - new Date(value) >= 0\n              }),\n              render: ({\n                field: {\n                  onChange,\n                  value\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"dob full-width\",\n                  onChange: onChange,\n                  required: true,\n                  selected: value,\n                  placeholderText: \"dd/mm/yyy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", { ...register(\"country\", {\n                  validate: value => value !== \"\"\n                }),\n                required: true,\n                className: \"w-100\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  selected: true,\n                  value: \"\",\n                  children: \"Select your country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Lebanon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"US\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"France\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.country && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Select a country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"input\",\n                  disabled: true,\n                  value: \"+961\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Phone Number\",\n                  className: \"input full-width\",\n                  ...register(\"phone_number\", {\n                    pattern: /^[0-9]*$/,\n                    validate: value => value !== \"\" && util.isValidPhoneNumber(value)\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: ((_errors$phone_number = errors.phone_number) === null || _errors$phone_number === void 0 ? void 0 : _errors$phone_number.type) === \"pattern\" && \"Invalid format\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Register as\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    value: \"patient\",\n                    checked: role === \"patient\",\n                    onClick: () => setRole(\"patient\"),\n                    ...register(\"role1\", {\n                      validate: value => role !== \"\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    value: \"doctor\",\n                    checked: role === \"doctor\",\n                    onClick: () => setRole(\"doctor\"),\n                    ...register(\"role2\", {\n                      validate: value => role !== \"\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Doctor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    checked: role === \"organization\",\n                    value: \"organization\",\n                    onClick: () => setRole(\"organization\"),\n                    ...register(\"role3\", {\n                      validate: value => role !== \"\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Organization\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    value: \"male\",\n                    checked: gender === \"male\",\n                    onClick: () => setUserGender(\"male\"),\n                    ...register(\"gender1\", {\n                      validate: value => gender !== \"\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    value: \"female\",\n                    checked: gender === \"female\",\n                    onClick: () => setUserGender(\"female\"),\n                    ...register(\"gender2\", {\n                      validate: value => gender !== \"\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    onClick: () => customHandler(),\n                    type: \"radio\",\n                    checked: showCustomDiv === true,\n                    value: \"custom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Custom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), showCustomDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-col\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", { ...register(\"custom_select\", {\n                    validate: value => gender !== \"\" || !showCustomDiv\n                  }),\n                  onChange: e => setGender(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    disabled: true,\n                    children: \"Select your pronoun\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 23\n                  }, this), options.map((option, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option.label,\n                      children: option.label\n                    }, option.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 27\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Your pronoun is visible to everyone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input full-width\",\n                  placeholder: \"Gender (optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column justify-items-center w-100 p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center justify-content-center w-full p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  value: \"terms_and_conditions\",\n                  className: classNames(\"check\", {}),\n                  onClick: e => setTermsChecked(e.target.checked),\n                  ...register(\"terms_and_conditions\", {\n                    validate: value => termsChecked === true\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"ms-2\",\n                  children: [\"I agree with the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#\",\n                    onClick: () => setShowTermsModal(true),\n                    children: [\" \", \"terms and condition\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group flex-column w-full\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center justify-content-center w-full\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    className: \"check\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"ms-2\",\n                    children: [\"I want to receive \", /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"#\",\n                      children: \" the new letter \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"signup-btn d-flex justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"btn\",\n                  type: \"submit\",\n                  disabled: !isDirty || !isValid,\n                  value: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RegistrationModal, \"kXrbSQ7yO7JNQFRj81K9y7VEET0=\", false, function () {\n  return [useForm];\n});\n\n_c = RegistrationModal;\nexport default RegistrationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationModal\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/components/registration-modal.js"],"names":["React","useState","useRef","Modal","SelectYears","useForm","Controller","DatePicker","yupResolver","yup","util","classNames","RegistrationModal","props","register","handleSubmit","reset","formState","watch","control","mode","errors","isDirty","isSubmitting","isValid","password","current","onSubmitHandler","data","onSubmit","termsChecked","setTermsChecked","showTermsModal","setShowTermsModal","showCustomDiv","setShowCustomDiv","gender","setGender","role","setRole","options","value","label","setUserGender","customHandler","modal","pattern","validate","isValidName","firstName","type","lastName","isValidEmail","email","isValidPassword","confirm_password","message","Date","field","onChange","country","isValidPhoneNumber","phone_number","e","target","map","option","i","checked"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport SelectYears from \"../inputs/select-years\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/registration-modal.css\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { util } from \"../public/util\";\nimport classNames from \"classnames\";\n\nconst RegistrationModal = ({ ...props }) => {\n  const { register, handleSubmit, reset, formState, watch, control } = useForm({\n    mode: \"onChange\",\n  });\n  const { errors, isDirty, isSubmitting, isValid } = formState;\n  const password = useRef();\n  password.current = watch(\"password\", \"\");\n\n  const onSubmitHandler = (data) => {\n    props.onSubmit();\n    reset();\n  };\n\n  const [termsChecked, setTermsChecked] = useState(false);\n  const [showTermsModal, setShowTermsModal] = useState(false);\n  const [showCustomDiv, setShowCustomDiv] = useState(false);\n  const [gender, setGender] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n\n  const options = [\n    { value: \"1\", label: 'She: \"Wish her a happy birthday!\"' },\n    {\n      value: \"2\",\n      label: 'He: \"Wish him a happy birthday!\"',\n    },\n    {\n      value: \"3\",\n      label: 'They: \"Wish them a happy birthday!\"',\n    },\n  ];\n  const setUserGender = (gender) => {\n    setGender(gender);\n    setShowCustomDiv(false);\n  };\n  const customHandler = () => {\n    setGender(\"custom\");\n    setShowCustomDiv(true);\n  };\n  const modal = (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={showTermsModal}\n      onHide={() => setShowTermsModal(false)}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          <div className=\"signup-title\">\n            <span className=\"title\">Sign Up</span> <br />\n            <span className=\"subtitle\">It's quick and easy.</span>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body></Modal.Body>\n    </Modal>\n  );\n\n  return (\n    <>\n      {modal}\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter \">\n            <div className=\"signup-title d-flex justify-content-center w-100\">\n              <span className=\"title\">Register Now</span> <br />\n            </div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"signup-form\">\n            <form onSubmit={handleSubmit(onSubmitHandler)}>\n              <div className=\"form-group d-flex justify-content-between\">\n                {/* <div className=\"flex-column d-flex\">\n<select\n  placeholder=\"prefix\"\n  {...register(\"prefix\", {\n    validate: (value) => value !== \"\",\n  })}\n>\n  <option value=\"\" selected disabled>\n    Prefix\n  </option>\n  <option>Mr.</option>\n  <option>Ms.</option>\n  <option>Mrs.</option>\n  <option>Dr.</option>\n  <option>Prof.</option>\n</select>\n<div className=\"error\">\n  {errors.prefix && <p>Select a prefix</p>}\n</div>\n</div>*/}\n                <div className=\"form-group d-flex flex-column w-100\">\n                  <div className=\"d-flex\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                      className=\"input full-width\"\n                      {...register(\"firstName\", {\n                        pattern: /^[A-Za-z]+$/i,\n\n                        validate: (value) =>\n                          value !== \"\" && util.isValidName(value),\n                      })}\n                    />\n                  </div>\n                  <div className=\"error\">\n                    {errors.firstName?.type === \"pattern\" &&\n                      \"Invalid Format, special characters are not allowed\"}\n                  </div>\n                </div>\n\n                <div className=\"form-group d-flex flex-column w-100\">\n                  <div className=\"d-flex\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                      className=\"input full-width\"\n                      {...register(\"lastName\", {\n                        pattern: /^[A-Za-z]+$/i,\n\n                        validate: (value) =>\n                          value !== \"\" && util.isValidName(value),\n                      })}\n                    />\n                  </div>\n                  <div className=\"error\">\n                    {errors.lastName?.type === \"pattern\" &&\n                      \"Invalid Format, special characters are not allowed\"}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group d-flex flex-column\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  required\n                  className=\"input full-width\"\n                  {...register(\"email\", {\n                    pattern: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                    validate: (value) =>\n                      value !== \"\" && util.isValidEmail(value),\n                  })}\n                />\n                <div className=\"error\">\n                  {errors.email?.type === \"pattern\" && \"Invalid email format\"}\n                </div>\n              </div>\n\n              <div className=\"form-group d-flex flex-column\">\n                <input\n                  type=\"text\"\n                  placeholder=\"New Password\"\n                  className=\"input full-width\"\n                  {...register(\"password\", {\n                    pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n                    validate: (value) =>\n                      value !== \"\" && util.isValidPassword(value),\n                  })}\n                />\n                <div className=\"error\">\n                  {errors.password?.type === \"pattern\" &&\n                    \"Invalid format, please retype password\"}\n                </div>\n              </div>\n\n              <div className=\"form-group d-flex flex-column\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  className=\"input full-width\"\n                  {...register(\"confirm_password\", {\n                    validate: (value) =>\n                      value === password.current ||\n                      \"The passwords do not match\",\n                  })}\n                />\n                <div className=\"error\">\n                  {errors.confirm_password && (\n                    <p>{errors.confirm_password.message}</p>\n                  )}\n                </div>\n              </div>\n\n              <Controller\n                control={control}\n                {...register(\"dob\", {\n                  validate: (value) =>\n                    value !== \"\" &&\n                    value !== null &&\n                    new Date() - new Date(value) >= 0,\n                })}\n                render={({ field: { onChange, value } }) => {\n                  return (\n                    <DatePicker\n                      className=\"dob full-width\"\n                      onChange={onChange}\n                      required\n                      selected={value}\n                      placeholderText=\"dd/mm/yyy\"\n                    />\n                  );\n                }}\n              />\n\n              <div className=\"form-group d-flex flex-column\">\n                <select\n                  {...register(\"country\", {\n                    validate: (value) => value !== \"\",\n                  })}\n                  required\n                  className=\"w-100\"\n                >\n                  <option disabled selected value=\"\">\n                    Select your country\n                  </option>\n                  <option>Lebanon</option>\n                  <option>US</option>\n                  <option>France</option>\n                </select>\n                <div className=\"error\">\n                  {errors.country && <p>Select a country</p>}\n                </div>\n              </div>\n\n              <div className=\"form-group d-flex flex-column\">\n                <div className=\"d-flex\">\n                  <input type=\"text\" className=\"input\" disabled value=\"+961\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Phone Number\"\n                    className=\"input full-width\"\n                    {...register(\"phone_number\", {\n                      pattern: /^[0-9]*$/,\n                      validate: (value) =>\n                        value !== \"\" && util.isValidPhoneNumber(value),\n                    })}\n                  />\n                </div>\n                <div className=\"error\">\n                  {errors.phone_number?.type === \"pattern\" && \"Invalid format\"}\n                </div>\n              </div>\n\n              <div className=\"form-group flex-column\">\n                <span>Register as</span>\n                <div className=\"d-flex\">\n                  <div className=\"form-group form-check\">\n                    <input\n                      type=\"radio\"\n                      value=\"patient\"\n                      checked={role === \"patient\"}\n\n                      onClick = {() => setRole(\"patient\")}\n                      {...register(\"role1\", {\n                        validate: (value) => role !== \"\",\n                      })}\n                    />\n                    <label>Patient</label>\n                  </div>\n                  <div className=\"form-group form-check\">\n                    <input\n                      type=\"radio\"\n                      value=\"doctor\"\n                      checked={role === \"doctor\"}\n\n                      onClick = {() => setRole(\"doctor\")}\n\n                      {...register(\"role2\", {\n                        validate: (value) => role !== \"\",\n                      })}\n                    />\n                    <label>Doctor</label>\n                  </div>\n                  <div className=\"form-group form-check\">\n                    <input\n                      type=\"radio\"\n                      checked={role === \"organization\"}\n                      value=\"organization\"\n                      onClick = {() => setRole(\"organization\")}\n\n                      {...register(\"role3\", {\n                        validate: (value) => role !== \"\",\n                      })}\n                    />\n                    <label>Organization</label>\n                  </div>\n                </div>\n              \n              </div>\n\n\n              <div className=\"form-group flex-column\">\n                <span>Gender</span>\n                <div className=\"d-flex\">\n                  <div className=\"form-group form-check\">\n                    <input\n                      type=\"radio\"\n                      value=\"male\"\n                      checked={gender === \"male\"}\n                      onClick={() => setUserGender(\"male\")}\n                      {...register(\"gender1\", {\n                        validate: (value) => gender !== \"\",\n                      })}\n                    />\n                    <label>Male</label>\n                  </div>\n                  <div className=\"form-group form-check\">\n                    <input\n                      type=\"radio\"\n                      value=\"female\"\n                      checked={gender === \"female\"}\n                      onClick={() => setUserGender(\"female\")}\n                      {...register(\"gender2\", {\n                        validate: (value) => gender !== \"\",\n                      })}\n                    />\n                    <label>Female</label>\n                  </div>\n                  <div className=\"form-group form-check\">\n                    <input\n                      onClick={() => customHandler()}\n                      type=\"radio\"\n                      checked={showCustomDiv === true}\n                      value=\"custom\"\n                    />\n                    <label>Custom</label>\n                  </div>\n                </div>\n                {showCustomDiv && (\n                  <div className=\"flex-col\">\n                    <select\n                      {...register(\"custom_select\", {\n                        validate: (value) => gender !== \"\" || !showCustomDiv,\n                      })}\n                      onChange={(e) => setGender(e.target.value)}\n                    >\n                      <option disabled>Select your pronoun</option>\n                      {options.map((option, i) => {\n                        return (\n                          <option key={option.value} value={option.label}>\n                            {option.label}\n                          </option>\n                        );\n                      })}\n                    </select>\n\n                    <label>Your pronoun is visible to everyone</label>\n                    <br />\n                    <br />\n                    <input\n                      className=\"input full-width\"\n                      placeholder=\"Gender (optional)\"\n                    />\n                  </div>\n                )}\n              </div>\n\n              <br />\n              <div className=\"d-flex flex-column justify-items-center w-100 p-4\">\n                <div className=\"d-flex align-items-center justify-content-center w-full p-3\">\n                  <input\n                    type=\"checkbox\"\n                    value=\"terms_and_conditions\"\n                    className={classNames(\"check\", {})}\n                    onClick={(e) => setTermsChecked(e.target.checked)}\n                    {...register(\"terms_and_conditions\", {\n                      validate: (value) => termsChecked === true,\n                    })}\n                  />\n                  <label className=\"ms-2\">\n                    I agree with the{\" \"}\n                    <a href=\"#\" onClick={() => setShowTermsModal(true)}>\n                      {\" \"}\n                      terms and condition{\" \"}\n                    </a>\n                  </label>\n                </div>\n                <div className=\"form-group flex-column w-full\">\n                  <div className=\"d-flex align-items-center justify-content-center w-full\">\n                    <input type=\"checkbox\" className=\"check\" />\n                    <label className=\"ms-2\">\n                      I want to receive <a href=\"#\"> the new letter </a>\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"d-flex align-items-center justify-content-center\">\n                <div className=\"signup-btn d-flex justify-content-center\">\n                  <input\n                    className=\"btn\"\n                    type=\"submit\"\n                    disabled={!isDirty || !isValid}\n                    value=\"Register\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default RegistrationModal;\n"]},"metadata":{},"sourceType":"module"}