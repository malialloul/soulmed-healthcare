{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/views/products/main-page.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { productsController } from \"../../controllers/product-page\";\nimport \"../../css/products-main.css\";\nimport DownChevron from \"../../icons/down-chevron\";\nimport Close from \"../../icons/close\";\nimport SearchIcon from \"../../icons/search-icon\";\nimport { ReactiveBase, RangeSlider, SelectedFilters, ResultList, ReactiveList } from \"@appbaseio/reactivesearch\";\nimport classNames from \"classnames\";\nimport ProductsCustomPagination from \"../../inputs/products-custom-pagination\";\nimport NavBar from \"../../components/nav-bar\";\nimport PriceRange from \"../../inputs/price-range\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Product = ({ ...props\n}) => {\n  _s();\n\n  let {\n    productId\n  } = useParams();\n  const [productsList, setProductsList] = useState([]);\n  const [maxPrice, setMaxPrice] = useState(1);\n  const [categorySelected, setCategorySelected] = useState(-1);\n  const categories = [\"Remote Patient Monitoring\", \"Prosthodontics\", \"Virtual Examination Room\"];\n  useEffect(() => {\n    productsController.getProducts().then(response => {\n      setProductsList(response.data);\n      let max = 0;\n      response.data.map((pr, i) => {\n        if (pr.price > max) {\n          max = pr.price;\n        }\n      });\n      setMaxPrice(max);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      selectedTab: \"products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row col-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 filter-keys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Product, \"zQrJSisRHB/A/HmAQJwQVKAfS74=\", false, function () {\n  return [useParams];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/views/products/main-page.js"],"names":["useEffect","useState","useParams","productsController","DownChevron","Close","SearchIcon","ReactiveBase","RangeSlider","SelectedFilters","ResultList","ReactiveList","classNames","ProductsCustomPagination","NavBar","PriceRange","Product","props","productId","productsList","setProductsList","maxPrice","setMaxPrice","categorySelected","setCategorySelected","categories","getProducts","then","response","data","max","map","pr","i","price"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAO,6BAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,SACEC,YADF,EAEEC,WAFF,EAGEC,eAHF,EAIEC,UAJF,EAKEC,YALF,QAMO,2BANP;AAOA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAkB;AAAA;;AAChC,MAAI;AAAEC,IAAAA;AAAF,MAAgBhB,SAAS,EAA7B;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACsB,gBAAD,EAAmBC,mBAAnB,IAA0CvB,QAAQ,CAAC,CAAC,CAAF,CAAxD;AACA,QAAMwB,UAAU,GAAG,CACjB,2BADiB,EAEjB,gBAFiB,EAGjB,0BAHiB,CAAnB;AAMAzB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,kBAAkB,CAACuB,WAAnB,GAAiCC,IAAjC,CAAuCC,QAAD,IAAc;AAClDR,MAAAA,eAAe,CAACQ,QAAQ,CAACC,IAAV,CAAf;AAEA,UAAIC,GAAG,GAAG,CAAV;AACAF,MAAAA,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkB,CAACC,EAAD,EAAKC,CAAL,KAAW;AAC3B,YAAID,EAAE,CAACE,KAAH,GAAWJ,GAAf,EAAoB;AAClBA,UAAAA,GAAG,GAAGE,EAAE,CAACE,KAAT;AACD;AACF,OAJD;AAKAZ,MAAAA,WAAW,CAACQ,GAAD,CAAX;AACD,KAVD;AAWD,GAZQ,EAYN,EAZM,CAAT;AAeA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACG;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADH,eAIG;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAgBD,CA1CD;;GAAMd,O;UACgBd,S;;;KADhBc,O;AA4CN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { productsController } from \"../../controllers/product-page\";\nimport \"../../css/products-main.css\";\nimport DownChevron from \"../../icons/down-chevron\";\nimport Close from \"../../icons/close\";\nimport SearchIcon from \"../../icons/search-icon\";\n\nimport {\n  ReactiveBase,\n  RangeSlider,\n  SelectedFilters,\n  ResultList,\n  ReactiveList,\n} from \"@appbaseio/reactivesearch\";\nimport classNames from \"classnames\";\nimport ProductsCustomPagination from \"../../inputs/products-custom-pagination\";\nimport NavBar from \"../../components/nav-bar\";\nimport PriceRange from \"../../inputs/price-range\";\n\nconst Product = ({ ...props }) => {\n  let { productId } = useParams();\n  const [productsList, setProductsList] = useState([]);\n  const [maxPrice, setMaxPrice] = useState(1);\n  const [categorySelected, setCategorySelected] = useState(-1);\n  const categories = [\n    \"Remote Patient Monitoring\",\n    \"Prosthodontics\",\n    \"Virtual Examination Room\",\n  ];\n\n  useEffect(() => {\n    productsController.getProducts().then((response) => {\n      setProductsList(response.data);\n\n      let max = 0;\n      response.data.map((pr, i) => {\n        if (pr.price > max) {\n          max = pr.price;\n        }\n      });\n      setMaxPrice(max);\n    });\n  }, []);\n\n\n  return (\n    <>\n      <NavBar selectedTab=\"products\" />\n\n      <div className=\"container-fluid\">\n       <div className=\"row col-12\">\n          <div className=\"col-6 filter-keys\">\n\n          </div>\n          <div className=\"col-6\">\n\n          </div>\n       </div>\n      </div>\n    </>\n  );\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}