{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\n\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport { Modal } from \"react-bootstrap\";\nimport \"../css/calendar.css\";\nimport { format } from \"date-fns\";\nimport moment from \"moment\";\nimport { util } from \"../public/util\";\nimport \"../scripts/calendar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calendar = ({ ...props\n}) => {\n  _s();\n\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    view: \"\",\n    filledIn: false,\n    events: props.events,\n    schedule: props.schedule\n  });\n  useEffect(() => {}, [props.schedule]);\n  const [showEventsListModal, setShowEventsListModal] = useState(false);\n  const [bookAppointmentSelected, setBookAppointmentSelected] = useState(false);\n\n  const handleBookApptBtn = () => {\n    setBookAppointmentSelected(true);\n    setShowAppointmentModal(true);\n  };\n\n  const createEvent = () => {\n    let tempData = data;\n    let events = tempData.events;\n\n    if (!bookAppointmentSelected) {\n      let endTime = data.view === \"timeGridWeek\" || data.view === \"timeGridDay\" ? new Date(tempData.start.split(\"+\")[0]) : new Date(tempData.start + \" \" + datetime);\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      endTime = endTime.getFullYear() + \"-\" + (endTime.getMonth() + 1) + \"-\" + endTime.getDate() + \"T\" + endTime.getHours() + \":\" + endTime.getMinutes() + \":\" + (endTime.getSeconds().toString().length === 1 ? \"0\" + endTime.getSeconds() : endTime.getSeconds());\n      let newEvent = {\n        title: appointmentText,\n        id: data.events.length + 1,\n        start: data.view === \"timeGridWeek\" || data.view === \"timeGridDay\" ? tempData.start.split(\"+\")[0] : tempData.start + \"T\" + datetime,\n        end: endTime\n      };\n      console.log(newEvent);\n\n      if (util.isOverlapping(newEvent, data.events)) {\n        alert(\"Appointment Overlapping, Try another time\");\n      } else {\n        events = [...events, newEvent];\n      }\n    } else {\n      let endTime = new Date(datetime.split(\"T\")[0] + \" \" + datetime.split(\"T\")[1]);\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      endTime = endTime.getFullYear() + \"-\" + (endTime.getMonth() + 1) + \"-\" + endTime.getDate() + \"T\" + endTime.getHours() + \":\" + endTime.getMinutes() + \":\" + (endTime.getSeconds().toString().length === 1 ? \"0\" + endTime.getSeconds() : endTime.getSeconds());\n      let newEvent = {\n        title: appointmentText,\n        start: datetime,\n        end: endTime,\n        id: data.events.length + 1\n      };\n\n      if (util.isOverlapping(newEvent, data.events)) {\n        alert(\"Appointment Overlapping, Try another time\");\n      } else {\n        events = [...events, newEvent];\n      }\n    }\n\n    setDatetime(\"\");\n    setAppointmentText(\"\");\n    tempData.events = events;\n    setData(tempData);\n    setShowAppointmentModal(false);\n    setBookAppointmentSelected(false);\n  };\n\n  const handleDateSelect = selectInfo => {\n    if (props.allowEdit) {\n      if (new Date(selectInfo.startStr) - new Date() < 0 && !util.isToday(new Date(selectInfo.startStr))) {\n        alert(\"Cannot add on this day\");\n      } else {\n        let tempData = data;\n        tempData.start = selectInfo.startStr;\n        tempData.end = selectInfo.endStr;\n        tempData.view = selectInfo.view.type;\n        setShowAppointmentModal(true);\n        setData(tempData);\n      }\n    } else {\n      if (selectInfo.view.type === \"dayGridMonth\") {\n        let tempData = data;\n        tempData.events = props.events;\n        tempData.start = selectInfo.startStr;\n        tempData.end = selectInfo.endStr;\n        setData(tempData);\n        setShowEventsListModal(true);\n      }\n    }\n  };\n\n  const handleEventClick = clickInfo => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n    }\n  };\n\n  const workSpec = [{\n    daysOfWeek: [1, 2, 3, 4],\n    startTime: \"08:00\",\n    endTime: \"13:00\"\n  }, {\n    daysOfWeek: [5, 6],\n    startTime: \"09:00\",\n    endTime: \"14:00\"\n  }];\n  const workMin = workSpec.map(item => item.startTime).sort().shift();\n  const workMax = workSpec.map(item => item.endTime).sort().pop();\n  const workDays = [...new Set(workSpec.flatMap(item => item.daysOfWeek))];\n  const hideDays = [...Array(7).keys()].filter(day => !workDays.includes(day));\n\n  let calendar = /*#__PURE__*/_jsxDEV(FullCalendar, {\n    headerToolbar: {\n      left: \"prev,next,today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n    },\n    initialView: \"dayGridMonth\",\n    height: 500,\n    selectable: true,\n    select: handleDateSelect,\n    selectMirror: true,\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    weekends: true,\n    events: props.isDoctor ? props.events : data.events,\n    allDaySlot: false //   businessHours={workSpec}\n    ,\n    slotDuration: \"00:30\" // eventConstraint=\"businessHours\"\n    ,\n    eventOverlap: false,\n    aspectRatio: 5,\n    eventClassNames: \"found-event\",\n    eventDidMount: function (event) {\n      if (!props.isDoctor) {\n        event.el.parentElement.innerHTML = \"<a class='fc-daygrid-event found-event fc-daygrid-dot-event fc-event fc-event-start fc-event-end fc-event-today'><div class='fc-event-title'>BUSY</div></a>\";\n      }\n    } //  eventClick={handleEventClick}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n\n  const hideModal = () => {\n    setShowAppointmentModal(false);\n    let tempData = data;\n    tempData.start = \"\";\n    setData(tempData);\n    setBookAppointmentSelected(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [calendar, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      id: \"is_doctor\",\n      value: props.isDoctor ? \"YES\" : \"NO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), props.allowEdit && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleBookApptBtn(),\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: () => hideModal(),\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Add Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"subtitle\",\n              children: \"It's quick and easy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Appoitment description\",\n            className: \"input\",\n            onChange: e => setAppointmentText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center p-3 input\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Appointment Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"physical\",\n                name: \"apmt_type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Physical\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center mx-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"virtual\",\n                name: \"apmt_type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Virtual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), data.view === \"dayGridMonth\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            defaultValue: startDate,\n            type: bookAppointmentSelected ? \"datetime-local\" : \"time\",\n            step: \"1\",\n            onChange: e => setDatetime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createEvent(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showEventsListModal,\n      onHide: () => setShowEventsListModal(false),\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: [\"All Appointments for\", \" \", moment(new Date(data.start)).format(\"DD-MM-YYYY\").toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [data.events.filter(aptm => util.sameDay(new Date(aptm.start), new Date(data.start))).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Events on this day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }, this), data.events.filter(aptm => util.sameDay(new Date(aptm.start), new Date(data.start))).map(apmt => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: apmt.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(apmt.start).getHours(), \":\", new Date(apmt.start).getMinutes().toString().length === 1 ? \"0\" + new Date(apmt.start).getMinutes() : new Date(apmt.start).getMinutes()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(apmt.end).getHours(), \":\", new Date(apmt.end).getMinutes().toString().length === 1 ? \"0\" + new Date(apmt.end).getMinutes() : new Date(apmt.end).getMinutes()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Calendar, \"eW1pe1Ktr0nIYe0VVNlD8cEXstk=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/calendar.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","format","moment","util","Calendar","props","newEvent","setNewEvent","appointmentText","setAppointmentText","startDate","setStartDate","Date","datetime","setDatetime","added","setAdded","showAppointmentModal","setShowAppointmentModal","data","setData","allFavs","favObj","start","end","view","filledIn","events","schedule","showEventsListModal","setShowEventsListModal","bookAppointmentSelected","setBookAppointmentSelected","handleBookApptBtn","createEvent","tempData","endTime","split","setMinutes","getMinutes","getFullYear","getMonth","getDate","getHours","getSeconds","toString","length","title","id","console","log","isOverlapping","alert","handleDateSelect","selectInfo","allowEdit","startStr","isToday","endStr","type","handleEventClick","clickInfo","window","confirm","event","remove","workSpec","daysOfWeek","startTime","workMin","map","item","sort","shift","workMax","pop","workDays","Set","flatMap","hideDays","Array","keys","filter","day","includes","calendar","left","center","right","isDoctor","el","parentElement","innerHTML","hideModal","e","target","value","aptm","sameDay","apmt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport { Modal } from \"react-bootstrap\";\nimport \"../css/calendar.css\";\nimport { format } from \"date-fns\";\nimport moment from \"moment\";\nimport { util } from \"../public/util\";\nimport \"../scripts/calendar\";\n\nconst Calendar = ({ ...props }) => {\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    view: \"\",\n    filledIn: false,\n    events: props.events,\n    schedule: props.schedule,\n  });\n\n  useEffect(() => {}, [props.schedule]);\n\n  const [showEventsListModal, setShowEventsListModal] = useState(false);\n\n  const [bookAppointmentSelected, setBookAppointmentSelected] = useState(false);\n  const handleBookApptBtn = () => {\n    setBookAppointmentSelected(true);\n    setShowAppointmentModal(true);\n  };\n\n  const createEvent = () => {\n    let tempData = data;\n    let events = tempData.events;\n\n    if (!bookAppointmentSelected) {\n      let endTime =\n        data.view === \"timeGridWeek\" || data.view === \"timeGridDay\"\n          ? new Date(tempData.start.split(\"+\")[0])\n          : new Date(tempData.start + \" \" + datetime);\n\n      endTime.setMinutes(endTime.getMinutes() + 30);\n\n      endTime =\n        endTime.getFullYear() +\n        \"-\" +\n        (endTime.getMonth() + 1) +\n        \"-\" +\n        endTime.getDate() +\n        \"T\" +\n        endTime.getHours() +\n        \":\" +\n        endTime.getMinutes() +\n        \":\" +\n        (endTime.getSeconds().toString().length === 1\n          ? \"0\" + endTime.getSeconds()\n          : endTime.getSeconds());\n      let newEvent = {\n        title: appointmentText,\n        id: data.events.length + 1,\n        start:\n          data.view === \"timeGridWeek\" || data.view === \"timeGridDay\"\n            ? tempData.start.split(\"+\")[0]\n            : tempData.start + \"T\" + datetime,\n        end: endTime,\n      };\n      console.log(newEvent);\n\n      if (util.isOverlapping(newEvent, data.events)) {\n        alert(\"Appointment Overlapping, Try another time\");\n      } else {\n        events = [...events, newEvent];\n      }\n    } else {\n      let endTime = new Date(\n        datetime.split(\"T\")[0] + \" \" + datetime.split(\"T\")[1]\n      );\n      endTime.setMinutes(endTime.getMinutes() + 30);\n\n      endTime =\n        endTime.getFullYear() +\n        \"-\" +\n        (endTime.getMonth() + 1) +\n        \"-\" +\n        endTime.getDate() +\n        \"T\" +\n        endTime.getHours() +\n        \":\" +\n        endTime.getMinutes() +\n        \":\" +\n        (endTime.getSeconds().toString().length === 1\n          ? \"0\" + endTime.getSeconds()\n          : endTime.getSeconds());\n        \n\n      let newEvent = {\n        title: appointmentText,\n        start: datetime,\n        end: endTime,\n        id: data.events.length + 1,\n      };\n      if (util.isOverlapping(newEvent, data.events)) {\n        alert(\"Appointment Overlapping, Try another time\");\n      } else {\n        events = [...events, newEvent];\n      }\n    }\n    setDatetime(\"\");\n    setAppointmentText(\"\");\n    tempData.events = events;\n    setData(tempData);\n    setShowAppointmentModal(false);\n    setBookAppointmentSelected(false);\n  };\n\n  const handleDateSelect = (selectInfo) => {\n    if (props.allowEdit) {\n      if (\n        new Date(selectInfo.startStr) - new Date() < 0 &&\n        !util.isToday(new Date(selectInfo.startStr))\n      ) {\n        alert(\"Cannot add on this day\");\n      } else {\n        let tempData = data;\n        tempData.start = selectInfo.startStr;\n        tempData.end = selectInfo.endStr;\n        tempData.view = selectInfo.view.type;\n        setShowAppointmentModal(true);\n        setData(tempData);\n      }\n    } else {\n      if (selectInfo.view.type === \"dayGridMonth\") {\n        let tempData = data;\n        tempData.events = props.events;\n        tempData.start = selectInfo.startStr;\n        tempData.end = selectInfo.endStr;\n        setData(tempData);\n\n        setShowEventsListModal(true);\n      }\n    }\n  };\n\n  const handleEventClick = (clickInfo) => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  const workSpec = [\n    {\n      daysOfWeek: [1, 2, 3, 4],\n      startTime: \"08:00\",\n      endTime: \"13:00\",\n    },\n    {\n      daysOfWeek: [5, 6],\n      startTime: \"09:00\",\n      endTime: \"14:00\",\n    },\n  ];\n\n  const workMin = workSpec\n    .map((item) => item.startTime)\n    .sort()\n    .shift();\n  const workMax = workSpec\n    .map((item) => item.endTime)\n    .sort()\n    .pop();\n  const workDays = [...new Set(workSpec.flatMap((item) => item.daysOfWeek))];\n  const hideDays = [...Array(7).keys()].filter(\n    (day) => !workDays.includes(day)\n  );\n\n  let calendar = (\n    <FullCalendar\n      headerToolbar={{\n        left: \"prev,next,today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n      }}\n      initialView=\"dayGridMonth\"\n      height={500}\n      selectable={true}\n      select={handleDateSelect}\n      selectMirror={true}\n      plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n      weekends={true}\n      events={props.isDoctor ? props.events : data.events}\n      allDaySlot={false}\n      //   businessHours={workSpec}\n\n      slotDuration={\"00:30\"}\n      // eventConstraint=\"businessHours\"\n      eventOverlap={false}\n      aspectRatio={5}\n      eventClassNames={\"found-event\"}\n      eventDidMount={function (event) {\n        if (!props.isDoctor) {\n          event.el.parentElement.innerHTML =\n            \"<a class='fc-daygrid-event found-event fc-daygrid-dot-event fc-event fc-event-start fc-event-end fc-event-today'><div class='fc-event-title'>BUSY</div></a>\";\n        }\n      }}\n\n      //  eventClick={handleEventClick}\n    />\n  );\n\n  const hideModal = () => {\n    setShowAppointmentModal(false);\n    let tempData = data;\n    tempData.start = \"\";\n    setData(tempData);\n    setBookAppointmentSelected(false);\n  };\n\n  return (\n    <>\n      {calendar}\n      <input\n        type=\"hidden\"\n        id=\"is_doctor\"\n        value={props.isDoctor ? \"YES\" : \"NO\"}\n      />\n      <br />\n      {props.allowEdit && (\n        <button onClick={() => handleBookApptBtn()}>Book Appointment</button>\n      )}\n\n      <Modal\n        show={showAppointmentModal}\n        onHide={() => hideModal()}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <div className=\"signup-title\">\n              <span className=\"title\">Add Appointment</span> <br />\n              <span className=\"subtitle\">It's quick and easy.</span>\n            </div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"d-flex flex-column\">\n            <input\n              type=\"text\"\n              placeholder=\"Appoitment description\"\n              className=\"input\"\n              onChange={(e) => setAppointmentText(e.target.value)}\n            />\n\n            <div className=\"d-flex justify-content-between align-items-center p-3 input\">\n              <span>Appointment Type</span>\n\n              <div className=\"d-flex align-items-center\">\n                <input type=\"radio\" value=\"physical\" name=\"apmt_type\" />\n                <label>Physical</label>\n              </div>\n              <div className=\"d-flex align-items-center mx-2\">\n                <input type=\"radio\" value=\"virtual\" name=\"apmt_type\" />\n                <label>Virtual</label>\n              </div>\n            </div>\n\n            {data.view === \"dayGridMonth\" && (\n              <input\n                className=\"input\"\n                defaultValue={startDate}\n                type={bookAppointmentSelected ? \"datetime-local\" : \"time\"}\n                step=\"1\"\n                onChange={(e) => setDatetime(e.target.value)}\n              />\n            )}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <button onClick={() => createEvent()}>Add</button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={showEventsListModal}\n        onHide={() => setShowEventsListModal(false)}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <div className=\"signup-title\">\n              <span className=\"title\">\n                All Appointments for{\" \"}\n                {moment(new Date(data.start)).format(\"DD-MM-YYYY\").toString()}\n              </span>{\" \"}\n              <br />\n            </div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {data.events.filter((aptm) =>\n            util.sameDay(new Date(aptm.start), new Date(data.start))\n          ).length === 0 && <div>No Events on this day</div>}\n          {data.events\n            .filter((aptm) =>\n              util.sameDay(new Date(aptm.start), new Date(data.start))\n            )\n            .map((apmt) => {\n              return (\n                <div className=\"d-flex flex-column\">\n                  <span>{apmt.title}</span>\n                  <div className=\"d-flex\">\n                    <span>Start Time</span>\n                    <span>\n                      {new Date(apmt.start).getHours()}:\n                      {new Date(apmt.start).getMinutes().toString().length === 1\n                        ? \"0\" + new Date(apmt.start).getMinutes()\n                        : new Date(apmt.start).getMinutes()}\n                    </span>\n                  </div>\n                  <div className=\"d-flex\">\n                    <span>End Time</span>\n                    <span>\n                      {new Date(apmt.end).getHours()}:\n                      {new Date(apmt.end).getMinutes().toString().length === 1\n                        ? \"0\" + new Date(apmt.end).getMinutes()\n                        : new Date(apmt.end).getMinutes()}\n                    </span>\n                  </div>\n                </div>\n              );\n            })}\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}