{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/components/search-model.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport logo from \"../logo.png\";\nimport RightChevron from \"../icons/right-chevron\";\nimport Toggle from \"../icons/toggle\";\nimport DownChevron from \"../icons/down-chevron\";\nimport SearchIcon from \"../icons/search-icon\";\nimport LocationIcon from \"../icons/location-icon\";\nimport AroundMe from \"../icons/around-me\";\nimport Close from \"../icons/close\";\nimport { welcomeConroller } from \"../controllers/welcome-page\";\nimport SearchInput from \"../inputs/search-input\";\nimport CategoriesDropDown from \"./categories-dropdown\";\nimport \"../css/search-model.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchModel = ({ ...props\n}) => {\n  _s();\n\n  const [searchFilterTextValue, setSearchFilterTextValue] = useState(props.searchText ? props.searchText : \"\");\n  const [locationFilterTextValue, setLocationFilterTextValue] = useState(\"\");\n  const [visibleSearchDropDown, setSearchVisibleDropDown] = useState(false);\n  const [visibleLocationDropDown, setLocationVisibleDropDown] = useState(false);\n  const [showAroundMe, setShowAroundMe] = useState(false);\n  const [myLocationText, setMyLocationText] = useState(\"Around Me\");\n  const [searchClass, setSearchClass] = useState(\"apmt\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [choiceSelected, setChoiceSelected] = useState({\n    category_id: props.category_id ? props.category_id : 0,\n    profession_id: props.profession_id ? props.profession_id : -1\n  });\n  const [info, setInfo] = useState([]);\n  useEffect(() => {\n    welcomeConroller.getProfessionByCategory(choiceSelected.category_id).then(response => {\n      let ids = \"\";\n      response.data.map((pr, i) => {\n        ids += \"profession_fk=\" + pr.id + \"&\";\n      });\n      welcomeConroller.getInfoByQuery(ids).then(res => {\n        let list = res.data;\n\n        if (!props.category_id && choiceSelected.profession_id !== -1) {\n          list = list.filter(item => item.profession_fk === choiceSelected.profession_id);\n        }\n\n        setInfo(list);\n      });\n    });\n  }, []);\n  const navigate = useNavigate();\n\n  const navigateToAdvancedSearch = e => {\n    if (e.key === \"Enter\" && searchFilterTextValue !== \"\" && !props.category_id) {\n      navigate(\"advanced-search/\" + choiceSelected.category_id + \"/\" + choiceSelected.profession_id + \"/\" + searchFilterTextValue, {\n        replace: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex align-items-center justify-content-center search-div\",\n    children: [/*#__PURE__*/_jsxDEV(CategoriesDropDown, {\n      data: props.categories ? props.categories : [],\n      choiceSelected: props.categories ? null : choiceSelected,\n      onChange: choice => setChoiceSelected(choice)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n      data: info,\n      searchText: searchFilterTextValue,\n      showItems: props.showItems,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: searchValue === \"\" ? \"Doctor, establishment, speciality ...\" : searchValue,\n          className: \"search-input\",\n          value: searchFilterTextValue,\n          onClick: () => setSearchVisibleDropDown(true),\n          onKeyDown: e => navigateToAdvancedSearch(e),\n          onChange: e => setSearchFilterTextValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchModel, \"X/S9gQTSAFYQmqLPPJiKAgZwbks=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SearchModel;\nexport default SearchModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchModel\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/components/search-model.js"],"names":["useEffect","useState","useRef","logo","RightChevron","Toggle","DownChevron","SearchIcon","LocationIcon","AroundMe","Close","welcomeConroller","SearchInput","CategoriesDropDown","useNavigate","SearchModel","props","searchFilterTextValue","setSearchFilterTextValue","searchText","locationFilterTextValue","setLocationFilterTextValue","visibleSearchDropDown","setSearchVisibleDropDown","visibleLocationDropDown","setLocationVisibleDropDown","showAroundMe","setShowAroundMe","myLocationText","setMyLocationText","searchClass","setSearchClass","searchValue","setSearchValue","choiceSelected","setChoiceSelected","category_id","profession_id","info","setInfo","getProfessionByCategory","then","response","ids","data","map","pr","i","id","getInfoByQuery","res","list","filter","item","profession_fk","navigate","navigateToAdvancedSearch","e","key","replace","categories","choice","showItems","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport logo from \"../logo.png\";\nimport RightChevron from \"../icons/right-chevron\";\nimport Toggle from \"../icons/toggle\";\nimport DownChevron from \"../icons/down-chevron\";\nimport SearchIcon from \"../icons/search-icon\";\nimport LocationIcon from \"../icons/location-icon\";\nimport AroundMe from \"../icons/around-me\";\nimport Close from \"../icons/close\";\nimport { welcomeConroller } from \"../controllers/welcome-page\";\nimport SearchInput from \"../inputs/search-input\";\nimport CategoriesDropDown from \"./categories-dropdown\";\nimport \"../css/search-model.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SearchModel = ({ ...props }) => {\n  const [searchFilterTextValue, setSearchFilterTextValue] = useState(\n    props.searchText ? props.searchText : \"\"\n  );\n  const [locationFilterTextValue, setLocationFilterTextValue] = useState(\"\");\n  const [visibleSearchDropDown, setSearchVisibleDropDown] = useState(false);\n  const [visibleLocationDropDown, setLocationVisibleDropDown] = useState(false);\n  const [showAroundMe, setShowAroundMe] = useState(false);\n  const [myLocationText, setMyLocationText] = useState(\"Around Me\");\n  const [searchClass, setSearchClass] = useState(\"apmt\");\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const [choiceSelected, setChoiceSelected] = useState({\n    category_id: props.category_id ? props.category_id : 0,\n    profession_id: props.profession_id ? props.profession_id : -1,\n  });\n\n  const [info, setInfo] = useState([]);\n\n  useEffect(() => {\n    welcomeConroller\n      .getProfessionByCategory(choiceSelected.category_id)\n      .then((response) => {\n        let ids = \"\";\n        response.data.map((pr, i) => {\n          ids += \"profession_fk=\" + pr.id + \"&\";\n        });\n\n        welcomeConroller.getInfoByQuery(ids).then((res) => {\n          let list = res.data;\n\n          if (!props.category_id && choiceSelected.profession_id !== -1) {\n            list = list.filter(\n              (item) => item.profession_fk === choiceSelected.profession_id\n            );\n          }\n\n          setInfo(list);\n        });\n      });\n  }, []);\n\n  const navigate = useNavigate();\n\n  const navigateToAdvancedSearch = (e) => {\n    if (\n      e.key === \"Enter\" &&\n      searchFilterTextValue !== \"\" &&\n      !props.category_id\n    ) {\n      navigate(\n        \"advanced-search/\" +\n          choiceSelected.category_id +\n          \"/\" +\n          choiceSelected.profession_id +\n          \"/\" +\n          searchFilterTextValue,\n        { replace: true }\n      );\n    }\n  };\n  return (\n    <div className=\"d-flex align-items-center justify-content-center search-div\">\n      <CategoriesDropDown\n        data={props.categories ? props.categories : []}\n        choiceSelected={props.categories ? null : choiceSelected}\n        onChange={(choice) => setChoiceSelected(choice)}\n      />\n\n      <SearchInput\n        data={info}\n        searchText={searchFilterTextValue}\n        showItems = {props.showItems}\n      >\n        <div className=\"dropdown-header\">\n          <input\n            type=\"text\"\n            placeholder={\n              searchValue === \"\"\n                ? \"Doctor, establishment, speciality ...\"\n                : searchValue\n            }\n            className=\"search-input\"\n            value={searchFilterTextValue}\n            onClick={() => setSearchVisibleDropDown(true)}\n            onKeyDown={(e) => navigateToAdvancedSearch(e)}\n            onChange={(e) => setSearchFilterTextValue(e.target.value)}\n          />\n\n          <div className=\"icon\">\n            <SearchIcon />\n          </div>\n        </div>\n      </SearchInput>\n    </div>\n  );\n};\n\nexport default SearchModel;\n"]},"metadata":{},"sourceType":"module"}