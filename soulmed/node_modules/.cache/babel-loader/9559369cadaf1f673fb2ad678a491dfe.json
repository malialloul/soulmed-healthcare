{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\nimport \"../css/pagination.css\";\nimport LeftChevron from \"../icons/left-chevron\";\nimport RightChevron from \"../icons/right-chevron\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst list = [{\n  name: \"item1\"\n}, {\n  name: \"item2\"\n}, {\n  name: \"item3\"\n}, {\n  name: \"item4\"\n}, {\n  name: \"item5\"\n}, {\n  name: \"item6\"\n}, {\n  name: \"item7\"\n}, {\n  name: \"item8\"\n}, {\n  name: \"item9\"\n}];\n\nconst Pagination = () => {\n  _s();\n\n  const selected = \"item1\";\n  const menu = list.map(el => {\n    const {\n      name\n    } = el;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `menu-item ${selected ? \"active\" : \"\"}`,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  });\n  const [selectedKey, setSelectedKey] = useState(-1);\n\n  const onSelect = key => {\n    setSelectedKey(key);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ScrollMenu, {\n    data: menu,\n    arrowLeft: /*#__PURE__*/_jsxDEV(LeftChevron, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this),\n    arrowRight: /*#__PURE__*/_jsxDEV(RightChevron, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this),\n    selected: selectedKey,\n    onSelect: onSelect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"kZQ0TgaH9+Js6/VaM3nlhv/vnF0=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/pagination.js"],"names":["React","Component","useState","ScrollMenu","LeftChevron","RightChevron","list","name","Pagination","selected","menu","map","el","selectedKey","setSelectedKey","onSelect","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAO,uBAAP;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE;AAAR,CADW,EAEX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAFW,EAGX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAHW,EAIX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAJW,EAKX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CALW,EAMX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CANW,EAOX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAPW,EAQX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CARW,EASX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CATW,CAAb;;AAYA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAG,OAAjB;AACA,QAAMC,IAAI,GAAGJ,IAAI,CAACK,GAAL,CAAUC,EAAD,IAAQ;AAC5B,UAAM;AAAEL,MAAAA;AAAF,QAAWK,EAAjB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAG,aAAYH,QAAQ,GAAG,QAAH,GAAc,EAAG,EAAtD;AAAA,gBAA0DF;AAA1D;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GANY,CAAb;AAQA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAC,CAAF,CAA9C;;AAEA,QAAMa,QAAQ,GAAIC,GAAD,IAAS;AACxBF,IAAAA,cAAc,CAACE,GAAD,CAAd;AACD,GAFD;;AAIA,sBACE,QAAC,UAAD;AACE,IAAA,IAAI,EAAEN,IADR;AAEE,IAAA,SAAS,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFb;AAGE,IAAA,UAAU,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAHd;AAIE,IAAA,QAAQ,EAAEG,WAJZ;AAKE,IAAA,QAAQ,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzBD;;GAAMP,U;;KAAAA,U;AA2BN,eAAeA,UAAf","sourcesContent":["import React, { Component, useState } from \"react\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\nimport \"../css/pagination.css\";\nimport LeftChevron from \"../icons/left-chevron\";\nimport RightChevron from \"../icons/right-chevron\";\n\nconst list = [\n  { name: \"item1\" },\n  { name: \"item2\" },\n  { name: \"item3\" },\n  { name: \"item4\" },\n  { name: \"item5\" },\n  { name: \"item6\" },\n  { name: \"item7\" },\n  { name: \"item8\" },\n  { name: \"item9\" },\n];\n\nconst Pagination = () => {\n  const selected = \"item1\";\n  const menu = list.map((el) => {\n    const { name } = el;\n\n    return (\n      <div className={`menu-item ${selected ? \"active\" : \"\"}`}>{name}</div>\n    );\n  });\n\n  const [selectedKey, setSelectedKey] = useState(-1);\n\n  const onSelect = (key) => {\n    setSelectedKey(key);\n  };\n\n  return (\n    <ScrollMenu\n      data={menu}\n      arrowLeft={<LeftChevron />}\n      arrowRight={<RightChevron />}\n      selected={selectedKey}\n      onSelect={onSelect}\n    />\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}