{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/views/doctor/schedule-settings.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doctorController } from \"../../controllers/doctor\";\nimport Layout from \"./layout\";\nimport \"../../css/schedule-settings.css\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport { util } from \"../../public/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScheduleSettings = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [doctorData, setDoctorData] = useState({\n    id: -1,\n    name: \"\",\n    country: \"\",\n    profession_fk: -1,\n    city: \"\",\n    Price: \"\",\n    location: []\n  });\n  const [doctorSchedule, setDoctorSchedule] = useState([]);\n  useEffect(() => {\n    doctorController.getDoctorInfo(id).then(response => {\n      setDoctorData(response.data);\n    }).then(() => {\n      doctorController.getDoctorSchedule(id).then(res => {\n        setDoctorSchedule(res.data);\n      }).then(() => {\n        setLoading(false);\n      });\n    });\n  }, []);\n  const daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  const [timingIndexCount, setTimingIndexCount] = useState(doctorSchedule.length);\n  const [timingArray, setTimingarray] = useState([]);\n\n  const addTiming = () => {\n    let temp = timingArray;\n    temp = [...temp, {\n      id: timingIndexCount + 1,\n      start: \"\",\n      end: \"\",\n      type: \"\"\n    }];\n    setTimingarray(temp);\n    console.log(temp);\n    setTimingIndexCount(timingIndexCount + 1);\n  };\n\n  const deleteTiming = index => {\n    let temp = timingArray;\n    temp = timingArray.filter(timing => timing.id !== index);\n    setTimingarray(temp);\n  };\n\n  const modifyStartTiming = (id, index, value) => {\n    let temp = timingArray;\n    let tempTime = temp[index];\n    temp = timingArray.filter(timing => timing.id !== id || timing.id !== id && timing.start === \"\" || timing.id !== id && timing.end === \"\");\n    tempTime.start = value;\n    temp = [...temp.slice(0, index), tempTime, ...temp.slice(index)];\n    setTimingarray(temp);\n  };\n\n  const modifyEndTiming = (id, index, value) => {\n    let temp = timingArray;\n    let tempTime = temp[index];\n    temp = timingArray.filter(timing => timing.id !== id || timing.id !== id && timing.start === \"\" || timing.id !== id && timing.end === \"\");\n    tempTime.end = value;\n    temp = [...temp.slice(0, index), tempTime, ...temp.slice(index)];\n    setTimingarray(temp);\n  };\n\n  const modifyAppointmentsType = (index, value) => {\n    let temp = timingArray;\n    temp[index].type = value;\n    setTimingarray(temp);\n  };\n\n  const [location, setLocation] = useState(\"\");\n  const [daysSelected, setDaysSelected] = useState([]);\n  const navigate = useNavigate();\n\n  const updateSchedule = () => {\n    let overlapping = false;\n    let emptyFields = false;\n    let validIntervals = true;\n    let newTimingDates = [];\n    let count = 0;\n    doctorController.getDoctorSchedule(id).then(response => {\n      for (let i = 0; i < timingArray.length; i++) {\n        for (let j = 0; j < daysSelected.length; j++) {\n          newTimingDates = [...newTimingDates, {\n            id: response.data.length + i + count + 1,\n            doctor_fk: parseInt(id),\n            start: moment(util.getDayDate(daysOfWeek.indexOf(daysSelected[j]))).format(\"YYYY-MM-DD\") + \"T\" + timingArray[i].start,\n            end: moment(util.getDayDate(daysOfWeek.indexOf(daysSelected[j]))).format(\"YYYY-MM-DD\") + \"T\" + timingArray[i].end,\n            location: location,\n            type: parseInt(timingArray[i].type)\n          }];\n          count++;\n        }\n      }\n\n      console.log(newTimingDates);\n\n      for (let i = 0; i < newTimingDates.length; i++) {\n        if (util.isOverlapping(newTimingDates[i], newTimingDates)) {\n          overlapping = true;\n        }\n\n        if (newTimingDates[i].start === \"\" || newTimingDates[i].end === \"\" || newTimingDates[i].type === \"\") {\n          emptyFields = true;\n        }\n\n        if (!util.isValidTimingInterval(newTimingDates[i].start, newTimingDates[i].end)) {\n          validIntervals = false;\n        }\n      }\n\n      let success = true;\n\n      if (overlapping) {\n        alert(\"Two intervals are overlapping\");\n        success = false;\n      }\n\n      if (emptyFields || location === \"\") {\n        alert(\"Please fill all fields\");\n        success = false;\n      }\n\n      if (daysSelected.length === 0) {\n        alert(\"Select at least one day\");\n        success = false;\n      }\n\n      if (!validIntervals) {\n        alert(\"Invalid Timings\");\n        success = false;\n      }\n\n      if (success) {\n        for (let j = 0; j < newTimingDates.length; j++) {\n          doctorController.addDoctorAppointmentSchedule(newTimingDates[j]);\n        }\n\n        alert(\"Schedule Updated\"); //   navigate(\"/doctor/dashboard/\");\n      }\n    }).then(() => {});\n  };\n\n  const handleChange = (e, data) => {\n    const {\n      name,\n      checked\n    } = e.target;\n\n    if (checked) {\n      // if cheked and selectall checkbox add all fileds to selectedList\n      if (name === \"allSelect\") {\n        let temp = daysOfWeek;\n        setDaysSelected(temp);\n      } else {\n        // if cheked and specific checkbox add specific field to selectedList\n        setDaysSelected([...daysSelected, name]);\n      }\n    } else {\n      // if uncheked and selectall checkbox add remove all fileds from selectedList\n      if (name === \"allSelect\") {\n        setDaysSelected([]);\n      } else {\n        // if uncheked and specific checkbox remove specific field from selectedList\n        let tempSelected = daysSelected.filter((item, i) => item !== name);\n        setDaysSelected(tempSelected);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 schedule-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Weekly Schedule (From\", \" \", util.getDayDate(0).toString().substring(0, 15), \" into\", \" \", util.getDayDate(6).toString().substring(0, 15), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setLocation(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              disabled: true,\n              children: \"Select your location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), doctorData.location.map((l, i) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: l\n              }, \"location\" + i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 26\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Appointment Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            className: \"input\",\n            value: \"Add Timing\",\n            onClick: () => addTiming()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex w-100 flex-column justify-content-center\",\n            children: timingArray.map((time, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex  justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  placeholder: \"Start Time \",\n                  type: \"time\",\n                  value: timingArray[index].start,\n                  onChange: e => modifyStartTiming(time.id, index, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  placeholder: \"End Time\",\n                  type: \"time\",\n                  value: timingArray[index].end,\n                  onChange: e => modifyEndTiming(time.id, index, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => modifyAppointmentsType(index, e.target.value),\n                  className: \"input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    selected: true,\n                    disabled: true,\n                    children: \"Select type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 0,\n                    children: \"Physical\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 1,\n                    children: \"Virtual\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 2,\n                    children: \"Physical or Virtual\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 3,\n                    children: \"Meeting\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 4,\n                    children: \"Lunch Break\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \"X\",\n                  className: \"input close\",\n                  onClick: () => deleteTiming(time.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this)]\n              }, \"time\" + index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select your preffered days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex  align-items-center justify-content-center mx-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"allSelect\",\n                onChange: e => handleChange(e),\n                type: \"checkbox\",\n                checked: daysSelected.length === 7\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Select All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex  align-items-center justify-content-center flex-wrap\",\n              children: daysOfWeek.map((day, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex input align-items-center justify-content-center mx-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    name: day,\n                    onChange: e => handleChange(e),\n                    type: \"checkbox\",\n                    value: day,\n                    checked: daysSelected.some((item, j) => item === day)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: day\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 25\n                  }, this)]\n                }, \"day\" + i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: \"Validate\",\n              className: \"input\",\n              onClick: () => updateSchedule()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ScheduleSettings, \"bQrYEHCSkv9a136/0kJFqWX3A9w=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ScheduleSettings;\nexport default ScheduleSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScheduleSettings\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/views/doctor/schedule-settings.js"],"names":["useEffect","useState","useParams","doctorController","Layout","moment","useNavigate","util","ScheduleSettings","id","loading","setLoading","doctorData","setDoctorData","name","country","profession_fk","city","Price","location","doctorSchedule","setDoctorSchedule","getDoctorInfo","then","response","data","getDoctorSchedule","res","daysOfWeek","timingIndexCount","setTimingIndexCount","length","timingArray","setTimingarray","addTiming","temp","start","end","type","console","log","deleteTiming","index","filter","timing","modifyStartTiming","value","tempTime","slice","modifyEndTiming","modifyAppointmentsType","setLocation","daysSelected","setDaysSelected","navigate","updateSchedule","overlapping","emptyFields","validIntervals","newTimingDates","count","i","j","doctor_fk","parseInt","getDayDate","indexOf","format","isOverlapping","isValidTimingInterval","success","alert","addDoctorAppointmentSchedule","handleChange","e","checked","target","tempSelected","item","toString","substring","map","l","time","day","some"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doctorController } from \"../../controllers/doctor\";\nimport Layout from \"./layout\";\nimport \"../../css/schedule-settings.css\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport { util } from \"../../public/util\";\n\nconst ScheduleSettings = () => {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [doctorData, setDoctorData] = useState({\n    id: -1,\n    name: \"\",\n    country: \"\",\n    profession_fk: -1,\n    city: \"\",\n    Price: \"\",\n    location: [],\n  });\n  const [doctorSchedule, setDoctorSchedule] = useState([]);\n  useEffect(() => {\n    doctorController\n      .getDoctorInfo(id)\n      .then((response) => {\n        setDoctorData(response.data);\n      })\n      .then(() => {\n        doctorController\n          .getDoctorSchedule(id)\n          .then((res) => {\n            setDoctorSchedule(res.data);\n          })\n          .then(() => {\n            setLoading(false);\n          });\n      });\n  }, []);\n\n  const daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  const [timingIndexCount, setTimingIndexCount] = useState(doctorSchedule.length);\n\n  const [timingArray, setTimingarray] = useState([]);\n  const addTiming = () => {\n    let temp = timingArray;\n    temp = [\n      ...temp,\n      { id: timingIndexCount + 1, start: \"\", end: \"\", type: \"\" },\n    ];\n    setTimingarray(temp);\n    console.log(temp);\n\n    setTimingIndexCount(timingIndexCount + 1);\n  };\n  const deleteTiming = (index) => {\n    let temp = timingArray;\n    temp = timingArray.filter((timing) => timing.id !== index);\n    setTimingarray(temp);\n  };\n\n  const modifyStartTiming = (id, index, value) => {\n    let temp = timingArray;\n    let tempTime = temp[index];\n    temp = timingArray.filter(\n      (timing) =>\n        timing.id !== id ||\n        (timing.id !== id && timing.start === \"\") ||\n        (timing.id !== id && timing.end === \"\")\n    );\n\n    tempTime.start = value;\n    temp = [...temp.slice(0, index), tempTime, ...temp.slice(index)];\n    setTimingarray(temp);\n  };\n  const modifyEndTiming = (id, index, value) => {\n    let temp = timingArray;\n    let tempTime = temp[index];\n    temp = timingArray.filter(\n      (timing) =>\n        timing.id !== id ||\n        (timing.id !== id && timing.start === \"\") ||\n        (timing.id !== id && timing.end === \"\")\n    );\n\n    tempTime.end = value;\n    temp = [...temp.slice(0, index), tempTime, ...temp.slice(index)];\n    setTimingarray(temp);\n  };\n  const modifyAppointmentsType = (index, value) => {\n    let temp = timingArray;\n    temp[index].type = value;\n    setTimingarray(temp);\n  };\n\n  const [location, setLocation] = useState(\"\");\n  const [daysSelected, setDaysSelected] = useState([]);\n  const navigate = useNavigate();\n\n  const updateSchedule = () => {\n    let overlapping = false;\n    let emptyFields = false;\n    let validIntervals = true;\n    let newTimingDates = [];\n    let count = 0;\n\n    doctorController\n      .getDoctorSchedule(id)\n      .then((response) => {\n        for (let i = 0; i < timingArray.length; i++) {\n          for (let j = 0; j < daysSelected.length; j++) {\n            newTimingDates = [\n              ...newTimingDates,\n              {\n                id: response.data.length + i + count + 1,\n                doctor_fk: parseInt(id),\n                start:\n                  moment(\n                    util.getDayDate(daysOfWeek.indexOf(daysSelected[j]))\n                  ).format(\"YYYY-MM-DD\") +\n                  \"T\" +\n                  timingArray[i].start,\n                end:\n                  moment(\n                    util.getDayDate(daysOfWeek.indexOf(daysSelected[j]))\n                  ).format(\"YYYY-MM-DD\") +\n                  \"T\" +\n                  timingArray[i].end,\n                location: location,\n                type: parseInt(timingArray[i].type),\n              },\n            ];\n\n            count++;\n          }\n        }\n        console.log(newTimingDates)\n\n        for (let i = 0; i < newTimingDates.length; i++) {\n          if (util.isOverlapping(newTimingDates[i], newTimingDates)) {\n            overlapping = true;\n          }\n          if (\n            newTimingDates[i].start === \"\" ||\n            newTimingDates[i].end === \"\" ||\n            newTimingDates[i].type === \"\"\n          ) {\n            emptyFields = true;\n          }\n          if (\n            !util.isValidTimingInterval(\n              newTimingDates[i].start,\n              newTimingDates[i].end\n            )\n          ) {\n            validIntervals = false;\n          }\n        }\n        let success = true;\n        if (overlapping) {\n          alert(\"Two intervals are overlapping\");\n          success = false;\n        }\n        if (emptyFields || location === \"\") {\n          alert(\"Please fill all fields\");\n          success = false;\n        }\n        if (daysSelected.length === 0) {\n          alert(\"Select at least one day\");\n          success = false;\n        }\n        if (!validIntervals) {\n          alert(\"Invalid Timings\");\n          success = false;\n        }\n        if (success) {\n          for (let j = 0; j < newTimingDates.length; j++) {\n            doctorController.addDoctorAppointmentSchedule(newTimingDates[j]);\n          }\n          alert(\"Schedule Updated\");\n          //   navigate(\"/doctor/dashboard/\");\n        }\n      })\n      .then(() => {});\n  };\n\n  const handleChange = (e, data) => {\n    const { name, checked } = e.target;\n    if (checked) {\n      // if cheked and selectall checkbox add all fileds to selectedList\n      if (name === \"allSelect\") {\n        let temp = daysOfWeek;\n        setDaysSelected(temp);\n      } else {\n        // if cheked and specific checkbox add specific field to selectedList\n        setDaysSelected([...daysSelected, name]);\n      }\n    } else {\n      // if uncheked and selectall checkbox add remove all fileds from selectedList\n      if (name === \"allSelect\") {\n        setDaysSelected([]);\n      } else {\n        // if uncheked and specific checkbox remove specific field from selectedList\n        let tempSelected = daysSelected.filter((item, i) => item !== name);\n\n        setDaysSelected(tempSelected);\n      }\n    }\n  };\n\n  return (\n    <Layout>\n      {!loading && (\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"col-8 schedule-div\">\n            <h3>\n              Weekly Schedule (From{\" \"}\n              {util.getDayDate(0).toString().substring(0, 15)} into{\" \"}\n              {util.getDayDate(6).toString().substring(0, 15)})\n            </h3>\n            <br />\n            <div className=\"d-flex flex-column\">\n              <span>Location</span>\n              <select onChange={(e) => setLocation(e.target.value)}>\n                <option selected disabled>\n                  Select your location\n                </option>\n                {doctorData.location.map((l, i) => {\n                  return <option key={\"location\" + i}>{l}</option>;\n                })}\n              </select>\n            </div>\n            <br />\n            <div className=\"d-flex flex-column\">\n              <span>Appointment Schedule</span>\n              <input\n                type=\"button\"\n                className=\"input\"\n                value=\"Add Timing\"\n                onClick={() => addTiming()}\n              />\n              <div className=\"d-flex w-100 flex-column justify-content-center\">\n                {timingArray.map((time, index) => {\n                  return (\n                    <div\n                      key={\"time\" + index}\n                      className=\"d-flex  justify-content-between\"\n                    >\n                      <input\n                        className=\"input\"\n                        placeholder={\"Start Time \"}\n                        type=\"time\"\n                        value={timingArray[index].start}\n                        onChange={(e) =>\n                          modifyStartTiming(time.id, index, e.target.value)\n                        }\n                      />\n                      <input\n                        className=\"input\"\n                        placeholder=\"End Time\"\n                        type=\"time\"\n                        value={timingArray[index].end}\n                        onChange={(e) =>\n                          modifyEndTiming(time.id, index, e.target.value)\n                        }\n                      />\n                      <select\n                        onChange={(e) =>\n                          modifyAppointmentsType(index, e.target.value)\n                        }\n                        className=\"input\"\n                      >\n                        <option selected disabled>\n                          Select type\n                        </option>\n                        <option value={0}>Physical</option>\n                        <option value={1}>Virtual</option>\n                        <option value={2}>Physical or Virtual</option>\n                        <option value={3}>Meeting</option>\n                        <option value={4}>Lunch Break</option>\n                      </select>\n                      <input\n                        type=\"button\"\n                        value={\"X\"}\n                        className=\"input close\"\n                        onClick={() => deleteTiming(time.id)}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              <br />\n              <div className=\"d-flex flex-column\">\n                <label>Select your preffered days</label>\n                <div className=\"d-flex  align-items-center justify-content-center mx-4\">\n                  <input\n                    name=\"allSelect\"\n                    onChange={(e) => handleChange(e)}\n                    type=\"checkbox\"\n                    checked={daysSelected.length === 7}\n                  />\n                  <label>Select All</label>\n                </div>\n                <br />\n                <div className=\"d-flex  align-items-center justify-content-center flex-wrap\">\n                  {daysOfWeek.map((day, i) => {\n                    return (\n                      <div\n                        key={\"day\" + i}\n                        className=\"d-flex input align-items-center justify-content-center mx-4\"\n                      >\n                        <input\n                          name={day}\n                          onChange={(e) => handleChange(e)}\n                          type=\"checkbox\"\n                          value={day}\n                          checked={daysSelected.some((item, j) => item === day)}\n                        />\n                        <label>{day}</label>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              <br />\n              <div className=\"d-flex flex-column\">\n                <input\n                  type=\"button\"\n                  value={\"Validate\"}\n                  className=\"input\"\n                  onClick={() => updateSchedule()}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default ScheduleSettings;\n"]},"metadata":{},"sourceType":"module"}