{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/calendar.js\",\n    _s = $RefreshSig$();\n\nimport { Eventcalendar, snackbar, setOptions, Popup, Button, Input, Textarea, Switch, Datepicker, SegmentedGroup, SegmentedItem, localeAr } from \"@mobiscroll/react-lite\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst now = new Date();\nconst defaultEvents = [{\n  id: 1,\n  start: \"2021-11-08T13:00\",\n  end: \"2021-11-08T13:30\",\n  title: \"Lunch @ Butcher's\",\n  description: \"\",\n  allDay: false,\n  status: \"free\",\n  color: \"#26c57d\"\n}, {\n  id: 2,\n  start: \"2021-11-06T15:00\",\n  end: \"2021-11-06T16:00\",\n  title: \"General orientation\",\n  description: \"\",\n  allDay: false,\n  status: \"busy\",\n  color: \"#fd966a\"\n}, {\n  id: 3,\n  start: \"2021-11-05T18:00\",\n  end: \"2021-11-05T22:00\",\n  title: \"Dexter BD\",\n  description: \"\",\n  allDay: false,\n  status: \"free\",\n  color: \"#37bbe4\"\n}, {\n  id: 4,\n  start: \"2021-11-07T10:30\",\n  end: \"2021-11-07T11:30\",\n  title: \"Stakeholder mtg.\",\n  description: \"\",\n  allDay: false,\n  status: \"busy\",\n  color: \"#d00f0f\"\n}];\nconst viewSettings = {\n  calendar: {\n    labels: true\n  }\n};\nconst responsivePopup = {\n  medium: {\n    display: \"anchored\",\n    width: 400,\n    fullScreen: false,\n    touchUi: false\n  }\n};\n\nconst Calendar = () => {\n  _s();\n\n  const [myEvents, setMyEvents] = React.useState(defaultEvents);\n  const [tempEvent, setTempEvent] = React.useState(null);\n  const [isOpen, setOpen] = React.useState(false);\n  const [isEdit, setEdit] = React.useState(false);\n  const [anchor, setAnchor] = React.useState(null);\n  const [start, startRef] = React.useState(null);\n  const [end, endRef] = React.useState(null);\n  const [popupEventTitle, setTitle] = React.useState(\"\");\n  const [popupEventDescription, setDescription] = React.useState(\"\");\n  const [popupEventAllDay, setAllDay] = React.useState(true);\n  const [popupEventDate, setDate] = React.useState([]);\n  const [popupEventStatus, setStatus] = React.useState(\"busy\");\n  const [mySelectedDate, setSelectedDate] = React.useState(now);\n  const saveEvent = React.useCallback(() => {\n    const newEvent = {\n      id: tempEvent.id,\n      title: popupEventTitle,\n      description: popupEventDescription,\n      start: popupEventDate[0],\n      end: popupEventDate[1],\n      allDay: popupEventAllDay,\n      status: popupEventStatus,\n      color: tempEvent.color\n    };\n\n    if (isEdit) {\n      // update the event in the list\n      const index = myEvents.findIndex(x => x.id === tempEvent.id);\n      const newEventList = [...myEvents];\n      newEventList.splice(index, 1, newEvent);\n      setMyEvents(newEventList); // here you can update the event in your storage as well\n      // ...\n    } else {\n      // add the new event to the list\n      setMyEvents([...myEvents, newEvent]); // here you can add the event to your storage as well\n      // ...\n    }\n\n    setSelectedDate(popupEventDate[0]); // close the popup\n\n    setOpen(false);\n  }, [isEdit, myEvents, popupEventAllDay, popupEventDate, popupEventDescription, popupEventStatus, popupEventTitle, tempEvent]);\n  const deleteEvent = React.useCallback(event => {\n    setMyEvents(myEvents.filter(item => item.id !== event.id));\n    setTimeout(() => {\n      snackbar({\n        button: {\n          action: () => {\n            setMyEvents(prevEvents => [...prevEvents, event]);\n          },\n          text: \"Undo\"\n        },\n        message: \"Event deleted\"\n      });\n    });\n  }, [myEvents]);\n  const loadPopupForm = React.useCallback(event => {\n    setTitle(event.title);\n    setDescription(event.description);\n    setDate([event.start, event.end]);\n    setAllDay(event.allDay || false);\n    setStatus(event.status || \"busy\");\n  }, []); // handle popup form changes\n\n  const titleChange = React.useCallback(ev => {\n    setTitle(ev.target.value);\n  }, []);\n  const descriptionChange = React.useCallback(ev => {\n    setDescription(ev.target.value);\n  }, []);\n  const allDayChange = React.useCallback(ev => {\n    setAllDay(ev.target.checked);\n  }, []);\n  const dateChange = React.useCallback(args => {\n    setDate(args.value);\n  }, []);\n  const statusChange = React.useCallback(ev => {\n    setStatus(ev.target.value);\n  }, []);\n  const onDeleteClick = React.useCallback(() => {\n    deleteEvent(tempEvent);\n    setOpen(false);\n  }, [deleteEvent, tempEvent]); // scheduler options\n\n  const onSelectedDateChange = React.useCallback(event => {\n    setSelectedDate(event.date);\n  }, []);\n  const onEventClick = React.useCallback(args => {\n    setEdit(true);\n    setTempEvent({ ...args.event\n    }); // fill popup form with event data\n\n    loadPopupForm(args.event);\n    setAnchor(args.domEvent.target);\n    setOpen(true);\n  }, [loadPopupForm]);\n  const onEventCreated = React.useCallback(args => {\n    // createNewEvent(args.event, args.target)\n    setEdit(false);\n    setTempEvent(args.event); // fill popup form with event data\n\n    loadPopupForm(args.event);\n    setAnchor(args.target); // open the popup\n\n    setOpen(true);\n  }, [loadPopupForm]);\n  const onEventDeleted = React.useCallback(args => {\n    deleteEvent(args.event);\n  }, [deleteEvent]);\n  const onEventUpdated = React.useCallback(args => {// here you can update the event in your storage as well, after drag & drop or resize\n    // ...\n  }, []); // datepicker options\n\n  const controls = React.useMemo(() => popupEventAllDay ? [\"date\"] : [\"datetime\"], [popupEventAllDay]);\n  const respSetting = React.useMemo(() => popupEventAllDay ? {\n    medium: {\n      controls: [\"calendar\"],\n      touchUi: false\n    }\n  } : {\n    medium: {\n      controls: [\"calendar\", \"time\"],\n      touchUi: false\n    }\n  }, [popupEventAllDay]); // popup options\n\n  const headerText = React.useMemo(() => isEdit ? \"Edit event\" : \"New Event\", [isEdit]);\n  const popupButtons = React.useMemo(() => {\n    if (isEdit) {\n      return [\"cancel\", {\n        handler: () => {\n          saveEvent();\n        },\n        keyCode: \"enter\",\n        text: \"Save\",\n        cssClass: \"mbsc-popup-button-primary\"\n      }];\n    } else {\n      return [\"cancel\", {\n        handler: () => {\n          saveEvent();\n        },\n        keyCode: \"enter\",\n        text: \"Add\",\n        cssClass: \"mbsc-popup-button-primary\"\n      }];\n    }\n  }, [isEdit, saveEvent]);\n  const onClose = React.useCallback(() => {\n    if (!isEdit) {\n      // refresh the list, if add popup was canceled, to remove the temporary event\n      setMyEvents([...myEvents]);\n    }\n\n    setOpen(false);\n  }, [isEdit, myEvents]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Eventcalendar, {\n      view: viewSettings,\n      data: myEvents,\n      clickToCreate: \"double\",\n      dragToCreate: true,\n      dragToMove: true,\n      dragToResize: true,\n      selectedDate: mySelectedDate,\n      onSelectedDateChange: onSelectedDateChange,\n      onEventClick: onEventClick,\n      onEventCreated: onEventCreated,\n      onEventDeleted: onEventDeleted,\n      onEventUpdated: onEventUpdated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      display: \"bottom\",\n      fullScreen: true,\n      contentPadding: false,\n      headerText: headerText,\n      anchor: anchor,\n      buttons: popupButtons,\n      isOpen: isOpen,\n      onClose: onClose,\n      responsive: responsivePopup,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mbsc-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: \"Title\",\n          value: popupEventTitle,\n          onChange: titleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          label: \"Description\",\n          value: popupEventDescription,\n          onChange: descriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mbsc-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          label: \"All-day\",\n          checked: popupEventAllDay,\n          onChange: allDayChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          ref: startRef,\n          label: \"Starts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          ref: endRef,\n          label: \"Ends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Datepicker, {\n          select: \"range\",\n          controls: controls,\n          touchUi: true,\n          startInput: start,\n          endInput: end,\n          showRangeLabels: false,\n          responsive: respSetting,\n          onChange: dateChange,\n          value: popupEventDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SegmentedGroup, {\n          onChange: statusChange,\n          children: [/*#__PURE__*/_jsxDEV(SegmentedItem, {\n            value: \"busy\",\n            checked: popupEventStatus === \"busy\",\n            children: \"Show as busy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SegmentedItem, {\n            value: \"free\",\n            checked: popupEventStatus === \"free\",\n            children: \"Show as free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), isEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mbsc-button-group\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mbsc-button-block\",\n            color: \"danger\",\n            variant: \"outline\",\n            onClick: onDeleteClick,\n            children: \"Delete event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"csU1J/H/Ezg8fJXUwkF1aOPds+M=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/calendar.js"],"names":["Eventcalendar","snackbar","setOptions","Popup","Button","Input","Textarea","Switch","Datepicker","SegmentedGroup","SegmentedItem","localeAr","React","now","Date","defaultEvents","id","start","end","title","description","allDay","status","color","viewSettings","calendar","labels","responsivePopup","medium","display","width","fullScreen","touchUi","Calendar","myEvents","setMyEvents","useState","tempEvent","setTempEvent","isOpen","setOpen","isEdit","setEdit","anchor","setAnchor","startRef","endRef","popupEventTitle","setTitle","popupEventDescription","setDescription","popupEventAllDay","setAllDay","popupEventDate","setDate","popupEventStatus","setStatus","mySelectedDate","setSelectedDate","saveEvent","useCallback","newEvent","index","findIndex","x","newEventList","splice","deleteEvent","event","filter","item","setTimeout","button","action","prevEvents","text","message","loadPopupForm","titleChange","ev","target","value","descriptionChange","allDayChange","checked","dateChange","args","statusChange","onDeleteClick","onSelectedDateChange","date","onEventClick","domEvent","onEventCreated","onEventDeleted","onEventUpdated","controls","useMemo","respSetting","headerText","popupButtons","handler","keyCode","cssClass","onClose"],"mappings":"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","sourcesContent":["import {\n  Eventcalendar,\n  snackbar,\n  setOptions,\n  Popup,\n  Button,\n  Input,\n  Textarea,\n  Switch,\n  Datepicker,\n  SegmentedGroup,\n  SegmentedItem,\n  localeAr,\n} from \"@mobiscroll/react-lite\";\nimport React from \"react\";\n\n\nconst now = new Date();\nconst defaultEvents = [\n  {\n    id: 1,\n    start: \"2021-11-08T13:00\",\n    end: \"2021-11-08T13:30\",\n    title: \"Lunch @ Butcher's\",\n    description: \"\",\n    allDay: false,\n    status: \"free\",\n    color: \"#26c57d\",\n  },\n  {\n    id: 2,\n    start: \"2021-11-06T15:00\",\n    end: \"2021-11-06T16:00\",\n    title: \"General orientation\",\n    description: \"\",\n    allDay: false,\n    status: \"busy\",\n    color: \"#fd966a\",\n  },\n  {\n    id: 3,\n    start: \"2021-11-05T18:00\",\n    end: \"2021-11-05T22:00\",\n    title: \"Dexter BD\",\n    description: \"\",\n    allDay: false,\n    status: \"free\",\n    color: \"#37bbe4\",\n  },\n  {\n    id: 4,\n    start: \"2021-11-07T10:30\",\n    end: \"2021-11-07T11:30\",\n    title: \"Stakeholder mtg.\",\n    description: \"\",\n    allDay: false,\n    status: \"busy\",\n    color: \"#d00f0f\",\n  },\n];\n\nconst viewSettings = {\n  calendar: { labels: true },\n};\nconst responsivePopup = {\n  medium: {\n    display: \"anchored\",\n    width: 400,\n    fullScreen: false,\n    touchUi: false,\n  },\n};\n\nconst Calendar = () => {\n  const [myEvents, setMyEvents] = React.useState(defaultEvents);\n  const [tempEvent, setTempEvent] = React.useState(null);\n  const [isOpen, setOpen] = React.useState(false);\n  const [isEdit, setEdit] = React.useState(false);\n  const [anchor, setAnchor] = React.useState(null);\n  const [start, startRef] = React.useState(null);\n  const [end, endRef] = React.useState(null);\n  const [popupEventTitle, setTitle] = React.useState(\"\");\n  const [popupEventDescription, setDescription] = React.useState(\"\");\n  const [popupEventAllDay, setAllDay] = React.useState(true);\n  const [popupEventDate, setDate] = React.useState([]);\n  const [popupEventStatus, setStatus] = React.useState(\"busy\");\n  const [mySelectedDate, setSelectedDate] = React.useState(now);\n\n  const saveEvent = React.useCallback(() => {\n    const newEvent = {\n      id: tempEvent.id,\n      title: popupEventTitle,\n      description: popupEventDescription,\n      start: popupEventDate[0],\n      end: popupEventDate[1],\n      allDay: popupEventAllDay,\n      status: popupEventStatus,\n      color: tempEvent.color,\n    };\n    if (isEdit) {\n      // update the event in the list\n      const index = myEvents.findIndex((x) => x.id === tempEvent.id);\n      const newEventList = [...myEvents];\n\n      newEventList.splice(index, 1, newEvent);\n      setMyEvents(newEventList);\n      // here you can update the event in your storage as well\n      // ...\n    } else {\n      // add the new event to the list\n      setMyEvents([...myEvents, newEvent]);\n      // here you can add the event to your storage as well\n      // ...\n    }\n    setSelectedDate(popupEventDate[0]);\n    // close the popup\n    setOpen(false);\n  }, [\n    isEdit,\n    myEvents,\n    popupEventAllDay,\n    popupEventDate,\n    popupEventDescription,\n    popupEventStatus,\n    popupEventTitle,\n    tempEvent,\n  ]);\n\n  const deleteEvent = React.useCallback(\n    (event) => {\n      setMyEvents(myEvents.filter((item) => item.id !== event.id));\n      setTimeout(() => {\n        snackbar({\n          button: {\n            action: () => {\n              setMyEvents((prevEvents) => [...prevEvents, event]);\n            },\n            text: \"Undo\",\n          },\n          message: \"Event deleted\",\n        });\n      });\n    },\n    [myEvents]\n  );\n\n  const loadPopupForm = React.useCallback((event) => {\n    setTitle(event.title);\n    setDescription(event.description);\n    setDate([event.start, event.end]);\n    setAllDay(event.allDay || false);\n    setStatus(event.status || \"busy\");\n  }, []);\n\n  // handle popup form changes\n\n  const titleChange = React.useCallback((ev) => {\n    setTitle(ev.target.value);\n  }, []);\n\n  const descriptionChange = React.useCallback((ev) => {\n    setDescription(ev.target.value);\n  }, []);\n\n  const allDayChange = React.useCallback((ev) => {\n    setAllDay(ev.target.checked);\n  }, []);\n\n  const dateChange = React.useCallback((args) => {\n    setDate(args.value);\n  }, []);\n\n  const statusChange = React.useCallback((ev) => {\n    setStatus(ev.target.value);\n  }, []);\n\n  const onDeleteClick = React.useCallback(() => {\n    deleteEvent(tempEvent);\n    setOpen(false);\n  }, [deleteEvent, tempEvent]);\n\n  // scheduler options\n\n  const onSelectedDateChange = React.useCallback((event) => {\n    setSelectedDate(event.date);\n  },[]);\n\n  const onEventClick = React.useCallback(\n    (args) => {\n      setEdit(true);\n      setTempEvent({ ...args.event });\n      // fill popup form with event data\n      loadPopupForm(args.event);\n      setAnchor(args.domEvent.target);\n      setOpen(true);\n    },\n    [loadPopupForm]\n  );\n\n  const onEventCreated = React.useCallback(\n    (args) => {\n      // createNewEvent(args.event, args.target)\n      setEdit(false);\n      setTempEvent(args.event);\n      // fill popup form with event data\n      loadPopupForm(args.event);\n      setAnchor(args.target);\n      // open the popup\n      setOpen(true);\n    },\n    [loadPopupForm]\n  );\n\n  const onEventDeleted = React.useCallback(\n    (args) => {\n      deleteEvent(args.event);\n    },\n    [deleteEvent]\n  );\n\n  const onEventUpdated = React.useCallback((args) => {\n    // here you can update the event in your storage as well, after drag & drop or resize\n    // ...\n  }, []);\n\n  // datepicker options\n  const controls = React.useMemo(\n    () => (popupEventAllDay ? [\"date\"] : [\"datetime\"]),\n    [popupEventAllDay]\n  );\n  const respSetting = React.useMemo(\n    () =>\n      popupEventAllDay\n        ? {\n            medium: {\n              controls: [\"calendar\"],\n              touchUi: false,\n            },\n          }\n        : {\n            medium: {\n              controls: [\"calendar\", \"time\"],\n              touchUi: false,\n            },\n          },\n    [popupEventAllDay]\n  );\n\n  // popup options\n  const headerText = React.useMemo(\n    () => (isEdit ? \"Edit event\" : \"New Event\"),\n    [isEdit]\n  );\n  const popupButtons = React.useMemo(() => {\n    if (isEdit) {\n      return [\n        \"cancel\",\n        {\n          handler: () => {\n            saveEvent();\n          },\n          keyCode: \"enter\",\n          text: \"Save\",\n          cssClass: \"mbsc-popup-button-primary\",\n        },\n      ];\n    } else {\n      return [\n        \"cancel\",\n        {\n          handler: () => {\n            saveEvent();\n          },\n          keyCode: \"enter\",\n          text: \"Add\",\n          cssClass: \"mbsc-popup-button-primary\",\n        },\n      ];\n    }\n  }, [isEdit, saveEvent]);\n\n  const onClose = React.useCallback(() => {\n    if (!isEdit) {\n      // refresh the list, if add popup was canceled, to remove the temporary event\n      setMyEvents([...myEvents]);\n    }\n    setOpen(false);\n  }, [isEdit, myEvents]);\n\n  return (\n    <div>\n      <Eventcalendar\n        view={viewSettings}\n        data={myEvents}\n        clickToCreate=\"double\"\n        dragToCreate={true}\n        dragToMove={true}\n        dragToResize={true}\n        selectedDate={mySelectedDate}\n        onSelectedDateChange={onSelectedDateChange}\n        onEventClick={onEventClick}\n        onEventCreated={onEventCreated}\n        onEventDeleted={onEventDeleted}\n        onEventUpdated={onEventUpdated}\n      />\n      <Popup\n        display=\"bottom\"\n        fullScreen={true}\n        contentPadding={false}\n        headerText={headerText}\n        anchor={anchor}\n        buttons={popupButtons}\n        isOpen={isOpen}\n        onClose={onClose}\n        responsive={responsivePopup}\n      >\n        <div className=\"mbsc-form-group\">\n          <Input label=\"Title\" value={popupEventTitle} onChange={titleChange} />\n          <Textarea\n            label=\"Description\"\n            value={popupEventDescription}\n            onChange={descriptionChange}\n          />\n        </div>\n        <div className=\"mbsc-form-group\">\n          <Switch\n            label=\"All-day\"\n            checked={popupEventAllDay}\n            onChange={allDayChange}\n          />\n          <Input ref={startRef} label=\"Starts\" />\n          <Input ref={endRef} label=\"Ends\" />\n          <Datepicker\n            select=\"range\"\n            controls={controls}\n            touchUi={true}\n            startInput={start}\n            endInput={end}\n            showRangeLabels={false}\n            responsive={respSetting}\n            onChange={dateChange}\n            value={popupEventDate}\n          />\n          <SegmentedGroup onChange={statusChange}>\n            <SegmentedItem value=\"busy\" checked={popupEventStatus === \"busy\"}>\n              Show as busy\n            </SegmentedItem>\n            <SegmentedItem value=\"free\" checked={popupEventStatus === \"free\"}>\n              Show as free\n            </SegmentedItem>\n          </SegmentedGroup>\n          {isEdit ? (\n            <div className=\"mbsc-button-group\">\n              <Button\n                className=\"mbsc-button-block\"\n                color=\"danger\"\n                variant=\"outline\"\n                onClick={onDeleteClick}\n              >\n                Delete event\n              </Button>\n            </div>\n          ) : null}\n        </div>\n      </Popup>\n    </div>\n  );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}