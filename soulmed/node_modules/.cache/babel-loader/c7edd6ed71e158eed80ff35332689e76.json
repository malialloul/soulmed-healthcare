{"ast":null,"code":"import JSON5 from './formats/json5.js';\nimport jsYaml from './formats/yaml.js';\nimport * as fsMod from './fs.cjs';\nimport * as pathMod from './path.cjs';\nimport extname from './extname.js';\nvar isDeno = typeof Deno !== 'undefined';\nvar YAML = typeof jsYaml !== 'undefined' && jsYaml.load ? jsYaml : undefined;\nvar fs = fsMod ? fsMod.default || fsMod : undefined;\nvar path = pathMod ? pathMod.default || pathMod : undefined;\n\nvar readFileInNodeSync = function readFileInNodeSync(filename) {\n  var data = fs.readFileSync(filename, 'utf8');\n  var stat;\n\n  try {\n    stat = fs.statSync(filename);\n  } catch (e) {}\n\n  return {\n    data: data,\n    stat: stat\n  };\n};\n\nvar readFileInNode = function readFileInNode(filename) {\n  return new Promise(function (resolve, reject) {\n    fs.readFile(filename, 'utf8', function (err, data) {\n      if (err) return reject(err);\n      fs.stat(filename, function (err, stat) {\n        if (err) return resolve({\n          data: data\n        });\n        return resolve({\n          data: data,\n          stat: stat\n        });\n      });\n    });\n  });\n};\n\nvar readFileInDenoSync = function readFileInDenoSync(filename) {\n  var decoder = new TextDecoder('utf-8');\n  var d = Deno.readFileSync(filename);\n  var data = decoder.decode(d);\n  var stat;\n\n  try {\n    stat = Deno.statSync(filename);\n  } catch (e) {}\n\n  return {\n    data: data,\n    stat: stat\n  };\n};\n\nvar readFileInDeno = function readFileInDeno(filename) {\n  return new Promise(function (resolve, reject) {\n    var decoder = new TextDecoder('utf-8');\n    Deno.readFile(filename).then(function (d) {\n      var data = decoder.decode(d);\n      Deno.stat(filename).then(function (stat) {\n        return resolve({\n          data: data,\n          stat: stat\n        });\n      }).catch(function () {\n        return resolve({\n          data: data\n        });\n      });\n    }).catch(reject);\n  });\n};\n\nvar parseData = function parseData(extension, data, options) {\n  data = data.replace(/^\\uFEFF/, '');\n  var result = {};\n\n  switch (extension) {\n    case '.js':\n    case '.ts':\n      if (typeof module === 'undefined') {\n        if (data.indexOf('exports') > -1) {\n          data = \"(\".concat(data.substring(data.indexOf('=') + 1).replace(/;/, ''), \")\");\n        } else if (data.indexOf('export default ') > -1) {\n          data = \"(\".concat(data.substring(data.indexOf('export default ') + 15).replace(/;/, ''), \")\");\n        }\n      }\n\n      result = eval(data);\n      break;\n\n    case '.json5':\n      result = JSON5.parse(data);\n      break;\n\n    case '.yml':\n    case '.yaml':\n      result = YAML.load(data);\n      break;\n\n    default:\n      result = options.parse(data);\n  }\n\n  return result;\n};\n\nvar resolvePath = function resolvePath(filename) {\n  return !path.isAbsolute(filename) && typeof process !== 'undefined' && process.cwd && !fs.existsSync(filename) ? path.join(process.cwd(), filename) : filename;\n};\n\nexport function readFileSync(filename, options) {\n  var ext = extname(filename);\n\n  if (['.js', '.ts'].indexOf(ext) > -1 && typeof require !== 'undefined') {\n    return require(resolvePath(filename));\n  }\n\n  var data, stat;\n\n  if (isDeno) {\n    var ret = readFileInDenoSync(filename);\n    data = ret.data;\n    stat = ret.stat;\n  } else {\n    var _ret = readFileInNodeSync(filename);\n\n    data = _ret.data;\n    stat = _ret.stat;\n  }\n\n  return {\n    data: parseData(ext, data, options),\n    stat: stat\n  };\n}\nexport function readFile(filename) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    parse: JSON.parse\n  };\n  var ext = extname(filename);\n\n  if (['.js', '.ts'].indexOf(ext) > -1 && typeof require !== 'undefined') {\n    return new Promise(function (resolve, reject) {\n      try {\n        resolve({\n          data: require(resolvePath(filename))\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  var fn = isDeno ? readFileInDeno : readFileInNode;\n  return new Promise(function (resolve, reject) {\n    fn(filename).then(function (_ref) {\n      var data = _ref.data,\n          stat = _ref.stat;\n\n      try {\n        var ret = parseData(ext, data, options);\n        resolve({\n          data: ret,\n          stat: stat\n        });\n      } catch (err) {\n        err.message = 'error parsing ' + filename + ': ' + err.message;\n        reject(err);\n      }\n    }).catch(reject);\n  });\n}","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/node_modules/i18next-fs-backend/esm/readFile.js"],"names":["JSON5","jsYaml","fsMod","pathMod","extname","isDeno","Deno","YAML","load","undefined","fs","default","path","readFileInNodeSync","filename","data","readFileSync","stat","statSync","e","readFileInNode","Promise","resolve","reject","readFile","err","readFileInDenoSync","decoder","TextDecoder","d","decode","readFileInDeno","then","catch","parseData","extension","options","replace","result","module","indexOf","concat","substring","eval","parse","resolvePath","isAbsolute","process","cwd","existsSync","join","ext","require","ret","_ret","arguments","length","JSON","fn","_ref","message"],"mappings":"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","sourcesContent":["import JSON5 from './formats/json5.js';\nimport jsYaml from './formats/yaml.js';\nimport * as fsMod from './fs.cjs';\nimport * as pathMod from './path.cjs';\nimport extname from './extname.js';\nvar isDeno = typeof Deno !== 'undefined';\nvar YAML = typeof jsYaml !== 'undefined' && jsYaml.load ? jsYaml : undefined;\nvar fs = fsMod ? fsMod.default || fsMod : undefined;\nvar path = pathMod ? pathMod.default || pathMod : undefined;\n\nvar readFileInNodeSync = function readFileInNodeSync(filename) {\n  var data = fs.readFileSync(filename, 'utf8');\n  var stat;\n\n  try {\n    stat = fs.statSync(filename);\n  } catch (e) {}\n\n  return {\n    data: data,\n    stat: stat\n  };\n};\n\nvar readFileInNode = function readFileInNode(filename) {\n  return new Promise(function (resolve, reject) {\n    fs.readFile(filename, 'utf8', function (err, data) {\n      if (err) return reject(err);\n      fs.stat(filename, function (err, stat) {\n        if (err) return resolve({\n          data: data\n        });\n        return resolve({\n          data: data,\n          stat: stat\n        });\n      });\n    });\n  });\n};\n\nvar readFileInDenoSync = function readFileInDenoSync(filename) {\n  var decoder = new TextDecoder('utf-8');\n  var d = Deno.readFileSync(filename);\n  var data = decoder.decode(d);\n  var stat;\n\n  try {\n    stat = Deno.statSync(filename);\n  } catch (e) {}\n\n  return {\n    data: data,\n    stat: stat\n  };\n};\n\nvar readFileInDeno = function readFileInDeno(filename) {\n  return new Promise(function (resolve, reject) {\n    var decoder = new TextDecoder('utf-8');\n    Deno.readFile(filename).then(function (d) {\n      var data = decoder.decode(d);\n      Deno.stat(filename).then(function (stat) {\n        return resolve({\n          data: data,\n          stat: stat\n        });\n      }).catch(function () {\n        return resolve({\n          data: data\n        });\n      });\n    }).catch(reject);\n  });\n};\n\nvar parseData = function parseData(extension, data, options) {\n  data = data.replace(/^\\uFEFF/, '');\n  var result = {};\n\n  switch (extension) {\n    case '.js':\n    case '.ts':\n      if (typeof module === 'undefined') {\n        if (data.indexOf('exports') > -1) {\n          data = \"(\".concat(data.substring(data.indexOf('=') + 1).replace(/;/, ''), \")\");\n        } else if (data.indexOf('export default ') > -1) {\n          data = \"(\".concat(data.substring(data.indexOf('export default ') + 15).replace(/;/, ''), \")\");\n        }\n      }\n\n      result = eval(data);\n      break;\n\n    case '.json5':\n      result = JSON5.parse(data);\n      break;\n\n    case '.yml':\n    case '.yaml':\n      result = YAML.load(data);\n      break;\n\n    default:\n      result = options.parse(data);\n  }\n\n  return result;\n};\n\nvar resolvePath = function resolvePath(filename) {\n  return !path.isAbsolute(filename) && typeof process !== 'undefined' && process.cwd && !fs.existsSync(filename) ? path.join(process.cwd(), filename) : filename;\n};\n\nexport function readFileSync(filename, options) {\n  var ext = extname(filename);\n\n  if (['.js', '.ts'].indexOf(ext) > -1 && typeof require !== 'undefined') {\n    return require(resolvePath(filename));\n  }\n\n  var data, stat;\n\n  if (isDeno) {\n    var ret = readFileInDenoSync(filename);\n    data = ret.data;\n    stat = ret.stat;\n  } else {\n    var _ret = readFileInNodeSync(filename);\n\n    data = _ret.data;\n    stat = _ret.stat;\n  }\n\n  return {\n    data: parseData(ext, data, options),\n    stat: stat\n  };\n}\nexport function readFile(filename) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    parse: JSON.parse\n  };\n  var ext = extname(filename);\n\n  if (['.js', '.ts'].indexOf(ext) > -1 && typeof require !== 'undefined') {\n    return new Promise(function (resolve, reject) {\n      try {\n        resolve({\n          data: require(resolvePath(filename))\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  var fn = isDeno ? readFileInDeno : readFileInNode;\n  return new Promise(function (resolve, reject) {\n    fn(filename).then(function (_ref) {\n      var data = _ref.data,\n          stat = _ref.stat;\n\n      try {\n        var ret = parseData(ext, data, options);\n        resolve({\n          data: ret,\n          stat: stat\n        });\n      } catch (err) {\n        err.message = 'error parsing ' + filename + ': ' + err.message;\n        reject(err);\n      }\n    }).catch(reject);\n  });\n}"]},"metadata":{},"sourceType":"module"}