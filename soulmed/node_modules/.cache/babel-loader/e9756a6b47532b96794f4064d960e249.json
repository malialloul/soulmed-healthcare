{"ast":null,"code":"var _jsxFileName = \"/home/ma/soulmed-healthcare/src/inputs/calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\n\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport { Modal } from \"react-bootstrap\";\nimport \"../css/calendar.css\";\nimport { format } from \"date-fns\";\nimport moment from \"moment\";\nimport { util } from \"../public/util\";\nimport \"../scripts/calendar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calendar = ({ ...props\n}) => {\n  _s();\n\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    filledIn: false,\n    events: []\n  });\n  const [showEventsListModal, setShowEventsListModal] = useState(false);\n  const [bookAppointmentSelected, setBookAppointmentSelected] = useState(false);\n\n  const handleBookApptBtn = () => {\n    setBookAppointmentSelected(true);\n    setShowAppointmentModal(true);\n  };\n\n  const isOverlapping = event => {\n    for (let i in data.events) {\n      if (data.events[i].id !== event.id) {\n        if (event.end >= data.events[i].start && event.start <= data.events[i].end || event.end == null && event.start >= data.events[i].start && event.start <= data.events[i].end) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n\n  const createEvent = () => {\n    let tempData = data;\n    let events = tempData.events;\n\n    if (!bookAppointmentSelected) {\n      let endTime = new Date(tempData.start + \" \" + datetime);\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      endTime = endTime.getFullYear() + \"-\" + (endTime.getMonth() + 1) + \"-\" + endTime.getDate() + \"T\" + endTime.getHours() + \":\" + endTime.getMinutes() + \":\" + (endTime.getSeconds().toString().length === 1 ? \"0\" + endTime.getSeconds() : endTime.getSeconds());\n      let newEvent = {\n        title: appointmentText,\n        start: tempData.start + \"T\" + datetime,\n        end: endTime\n      };\n\n      if (isOverlapping(newEvent)) {\n        alert(\"Appointment Overlapping, Try another time\");\n      } else {\n        events = [...events, newEvent];\n        tempData.events = events;\n      }\n    } else {\n      let endTime = new Date(datetime.split(\"T\")[0] + \" \" + datetime.split(\"T\")[1]);\n      endTime.setMinutes(endTime.getMinutes() + 30);\n      endTime = endTime.getFullYear() + \"-\" + (endTime.getMonth() + 1) + \"-\" + endTime.getDate() + \"T\" + endTime.getHours() + \":\" + endTime.getMinutes() + \":\" + (endTime.getSeconds().toString().length === 1 ? \"0\" + endTime.getSeconds() : endTime.getSeconds());\n      console.log(endTime);\n      events = [...events, {\n        title: appointmentText,\n        start: datetime,\n        end: endTime\n      }];\n    }\n\n    setDatetime(\"\");\n    setAppointmentText(\"\");\n    tempData.events = events;\n    setData(tempData);\n    setShowAppointmentModal(false);\n    setBookAppointmentSelected(false);\n  };\n\n  const isToday = someDate => {\n    const today = new Date();\n    return someDate.getDate() === today.getDate() && someDate.getMonth() === today.getMonth() && someDate.getFullYear() === today.getFullYear();\n  };\n\n  const handleDateSelect = selectInfo => {\n    if (props.allowEdit) {\n      if (new Date(selectInfo.startStr) - new Date() < 0 && !isToday(new Date(selectInfo.startStr))) {\n        alert(\"Cannot add on this day\");\n      } else {\n        let tempData = data;\n        tempData.start = selectInfo.startStr;\n        tempData.end = selectInfo.endStr;\n        setShowAppointmentModal(true);\n        setData(tempData);\n      }\n    } else {\n      let tempData = data;\n      tempData.start = selectInfo.startStr;\n      tempData.end = selectInfo.endStr;\n      setData(tempData);\n      setShowEventsListModal(true);\n    }\n  };\n\n  const handleEventClick = clickInfo => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n    }\n  };\n\n  const workSpec = [{\n    daysOfWeek: [0, 1, 2, 3, 4],\n    startTime: \"08:00\",\n    endTime: \"13:00\"\n  }, {\n    daysOfWeek: [5, 6],\n    startTime: \"09:00\",\n    endTime: \"14:00\"\n  }];\n  const workMin = workSpec.map(item => item.startTime).sort().shift();\n  const workMax = workSpec.map(item => item.endTime).sort().pop();\n  const workDays = [...new Set(workSpec.flatMap(item => item.daysOfWeek))];\n  const hideDays = [...Array(7).keys()].filter(day => !workDays.includes(day));\n\n  let calendar = /*#__PURE__*/_jsxDEV(FullCalendar, {\n    headerToolbar: {\n      left: \"prev,next,today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n    },\n    initialView: \"dayGridMonth\",\n    height: 500,\n    selectable: true,\n    select: handleDateSelect,\n    selectMirror: true,\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    weekends: true,\n    events: props.events,\n    businessHours: workSpec,\n    slotMinTime: workMin,\n    slotMaxTime: workMax,\n    slotDuration: \"00:30\",\n    eventConstraint: \"businessHours\",\n    eventOverlap: false,\n    aspectRatio: 5,\n    eventClassNames: 'found-event',\n    eventDidMount: function (event) {} //  eventClick={handleEventClick}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n\n  const hideModal = () => {\n    let tempData = data;\n    tempData.start = \"\";\n    setData(tempData);\n    setShowAppointmentModal(false);\n    setBookAppointmentSelected(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [calendar, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), props.allowEdit && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleBookApptBtn(),\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: () => hideModal(),\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Add Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"subtitle\",\n              children: \"It's quick and easy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Appoitment description\",\n            className: \"input\",\n            onChange: e => setAppointmentText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            defaultValue: startDate,\n            type: bookAppointmentSelected ? \"datetime-local\" : \"time\",\n            step: \"1\",\n            onChange: e => setDatetime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createEvent(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showEventsListModal,\n      onHide: () => setShowEventsListModal(false),\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: [\"All Appointments for \", moment(new Date(data.start)).format(\"DD-MM-YYYY\").toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [data.events.filter(aptm => util.sameDay(new Date(aptm.start), new Date(data.start))).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Events on this day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 89\n        }, this), data.events.filter(aptm => util.sameDay(new Date(aptm.start), new Date(data.start))).map(apmt => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: apmt.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(apmt.start).getHours(), \":\", new Date(apmt.start).getMinutes().toString().length === 1 ? \"0\" + new Date(apmt.start).getMinutes() : new Date(apmt.start).getMinutes()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [new Date(apmt.end).getHours(), \":\", new Date(apmt.end).getMinutes().toString().length === 1 ? \"0\" + new Date(apmt.end).getMinutes() : new Date(apmt.end).getMinutes()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Calendar, \"Kx34K5Yq1Sha/ucoFo7kr2oKGjc=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ma/soulmed-healthcare/src/inputs/calendar.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","format","moment","util","Calendar","props","newEvent","setNewEvent","appointmentText","setAppointmentText","startDate","setStartDate","Date","datetime","setDatetime","added","setAdded","showAppointmentModal","setShowAppointmentModal","data","setData","allFavs","favObj","start","end","filledIn","events","showEventsListModal","setShowEventsListModal","bookAppointmentSelected","setBookAppointmentSelected","handleBookApptBtn","isOverlapping","event","i","id","createEvent","tempData","endTime","setMinutes","getMinutes","getFullYear","getMonth","getDate","getHours","getSeconds","toString","length","title","alert","split","console","log","isToday","someDate","today","handleDateSelect","selectInfo","allowEdit","startStr","endStr","handleEventClick","clickInfo","window","confirm","remove","workSpec","daysOfWeek","startTime","workMin","map","item","sort","shift","workMax","pop","workDays","Set","flatMap","hideDays","Array","keys","filter","day","includes","calendar","left","center","right","hideModal","e","target","value","aptm","sameDay","apmt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport { Modal } from \"react-bootstrap\";\nimport \"../css/calendar.css\";\nimport { format } from \"date-fns\";\nimport moment from \"moment\";\nimport { util } from \"../public/util\";\nimport \"../scripts/calendar\"\n\nconst Calendar = ({ ...props }) => {\n  const [newEvent, setNewEvent] = useState({});\n  const [appointmentText, setAppointmentText] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [datetime, setDatetime] = useState(\"\");\n  const [added, setAdded] = useState(false);\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [data, setData] = useState({\n    allFavs: [],\n    favObj: {},\n    start: \"\",\n    end: \"\",\n    filledIn: false,\n    events: [],\n  });\n  \n\n \n  const [showEventsListModal, setShowEventsListModal] = useState(false);\n\n  const [bookAppointmentSelected, setBookAppointmentSelected] = useState(false);\n  const handleBookApptBtn = () => {\n    setBookAppointmentSelected(true);\n    setShowAppointmentModal(true);\n  };\n\n  const isOverlapping = (event) => {\n    for (let i in data.events) {\n      if (data.events[i].id !== event.id) {\n        if (\n          (event.end >= data.events[i].start &&\n            event.start <= data.events[i].end) ||\n          (event.end == null &&\n            event.start >= data.events[i].start &&\n            event.start <= data.events[i].end)\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n\n  const createEvent = () => {\n    let tempData = data;\n    let events = tempData.events;\n\n    if (!bookAppointmentSelected) {\n      let endTime = new Date(tempData.start + \" \" + datetime);\n\n      endTime.setMinutes(endTime.getMinutes() + 30);\n\n      endTime =\n        endTime.getFullYear() +\n        \"-\" +\n        (endTime.getMonth() + 1) +\n        \"-\" +\n        endTime.getDate() +\n        \"T\" +\n        endTime.getHours() +\n        \":\" +\n        endTime.getMinutes() +\n        \":\" +\n        (endTime.getSeconds().toString().length === 1\n          ? \"0\" + endTime.getSeconds()\n          : endTime.getSeconds());\n\n      let newEvent = {\n        title: appointmentText,\n        start: tempData.start + \"T\" + datetime,\n        end: endTime,\n      };\n      if (isOverlapping(newEvent)) {\n        alert(\"Appointment Overlapping, Try another time\");\n      } else {\n        events = [...events, newEvent];\n        tempData.events = events;\n      }\n    } else {\n      let endTime = new Date(\n        datetime.split(\"T\")[0] + \" \" + datetime.split(\"T\")[1]\n      );\n      endTime.setMinutes(endTime.getMinutes() + 30);\n\n      endTime =\n        endTime.getFullYear() +\n        \"-\" +\n        (endTime.getMonth() + 1) +\n        \"-\" +\n        endTime.getDate() +\n        \"T\" +\n        endTime.getHours() +\n        \":\" +\n        endTime.getMinutes() +\n        \":\" +\n        (endTime.getSeconds().toString().length === 1\n          ? \"0\" + endTime.getSeconds()\n          : endTime.getSeconds());\n      console.log(endTime);\n\n      events = [\n        ...events,\n        {\n          title: appointmentText,\n          start: datetime,\n          end: endTime,\n        },\n      ];\n    }\n    setDatetime(\"\");\n    setAppointmentText(\"\");\n    tempData.events = events;\n    setData(tempData);\n    setShowAppointmentModal(false);\n    setBookAppointmentSelected(false);\n  };\n\n  const isToday = (someDate) => {\n    const today = new Date();\n    return (\n      someDate.getDate() === today.getDate() &&\n      someDate.getMonth() === today.getMonth() &&\n      someDate.getFullYear() === today.getFullYear()\n    );\n  };\n\n  const handleDateSelect = (selectInfo) => {\n    if (props.allowEdit) {\n      if (\n        new Date(selectInfo.startStr) - new Date() < 0 &&\n        !isToday(new Date(selectInfo.startStr))\n      ) {\n        alert(\"Cannot add on this day\");\n      } else {\n        let tempData = data;\n        tempData.start = selectInfo.startStr;\n        tempData.end = selectInfo.endStr;\n        setShowAppointmentModal(true);\n        setData(tempData);\n      }\n    } else {\n      let tempData = data;\n      tempData.start = selectInfo.startStr;\n      tempData.end = selectInfo.endStr;\n      setData(tempData);\n      setShowEventsListModal(true);\n    }\n  };\n\n  const handleEventClick = (clickInfo) => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  const workSpec = [\n    {\n      daysOfWeek: [0, 1, 2, 3, 4],\n      startTime: \"08:00\",\n      endTime: \"13:00\",\n    },\n    {\n      daysOfWeek: [5, 6],\n      startTime: \"09:00\",\n      endTime: \"14:00\",\n    },\n  ];\n\n  const workMin = workSpec\n    .map((item) => item.startTime)\n    .sort()\n    .shift();\n  const workMax = workSpec\n    .map((item) => item.endTime)\n    .sort()\n    .pop();\n  const workDays = [...new Set(workSpec.flatMap((item) => item.daysOfWeek))];\n  const hideDays = [...Array(7).keys()].filter(\n    (day) => !workDays.includes(day)\n  );\n\n \n\n  let calendar = (\n    <FullCalendar\n      headerToolbar={{\n        left: \"prev,next,today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n      }}\n      initialView=\"dayGridMonth\"\n      height={500}\n      \n      selectable={true}\n      select={handleDateSelect}\n      selectMirror={true}\n      plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n      weekends={true}\n      events={props.events}\n      businessHours={workSpec}\n      slotMinTime={workMin}\n      slotMaxTime={workMax}\n      slotDuration={\"00:30\"}\n      eventConstraint=\"businessHours\"\n      eventOverlap={false}\n      aspectRatio={5}\n      eventClassNames= {'found-event'}\n      eventDidMount ={function (event) {\n      \n\n      }}\n      \n      //  eventClick={handleEventClick}\n    />\n  );\n  \n\n  \n\n  const hideModal = () => {\n    let tempData = data;\n    tempData.start = \"\";\n    setData(tempData);\n    setShowAppointmentModal(false);\n    setBookAppointmentSelected(false);\n  };\n\n  return (\n    <>\n      {calendar}\n      <br />\n      {props.allowEdit && (\n        <button onClick={() => handleBookApptBtn()}>Book Appointment</button>\n      )}\n\n      <Modal\n        show={showAppointmentModal}\n        onHide={() => hideModal()}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <div className=\"signup-title\">\n              <span className=\"title\">Add Appointment</span> <br />\n              <span className=\"subtitle\">It's quick and easy.</span>\n            </div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"d-flex flex-column\">\n            <input\n              type=\"text\"\n              placeholder=\"Appoitment description\"\n              className=\"input\"\n              onChange={(e) => setAppointmentText(e.target.value)}\n            />\n            <input\n              className=\"input\"\n              defaultValue={startDate}\n              type={bookAppointmentSelected ? \"datetime-local\" : \"time\"}\n              step=\"1\"\n              onChange={(e) => setDatetime(e.target.value)}\n            />\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <button onClick={() => createEvent()}>Add</button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={showEventsListModal}\n        onHide={() => setShowEventsListModal(false)}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <div className=\"signup-title\">\n              <span className=\"title\">\n                All Appointments for {moment(new Date(data.start)).format(\"DD-MM-YYYY\").toString()}\n              </span>{\" \"}\n              <br />\n            </div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {\n              data.events.filter((aptm) =>\n              util.sameDay(new Date(aptm.start), new Date(data.start))).length === 0 && <div>No Events on this day</div>\n          }\n         {\n             data.events.filter((aptm) =>\n             util.sameDay(new Date(aptm.start), new Date(data.start))).map((apmt) => {\n               return  <div className=\"d-flex flex-column\">\n               <span>{apmt.title}</span>\n               <div className=\"d-flex\">\n                 <span>Start Time</span>\n                 <span>\n                   {new Date(apmt.start).getHours()}:\n                   {new Date(apmt.start).getMinutes().toString()\n                     .length === 1\n                     ? \"0\" + new Date(apmt.start).getMinutes()\n                     : new Date(apmt.start).getMinutes()}\n                 </span>\n               </div>\n               <div className=\"d-flex\">\n                 <span>End Time</span>\n                 <span>\n                   {new Date(apmt.end).getHours()}:\n                   {new Date(apmt.end).getMinutes().toString()\n                     .length === 1\n                     ? \"0\" + new Date(apmt.end).getMinutes()\n                     : new Date(apmt.end).getMinutes()}\n                 </span>\n               </div>\n             </div>\n             })\n              \n           \n         }\n        </Modal.Body>\n      \n      </Modal>\n    </>\n  );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}