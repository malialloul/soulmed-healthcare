[{"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\reportWebVitals.js":"2","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\App.js":"3","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\loading.js":"4","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\i18n.js":"5","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\home.js":"6","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\work-with-us.js":"7","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\advanced-search.js":"8","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\view-profile.js":"9","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\doctor\\schedule-settings.js":"10","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\doctor\\doctor-dashboard.js":"11","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\products\\category-products.js":"12","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\products\\product.js":"13","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\products\\main-page.js":"14","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\doctor\\layout.js":"15","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\nav-bar.js":"16","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\search-model.js":"17","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\slider-component.js":"18","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\quick-access.js":"19","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\services.js":"20","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\login-model.js":"21","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\doctor-appointments.js":"22","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\doctor-recent-activities.js":"23","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\footer.js":"24","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\doctors-advanced-search.js":"25","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\controllers\\doctor.js":"26","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\controllers\\product-page.js":"27","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\controllers\\welcome-page.js":"28","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\custom-pagination.js":"29","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\map.js":"30","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\slider.js":"31","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\price-range.js":"32","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\public\\util.js":"33","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\calendar.js":"34","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\close.js":"35","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\search-icon.js":"36","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\down-chevron.js":"37","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\doctor-side-menu.js":"38","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\bell.js":"39","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\location-icon.js":"40","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\right-chevron.js":"41","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\toggle.js":"42","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\around-me.js":"43","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\dropdown.js":"44","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\search-input.js":"45","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\categories-dropdown.js":"46","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\scroll-pagination.js":"47","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\registration-modal.js":"48","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\left-chevron.js":"49","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\youtube.js":"50","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\linkedin.js":"51","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\phone.js":"52","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\facebook.js":"53","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\scripts\\calendar.js":"54","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\inbox.js":"55","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\paper-airplane.js":"56","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\scripts\\doctor-side-menu.js":"57","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\select-years.js":"58"},{"size":716,"mtime":1637706158659,"results":"59","hashOfConfig":"60"},{"size":375,"mtime":1637706158675,"results":"61","hashOfConfig":"60"},{"size":1858,"mtime":1637706158612,"results":"62","hashOfConfig":"60"},{"size":256,"mtime":1637706158675,"results":"63","hashOfConfig":"60"},{"size":648,"mtime":1637706158644,"results":"64","hashOfConfig":"60"},{"size":1661,"mtime":1637706158691,"results":"65","hashOfConfig":"60"},{"size":6176,"mtime":1637706158691,"results":"66","hashOfConfig":"60"},{"size":3084,"mtime":1637706158675,"results":"67","hashOfConfig":"60"},{"size":179,"mtime":1637706158691,"results":"68","hashOfConfig":"60"},{"size":16209,"mtime":1637706158691,"results":"69","hashOfConfig":"60"},{"size":2638,"mtime":1637706158675,"results":"70","hashOfConfig":"60"},{"size":2347,"mtime":1637706158691,"results":"71","hashOfConfig":"60"},{"size":2254,"mtime":1637706158691,"results":"72","hashOfConfig":"60"},{"size":4853,"mtime":1637706158691,"results":"73","hashOfConfig":"60"},{"size":479,"mtime":1637706158675,"results":"74","hashOfConfig":"60"},{"size":7923,"mtime":1637706158628,"results":"75","hashOfConfig":"60"},{"size":5224,"mtime":1637706158628,"results":"76","hashOfConfig":"60"},{"size":525,"mtime":1637706158628,"results":"77","hashOfConfig":"60"},{"size":1870,"mtime":1637706158628,"results":"78","hashOfConfig":"60"},{"size":3166,"mtime":1637706158628,"results":"79","hashOfConfig":"60"},{"size":3049,"mtime":1637706158628,"results":"80","hashOfConfig":"60"},{"size":2140,"mtime":1637706158628,"results":"81","hashOfConfig":"60"},{"size":4926,"mtime":1637706158628,"results":"82","hashOfConfig":"60"},{"size":3627,"mtime":1637706158628,"results":"83","hashOfConfig":"60"},{"size":3225,"mtime":1637706158628,"results":"84","hashOfConfig":"60"},{"size":1528,"mtime":1637706158628,"results":"85","hashOfConfig":"60"},{"size":1032,"mtime":1637706158628,"results":"86","hashOfConfig":"60"},{"size":3344,"mtime":1637706158628,"results":"87","hashOfConfig":"60"},{"size":3194,"mtime":1637706158659,"results":"88","hashOfConfig":"60"},{"size":1047,"mtime":1637706158659,"results":"89","hashOfConfig":"60"},{"size":731,"mtime":1637706158659,"results":"90","hashOfConfig":"60"},{"size":769,"mtime":1637706158659,"results":"91","hashOfConfig":"60"},{"size":3772,"mtime":1637706158675,"results":"92","hashOfConfig":"60"},{"size":17816,"mtime":1637706158659,"results":"93","hashOfConfig":"60"},{"size":388,"mtime":1637706158659,"results":"94","hashOfConfig":"60"},{"size":417,"mtime":1637706158659,"results":"95","hashOfConfig":"60"},{"size":392,"mtime":1637706158659,"results":"96","hashOfConfig":"60"},{"size":1486,"mtime":1637706158628,"results":"97","hashOfConfig":"60"},{"size":557,"mtime":1637706158659,"results":"98","hashOfConfig":"60"},{"size":619,"mtime":1637706158659,"results":"99","hashOfConfig":"60"},{"size":403,"mtime":1637706158659,"results":"100","hashOfConfig":"60"},{"size":393,"mtime":1637706158659,"results":"101","hashOfConfig":"60"},{"size":492,"mtime":1637706158644,"results":"102","hashOfConfig":"60"},{"size":965,"mtime":1637706158659,"results":"103","hashOfConfig":"60"},{"size":1794,"mtime":1637706158659,"results":"104","hashOfConfig":"60"},{"size":5276,"mtime":1637706158628,"results":"105","hashOfConfig":"60"},{"size":1043,"mtime":1637706158659,"results":"106","hashOfConfig":"60"},{"size":15660,"mtime":1637706158628,"results":"107","hashOfConfig":"60"},{"size":395,"mtime":1637706158659,"results":"108","hashOfConfig":"60"},{"size":1067,"mtime":1637706158659,"results":"109","hashOfConfig":"60"},{"size":856,"mtime":1637706158659,"results":"110","hashOfConfig":"60"},{"size":579,"mtime":1637706158659,"results":"111","hashOfConfig":"60"},{"size":581,"mtime":1637706158659,"results":"112","hashOfConfig":"60"},{"size":59,"mtime":1637706158675,"results":"113","hashOfConfig":"60"},{"size":563,"mtime":1637706158659,"results":"114","hashOfConfig":"60"},{"size":416,"mtime":1637706158659,"results":"115","hashOfConfig":"60"},{"size":577,"mtime":1637706158675,"results":"116","hashOfConfig":"60"},{"size":414,"mtime":1637706158659,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rzjdpq",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\index.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\App.js",["267","268"],"import React from \"react\";\r\nimport { Route, Routes, BrowserRouter } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport \"./css/landing-page.css\";\r\nimport \"./css/nav-bar.css\";\r\nimport Home from \"./views/home\";\r\nimport ProductsMainPage from \"./views/products/main-page\";\r\nimport Product from \"./views/products/product\";\r\nimport AdvancedSearch from \"./views/advanced-search\";\r\nimport WokrWithUs from \"./views/work-with-us\";\r\nimport ViewProfile from \"./views/view-profile\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport DoctorDashboard from \"./views/doctor/doctor-dashboard\";\r\nimport ScheduleSettings from \"./views/doctor/schedule-settings\";\r\nimport CategoryProducts from \"./views/products/category-products\";\r\nimport axios from 'axios'\r\n\r\nconst App = () => {\r\n  const [t, i18n] = useTranslation();\r\n\r\n\r\n  return (\r\n    <div dir={i18n.language === \"en\" ? \"ltr\" : \"rtl\"}>\r\n      <BrowserRouter history={createBrowserHistory}>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Home />} />\r\n          <Route exact path=\"/work-with-us\" element={<WokrWithUs />} />\r\n          <Route exact path=\"/view-profile/:id\" element={<ViewProfile />} />\r\n          <Route exact path=\"/doctor/schedule-settings/:id\" element={<ScheduleSettings />} />\r\n          <Route path=\"/doctor/dashboard\" element={<DoctorDashboard />} />\r\n          <Route path=\"/products\" element={<ProductsMainPage />} />\r\n          <Route exact path=\"/products/:productId\" element={<Product />} />\r\n          <Route exact path=\"/products/category/:categoryId\" element={<CategoryProducts />} />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/advanced-search/:categoryId/:professionId/:searchText\"\r\n            element={<AdvancedSearch />}\r\n          />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\loading.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\i18n.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\home.js",["269","270","271","272"],"import React, { useEffect, useState } from \"react\";\r\nimport SearchModel from \"../components/search-model\";\r\nimport LoginModel from \"../components/login-model\";\r\nimport { welcomeConroller } from \"../controllers/welcome-page\";\r\nimport SearchModal from \"../components/search-model\";\r\nimport NavBar from \"../components/nav-bar\";\r\nimport SliderComponent from \"../components/slider-component\";\r\nimport Services from \"../components/services\";\r\nimport QuickAccess from \"../components/quick-access\";\r\nimport Footer from \"../components/footer\";\r\n\r\nconst Home = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [registerSubmit, setRegisterSubmit] = useState(false);\r\n  useEffect(() => {\r\n    welcomeConroller.getAllCategories().then((response) => {\r\n      setCategories(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar selectedTab=\"home\" onSubmit={() => setRegisterSubmit(true)} />\r\n      {registerSubmit && (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"d-flex align-items-center justify-content-center col-md-8 verification\">\r\n            Please verify your address in order to proceed, if you still didn't\r\n            receive any email, <a href=\"#\">click here</a>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <SearchModel categories={categories} doctorsData={[]} productsData={[]} />{\" \"}\r\n      <br />\r\n      <div className=\"body\">\r\n        <br />\r\n        <br />\r\n        <QuickAccess />\r\n        <br />\r\n\r\n        <br />\r\n        <Services />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\work-with-us.js",["273","274"],"import classNames from \"classnames\";\r\nimport { useState } from \"react\";\r\nimport \"../css/work-with-us.css\";\r\nimport NavBar from \"../components/nav-bar\";\r\nimport Map from \"../inputs/map\";\r\n\r\nconst WokrWithUs = () => {\r\n  const [index, setIndex] = useState(0);\r\n  const [mapData, setMapData] = useState({\r\n    center: {\r\n      lat: 59.95,\r\n      lng: 30.33,\r\n    },\r\n    zoom: 11,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n\r\n      <div className=\"main-div\">\r\n        <div className=\"w-100 wizard-div d-flex align-items-center justify-content-between\">\r\n          <div className=\"wizard-line\"></div>\r\n\r\n          <div className=\"step1 wizard-step d-flex flex-column justify-content-center align-items-center\">\r\n            <div\r\n              onClick={() => setIndex(0)}\r\n              className={classNames(\"step\", {\r\n                selected_step: index === 0,\r\n              })}\r\n            ></div>\r\n            <span>Welcome</span>\r\n          </div>\r\n\r\n          <div className=\"step2 wizard-step d-flex flex-column justify-content-center align-items-center\">\r\n            <div\r\n              onClick={() => setIndex(1)}\r\n              className={classNames(\"step\", {\r\n                selected_step: index === 1,\r\n              })}\r\n            ></div>{\" \"}\r\n            <span>Identification</span>\r\n          </div>\r\n\r\n          <div className=\"step3 wizard-step d-flex flex-column justify-content-center align-items-center\">\r\n            <div\r\n              onClick={() => setIndex(2)}\r\n              className={classNames(\"step\", {\r\n                selected_step: index === 2,\r\n              })}\r\n            ></div>{\" \"}\r\n            <span>Organization</span>\r\n          </div>\r\n\r\n          <div className=\"step4 wizard-step d-flex flex-column justify-content-center align-items-center\">\r\n            <div\r\n              onClick={() => setIndex(3)}\r\n              className={classNames(\"step\", {\r\n                selected_step: index === 3,\r\n              })}\r\n            ></div>{\" \"}\r\n            <span>Summary</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"account-details\">\r\n            {index === 0 && <div className=\"welcome\">Welcome</div>}\r\n            {index === 1 && (\r\n              <div className=\"d-flex flex-column identification-div\">\r\n                <div className=\"form-group d-flex p-4  align-items-center\">\r\n                  <label>Add ID or passport</label>\r\n                  <div>\r\n                    <label for=\"files\" className=\"upload-btn\">\r\n                      Select Image\r\n                    </label>\r\n                    <input id=\"files\" className=\"d-none\" type=\"file\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group d-flex p-4  align-items-center\">\r\n                  <label>Choose Profession</label>\r\n                  <div>\r\n                    <select className=\"input\">\r\n                      <option>op1</option>\r\n                      <option>op2</option>\r\n                      <option>op3</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group d-flex p-4  align-items-center\">\r\n                  <label>Choose Speciality</label>\r\n                  <div>\r\n                    <select className=\"input\">\r\n                      <option>op1</option>\r\n                      <option>op2</option>\r\n                      <option>op3</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group d-flex p-4  align-items-center\">\r\n                  <label>Graduation year</label>\r\n                  <div className=\"d-flex\">\r\n                    <input\r\n                      type=\"number\"\r\n                      min={1}\r\n                      max={31}\r\n                      className=\"input\"\r\n                      placeholder=\"dd\"\r\n                    />\r\n                    <input\r\n                      type=\"number\"\r\n                      min={1}\r\n                      max={12}\r\n                      className=\"input\"\r\n                      placeholder=\"mm\"\r\n                    />\r\n\r\n                    <input\r\n                      type=\"number\"\r\n                      min={1900}\r\n                      max={new Date().getFullYear()}\r\n                      className=\"input\"\r\n                      placeholder=\"yyyy\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group d-flex p-4  align-items-center\">\r\n                  <label>Years of experience</label>\r\n                  <div>\r\n                    <select className=\"input\">\r\n                      <option>1-2</option>\r\n                      <option>3-5</option>\r\n                      <option>{\">\"} 5</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group d-flex p-4  align-items-center\">\r\n                  <label>Add Certifications</label>\r\n                  <div>\r\n                    <label for=\"files\" className=\"upload-btn\">\r\n                      Select Image\r\n                    </label>\r\n                    <input multiple id=\"files\" className=\"d-none\" type=\"file\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group d-flex p-4  align-items-center\">\r\n                  <label>Add Location</label>\r\n                  <div>\r\n                    <Map />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {index === 2 && <div className=\"organization\">Organization</div>}\r\n            {index === 3 && <div className=\"summary\">Summary</div>}\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <button onClick={() => setIndex(index === 0 ? 0 : index - 1)}>\r\n            Back\r\n          </button>\r\n\r\n          <button onClick={() => setIndex(index === 3 ? 3 : index + 1)}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default WokrWithUs;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\advanced-search.js",["275","276","277","278","279"],"import { useEffect, useState } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport DoctorsAdvancedSearch from \"../components/doctors-advanced-search\";\r\nimport NavBar from \"../components/nav-bar\";\r\nimport SearchModel from \"../components/search-model\";\r\nimport { welcomeConroller } from \"../controllers/welcome-page\";\r\nimport CustomPagination from \"../inputs/custom-pagination\";\r\nimport \"../css/advanced-search.css\";\r\nimport PriceRange from \"../inputs/price-range\";\r\n\r\nconst AdvancedSearch = () => {\r\n  const { categoryId, professionId, searchText } = useParams();\r\n  const [data, setData] = useState([]);\r\n  const [tempdata, setTempData] = useState([]);\r\n\r\n  const [cityText, setCityText] = useState(\"\");\r\n  const [priceValue, setPriceValue] = useState([0, 1000]);  \r\n\r\n  useEffect(() => {\r\n    setTempData(data);\r\n  }, [data]);\r\n\r\n\r\n  useEffect(() => {\r\n    let list = data;\r\n    list = list.filter(\r\n      (item) => item.Price >= priceValue[0] && item.Price <= priceValue[1]\r\n    );\r\n    setTempData(list);\r\n  }, [priceValue]);\r\n\r\n  return (\r\n    <div className=\"advanced-search vh-100\">\r\n      <NavBar />\r\n      <SearchModel\r\n        category_id={categoryId}\r\n        profession_id={professionId}\r\n        searchText={searchText}\r\n        getData={(data) => setData(data)}\r\n      />\r\n      <br />\r\n      <div className=\"d-flex justify-content-center\">\r\n        <div className=\"filters d-flex flex-column justify-content-center align-items-center col-md-8\">\r\n          <h2>Filters</h2>\r\n          <div className=\"d-flex w-100 filter-keys justify-content-between\">\r\n            <span className=\"key\">Nearest by Km</span>\r\n            <span\r\n              className=\"key\"\r\n              data-bs-toggle=\"collapse\"\r\n              href=\"#city-div\"\r\n              role=\"button\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"city-div\"\r\n            >\r\n              City\r\n            </span>\r\n            <span className=\"key\">Country</span>\r\n            <span\r\n              className=\"key\"\r\n              data-bs-toggle=\"collapse\"\r\n              href=\"#price-div\"\r\n              role=\"button\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"price-div\"\r\n            >\r\n              Price\r\n            </span>\r\n            <span className=\"key\">Availability</span>\r\n          </div>\r\n          <div id=\"price-div\" className=\"filter-by-price collapse\">\r\n            <PriceRange\r\n              min={0}\r\n              max={1000}\r\n              onChange={(value) => setPriceValue(value)}\r\n            />\r\n          </div>\r\n          <div id=\"city-div\" className=\"filter-by-city collapse\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input\"\r\n              placeholder=\"Search by City\"\r\n              onChange={(e) => setCityText(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      \r\n\r\n      {(categoryId === \"1\") && <DoctorsAdvancedSearch data={tempdata} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvancedSearch;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\view-profile.js",["280"],"import { useParams } from \"react-router-dom\";\r\n\r\nconst ViewProfile = ({ ...props }) => {\r\n  const { id } = useParams();\r\n  return <div>ss</div>;\r\n};\r\nexport default ViewProfile;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\doctor\\schedule-settings.js",["281","282","283","284"],"import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { doctorController } from \"../../controllers/doctor\";\r\nimport Layout from \"./layout\";\r\nimport \"../../css/schedule-settings.css\";\r\nimport moment from \"moment\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { util } from \"../../public/util\";\r\nimport axios from \"axios\";\r\n\r\nconst ScheduleSettings = () => {\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  const [schedueList, setSchdeuleList] = useState([]);\r\n  const [doctorData, setDoctorData] = useState({\r\n    id: -1,\r\n    name: \"\",\r\n    country: \"\",\r\n    profession_fk: -1,\r\n    city: \"\",\r\n    Price: \"\",\r\n    location: [],\r\n  });\r\n  const [timingIndexCount, setTimingIndexCount] = useState(-1);\r\n  const [addTimingDisbaled, setAddTimingDisabled] = useState(false);\r\n  useEffect(() => {\r\n    doctorController\r\n      .getDoctorInfo(id)\r\n      .then((response) => {\r\n        setDoctorData(response.data);\r\n      })\r\n      .then(() => {\r\n        doctorController\r\n          .getDoctorSchedule(id)\r\n          .then((res) => {\r\n            setSchdeuleList(res.data);\r\n            setTimingIndexCount(\r\n              res.data.length > 0 ? res.data[res.data.length - 1].id + 1 : 1\r\n            );\r\n          })\r\n          .then(() => {\r\n            setLoading(false);\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  const daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n\r\n  const [timingArray, setTimingarray] = useState([]);\r\n  const addTiming = () => {\r\n    setAddTimingDisabled(true);\r\n    let temp = timingArray;\r\n    temp = [...temp, { id: timingIndexCount, start: \"\", end: \"\", type: 0 }];\r\n    setTimingarray(temp);\r\n\r\n    setTimingIndexCount(timingIndexCount + 1);\r\n    console.log(timingArray);\r\n  };\r\n  const deleteTiming = (id, index) => {\r\n    if (index === timingArray.length - 1) {\r\n      setAddTimingDisabled(false);\r\n    }\r\n    let temp = timingArray;\r\n    temp = timingArray.filter((timing) => timing.id !== id);\r\n    setTimingarray(temp);\r\n  };\r\n\r\n  const modifyStartTiming = (index, value) => {\r\n    let temp = [...timingArray];\r\n    temp[index].start = value;\r\n\r\n    setTimingarray(temp);\r\n  };\r\n  const modifyEndTiming = (index, value) => {\r\n    let temp = [...timingArray];\r\n    temp[index].end = value;\r\n\r\n    setTimingarray(temp);\r\n    if (\r\n      temp[temp.length - 1].start !== \"\" &&\r\n      temp[temp.length - 1].end !== \"\"\r\n    ) {\r\n      setAddTimingDisabled(false);\r\n    }\r\n  };\r\n  const modifyAppointmentsType = (index, value) => {\r\n    let temp = [...timingArray];\r\n    temp[index].type = value;\r\n\r\n    setTimingarray(temp);\r\n  };\r\n\r\n  const [location, setLocation] = useState(\"\");\r\n  const [daysSelected, setDaysSelected] = useState([]);\r\n  const [previousWeekSchedule, setPreviousWeekSchedule] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const importPreviousWeekScheduke = async () => {\r\n    let thisWeekScheduleList = [];\r\n    let count = 0;\r\n\r\n    for (let i = -7; i < 0; i++) {\r\n      let previousWeekDay = new Date(util.getDayDate(i));\r\n\r\n      for (let j = 0; j < schedueList.length; j++) {\r\n        if (util.sameDay(new Date(schedueList[j].start), previousWeekDay)) {\r\n          let daySchedule = {\r\n            start: moment(\r\n              new Date(schedueList[j].start).setDate(\r\n                previousWeekDay.getDate() + 7\r\n              )\r\n            ).format(\"YYYY-MM-DDTkk:mm:ss\"),\r\n            end: moment(\r\n              new Date(schedueList[j].end).setDate(\r\n                previousWeekDay.getDate() + 7\r\n              )\r\n            ).format(\"YYYY-MM-DDTkk:mm:ss\"),\r\n            doctor_fk: schedueList[j].doctor_fk,\r\n            location: schedueList[j].location,\r\n            type: schedueList[j].type,\r\n          };\r\n\r\n          thisWeekScheduleList.push(daySchedule);\r\n        }\r\n      }\r\n    }\r\n    console.log(thisWeekScheduleList)\r\n    for (let j = 0; j < thisWeekScheduleList.length; j++) {\r\n      await doctorController.addDoctorAppointmentSchedule(thisWeekScheduleList[j]);\r\n    }\r\n    alert(\"Schedule Imported Successfully\");\r\n   // navigate(\"/doctor/dashboard/\");\r\n  };\r\n\r\n  const sendScheduleRequests = () => {\r\n    if (checkScheduleDataValidity()) {\r\n      sendRequestData().then(() => {\r\n        alert(\"Schedule Updated\");\r\n        navigate(\"/doctor/dashboard\");\r\n      });\r\n    } else {\r\n      alert(\"Fill all fields, time overlappings and time ranges validity\");\r\n    }\r\n  };\r\n\r\n  const sendRequestData = async () => {\r\n    let count = 0;\r\n\r\n    for (let i = 0; i < daysSelected.length; i++) {\r\n      let list = getDaySchedule(i, count);\r\n      count += list.length + 1;\r\n      console.log(list);\r\n      for (let j = 0; j < list.length; j++) {\r\n        await doctorController.addDoctorAppointmentSchedule(list[j]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getDaySchedule = (daySelectedIndex, count) => {\r\n    let newTimingDates = [];\r\n    let increment = count;\r\n    for (let i = 0; i < timingArray.length; i++) {\r\n      newTimingDates = [\r\n        ...newTimingDates,\r\n        {\r\n          doctor_fk: parseInt(id),\r\n          start:\r\n            moment(\r\n              util.getDayDate(\r\n                daysOfWeek.indexOf(daysSelected[daySelectedIndex])\r\n              )\r\n            ).format(\"YYYY-MM-DD\") +\r\n            \"T\" +\r\n            timingArray[i].start,\r\n          end:\r\n            moment(\r\n              util.getDayDate(\r\n                daysOfWeek.indexOf(daysSelected[daySelectedIndex])\r\n              )\r\n            ).format(\"YYYY-MM-DD\") +\r\n            \"T\" +\r\n            timingArray[i].end,\r\n          location: location,\r\n          type: parseInt(timingArray[i].type),\r\n        },\r\n      ];\r\n      increment++;\r\n    }\r\n\r\n    return newTimingDates;\r\n  };\r\n\r\n  const checkScheduleDataValidity = () => {\r\n    let overlapping = false;\r\n    let emptyFields = false;\r\n    let validIntervals = true;\r\n    let newEvent = {};\r\n    let newTimingArray = [];\r\n    for (let i = 0; i < timingArray.length; i++) {\r\n      newEvent = {\r\n        start:\r\n          moment(util.getDayDate(daysOfWeek.indexOf(daysSelected[0]))).format(\r\n            \"YYYY-MM-DD\"\r\n          ) +\r\n          \"T\" +\r\n          timingArray[i].start,\r\n        end:\r\n          moment(util.getDayDate(daysOfWeek.indexOf(daysSelected[0]))).format(\r\n            \"YYYY-MM-DD\"\r\n          ) +\r\n          \"T\" +\r\n          timingArray[i].end,\r\n      };\r\n      newTimingArray.push(newEvent);\r\n    }\r\n    for (let j = 0; j < newTimingArray.length; j++) {\r\n      if (util.isOverlapping(newTimingArray[j], newTimingArray)) {\r\n        overlapping = true;\r\n      }\r\n\r\n      if (\r\n        !util.isValidTimingInterval(\r\n          newTimingArray[j].start,\r\n          newTimingArray[j].end\r\n        )\r\n      ) {\r\n        validIntervals = false;\r\n      }\r\n    }\r\n\r\n    if (\r\n      overlapping ||\r\n      emptyFields ||\r\n      location === \"\" ||\r\n      daysSelected.length === 0 ||\r\n      !validIntervals\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleChange = (e, data) => {\r\n    const { name, checked } = e.target;\r\n    if (checked) {\r\n      // if cheked and selectall checkbox add all fileds to selectedList\r\n      if (name === \"allSelect\") {\r\n        let temp = daysOfWeek;\r\n        setDaysSelected(temp);\r\n      } else {\r\n        // if cheked and specific checkbox add specific field to selectedList\r\n        setDaysSelected([...daysSelected, name]);\r\n      }\r\n    } else {\r\n      // if uncheked and selectall checkbox add remove all fileds from selectedList\r\n      if (name === \"allSelect\") {\r\n        setDaysSelected([]);\r\n      } else {\r\n        // if uncheked and specific checkbox remove specific field from selectedList\r\n        let tempSelected = daysSelected.filter((item, i) => item !== name);\r\n\r\n        setDaysSelected(tempSelected);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout pageName=\"Schedule Settings\" pageIndex={3}>\r\n      {!loading && (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"col-12 schedule-div\">\r\n            <div className=\"main_div\">\r\n              <div className=\"div_header\">\r\n                <h3>\r\n                  Weekly Schedule (From{\" \"}\r\n                  {util.getDayDate(0).toString().substring(0, 15)} into{\" \"}\r\n                  {util.getDayDate(6).toString().substring(0, 15)})\r\n                </h3>\r\n              </div>\r\n              <br />\r\n              <div className=\"div_content\">\r\n                <div className=\"d-flex flex-column\">\r\n                  <span>\r\n                    Do you want to import the schedule of previous week?\r\n                  </span>\r\n                  <div className=\"d-flex input align-items-center justify-content-center\">\r\n                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                      <input\r\n                        onChange={(e) =>\r\n                          setPreviousWeekSchedule(\r\n                            e.target.checked ? true : false\r\n                          )\r\n                        }\r\n                        type=\"radio\"\r\n                        name=\"pws\"\r\n                        checked={previousWeekSchedule}\r\n                      />\r\n                      <label>YES</label>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center justify-content-center mx-4\">\r\n                      <input\r\n                        onChange={(e) =>\r\n                          setPreviousWeekSchedule(\r\n                            e.target.checked ? false : true\r\n                          )\r\n                        }\r\n                        type=\"radio\"\r\n                        checked={!previousWeekSchedule}\r\n                        name=\"pws\"\r\n                      />\r\n                      <label>NO</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <input\r\n                      type=\"button\"\r\n                      value={\"Import\"}\r\n                      className=\"input\"\r\n                      onClick={() => importPreviousWeekScheduke()}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {!previousWeekSchedule && (\r\n                  <>\r\n                    <div className=\"d-flex flex-column\">\r\n                      <span>Location</span>\r\n                      <select onChange={(e) => setLocation(e.target.value)}>\r\n                        <option selected disabled>\r\n                          Select your location\r\n                        </option>\r\n                        {doctorData.location.map((l, i) => {\r\n                          return <option key={\"location\" + i}>{l}</option>;\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"d-flex flex-column\">\r\n                      <span>Appointment Schedule</span>\r\n                      <input\r\n                        type=\"button\"\r\n                        className=\"input\"\r\n                        value=\"Add Timing\"\r\n                        disabled={addTimingDisbaled}\r\n                        onClick={() => addTiming()}\r\n                      />\r\n                      <div className=\"d-flex w-100 flex-column justify-content-center\">\r\n                        {timingArray.map((time, index) => {\r\n                          return (\r\n                            <div\r\n                              key={\"time\" + index}\r\n                              className=\"d-flex  justify-content-between\"\r\n                            >\r\n                              <input\r\n                                className=\"input\"\r\n                                placeholder={\"Start Time \"}\r\n                                type=\"time\"\r\n                                value={timingArray[index].start}\r\n                                onChange={(e) =>\r\n                                  modifyStartTiming(index, e.target.value)\r\n                                }\r\n                              />\r\n                              <input\r\n                                className=\"input\"\r\n                                placeholder=\"End Time\"\r\n                                type=\"time\"\r\n                                value={timingArray[index].end}\r\n                                onChange={(e) =>\r\n                                  modifyEndTiming(index, e.target.value)\r\n                                }\r\n                              />\r\n                              <select\r\n                                onChange={(e) =>\r\n                                  modifyAppointmentsType(index, e.target.value)\r\n                                }\r\n                                value={timingArray[index].type}\r\n                                className=\"input\"\r\n                              >\r\n                                <option selected disabled>\r\n                                  Select type\r\n                                </option>\r\n                                <option value={0}>Physical</option>\r\n                                <option value={1}>Virtual</option>\r\n                                <option value={2}>Physical or Virtual</option>\r\n                                <option value={3}>Meeting</option>\r\n                                <option value={4}>Lunch Break</option>\r\n                              </select>\r\n                              <input\r\n                                type=\"button\"\r\n                                value={\"X\"}\r\n                                className=\"input close\"\r\n                                onClick={() => deleteTiming(time.id, index)}\r\n                              />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                      <br />\r\n                      <div className=\"d-flex flex-column\">\r\n                        <label>Select your preffered days</label>\r\n                        <div className=\"d-flex  align-items-center justify-content-center mx-4\">\r\n                          <input\r\n                            name=\"allSelect\"\r\n                            onChange={(e) => handleChange(e)}\r\n                            type=\"checkbox\"\r\n                            checked={daysSelected.length === 7}\r\n                          />\r\n                          <label>Select All</label>\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"d-flex  align-items-center justify-content-center flex-wrap\">\r\n                          {daysOfWeek.map((day, i) => {\r\n                            return (\r\n                              <div\r\n                                key={\"day\" + i}\r\n                                className=\"d-flex input align-items-center justify-content-center mx-4\"\r\n                              >\r\n                                <input\r\n                                  name={day}\r\n                                  onChange={(e) => handleChange(e)}\r\n                                  type=\"checkbox\"\r\n                                  value={day}\r\n                                  checked={daysSelected.some(\r\n                                    (item, j) => item === day\r\n                                  )}\r\n                                />\r\n                                <label>{day}</label>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                        <div className=\"d-flex flex-column\">\r\n                          <input\r\n                            type=\"button\"\r\n                            value={\"Validate\"}\r\n                            className=\"input\"\r\n                            onClick={() => sendScheduleRequests()}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ScheduleSettings;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\doctor\\doctor-dashboard.js",["285","286","287","288"],"import React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../../components/nav-bar\";\r\nimport \"../../css/doctor-dashboard.css\";\r\nimport Calendar from \"../../inputs/calendar\";\r\nimport { util } from \"../../public/util\";\r\nimport { doctorController } from \"../../controllers/doctor\";\r\nimport Layout from \"./layout\";\r\nimport DoctorAppointments from \"../../components/doctor-appointments\";\r\nimport DoctorRecentActivities from \"../../components/doctor-recent-activities\";\r\n\r\nconst DoctorDashboard = () => {\r\n  const [appointmentsList, setAppointmentsList] = useState([]);\r\n  const [scheduleList, setScheduleList] = useState([]);\r\n  const [loading, isLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    doctorController\r\n      .getAllDoctorAppointments(5)\r\n      .then((response) => {\r\n        setAppointmentsList(response);\r\n      })\r\n      .then(() => {\r\n        doctorController\r\n          .getDoctorSchedule(5)\r\n          .then((response) => {\r\n            let list = response.data;\r\n            for (let i = 0; i < list.length; i++) {\r\n              list[i][\"is_schedule\"] = true;\r\n            }\r\n            setScheduleList(list);\r\n          })\r\n          .then(() => {\r\n            isLoading(false);\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout doctorId={5} pageName=\"Dashboard\" pageIndex={0}>\r\n      <div className=\"row gx-0 d-flex justify-content-between \">\r\n        <div className=\"col-sm-11 col-md-11 col-lg-6 calendar\">\r\n          <div className=\"main_div\">\r\n            <div className=\"div_header\">\r\n              <h3>Calendar</h3>\r\n            </div>\r\n            <div className=\"div_content\">\r\n              <Calendar isDoctor={true} allowEdit={false} doctorId={5} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-11 mt-lg-0 ml-lg-2 mt-md-4 mt-sm-4 col-md-11 col-lg-5 appointments \">\r\n          <div className=\"main_div\">\r\n            <div className=\"div_header\">\r\n              <h3>Today's Appointments</h3>\r\n            </div>\r\n            <div className=\"div_content\">\r\n              <DoctorAppointments appointments={appointmentsList} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n\r\n      <div className=\"recent-activities col-sm-11 col-md-11 col-lg-12\">\r\n        <div className=\"main_div\">\r\n          <div className=\"div_header\">\r\n            <h3>Recent Activities</h3>\r\n          </div>\r\n          <div className=\"div_content\">\r\n            <DoctorRecentActivities appointments={appointmentsList} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\products\\category-products.js",["289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { productsController } from \"../../controllers/product-page\";\r\nimport \"../../css/products-main.css\";\r\nimport DownChevron from \"../../icons/down-chevron\";\r\nimport Close from \"../../icons/close\";\r\nimport SearchIcon from \"../../icons/search-icon\";\r\nimport laptop1 from \"../../laptop1.jpeg\";\r\nimport { Outlet, Link } from \"react-router-dom\";\r\nimport soulmed from \"../../logo.png\";\r\nimport {\r\n  ReactiveBase,\r\n  RangeSlider,\r\n  SelectedFilters,\r\n  ResultList,\r\n  ReactiveList,\r\n} from \"@appbaseio/reactivesearch\";\r\nimport classNames from \"classnames\";\r\nimport CustomPagination from \"../../inputs/custom-pagination\";\r\nimport NavBar from \"../../components/nav-bar\";\r\nimport PriceRange from \"../../inputs/price-range\";\r\nimport SliderAnimation from \"../../inputs/slider\";\r\n\r\nconst CategoryProducts = ({ ...props }) => {\r\n  const { categoryId } = useParams();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [category, setCategory] = useState({});\r\n  const [productsList, setProductsList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    productsController\r\n      .getCategory(categoryId)\r\n      .then((response) => {\r\n        setCategory(response.data[0]);\r\n      })\r\n      .then(() => {\r\n        productsController.getCategoryProduct().then((res) => {\r\n          setProductsList(res.data);\r\n          setLoading(false);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <NavBar selectedTab=\"products\" />\r\n\r\n      {!loading && (\r\n        <>\r\n          <div className=\"container-fluid row d-flex justify-content-center\">\r\n            <div className=\"col-12 search-bar d-flex align-items-center\">\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setSearchText(e.target.value)}\r\n                defaultValue={category.name}\r\n                placeholder=\"Search: Place Holder: Company name, Device name , category of this devices\"\r\n                className=\"product-search-input\"\r\n              />\r\n              <div className=\"search-icon\">\r\n                <SearchIcon />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryProducts;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\products\\product.js",["307"],"import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavBar from \"../../components/nav-bar\";\r\nimport { productsController } from \"../../controllers/product-page\";\r\nimport \"../../css/product.css\";\r\nimport laptop1 from \"../../laptop1.jpeg\";\r\nimport laptop2 from \"../../laptop2.jpeg\";\r\nimport laptop3 from \"../../laptop3.jpeg\";\r\n\r\nconst Product = () => {\r\n  let { productId } = useParams();\r\n  let imagePath = [laptop1, laptop2, laptop3];\r\n  const [index, setIndex] = useState(0);\r\n  const [productDetails, setProductDetails] = useState({});\r\n  useEffect(() => {\r\n    productsController.getProduct(productId).then((response) => {\r\n      setProductDetails(response.data[0]);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"\">\r\n      <NavBar selectedTab=\"products\" />\r\n\r\n      <div className=\"header d-flex justify-content-between\">\r\n        <div className=\"col-4\">\r\n          <strong>\r\n            {productDetails.name} by {productDetails.company_name}\r\n          </strong>\r\n        </div>\r\n        <div className=\"col-4 d-flex justify-content-end\">\r\n          <button className=\"buy-now\">\r\n            Buy Now for {productDetails.price}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"body\">\r\n        <div className=\"d-flex\">\r\n          <div className=\"col-4 d-flex h-auto flex-column justify-content-center\">\r\n            {imagePath.map((img, i) => {\r\n              return (\r\n                <div\r\n                  key={\"product\" + i}\r\n                  className=\"d-flex h-auto justify-content-center\"\r\n                >\r\n                  <img\r\n                    src={img}\r\n                    alt=\"\"\r\n                    className=\"product-ex-image\"\r\n                    onClick={() => setIndex(i)}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"col-6 d-flex align-items-center\">\r\n            <img src={imagePath[index]} className=\"product-img\" alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"about\">\r\n          <strong>Abou this Item</strong>\r\n          <span> this item is kaza kaza</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\products\\main-page.js",["308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324"],"import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { productsController } from \"../../controllers/product-page\";\r\nimport \"../../css/products-main.css\";\r\nimport DownChevron from \"../../icons/down-chevron\";\r\nimport Close from \"../../icons/close\";\r\nimport SearchIcon from \"../../icons/search-icon\";\r\nimport laptop1 from \"../../laptop1.jpeg\";\r\nimport { Outlet, Link } from \"react-router-dom\";\r\nimport soulmed from \"../../logo.png\";\r\nimport {\r\n  ReactiveBase,\r\n  RangeSlider,\r\n  SelectedFilters,\r\n  ResultList,\r\n  ReactiveList,\r\n} from \"@appbaseio/reactivesearch\";\r\nimport classNames from \"classnames\";\r\nimport CustomPagination from \"../../inputs/custom-pagination\";\r\nimport NavBar from \"../../components/nav-bar\";\r\nimport PriceRange from \"../../inputs/price-range\";\r\nimport SliderAnimation from \"../../inputs/slider\";\r\n\r\nconst Product = ({ ...props }) => {\r\n  let { productId } = useParams();\r\n  const [productsList, setProductsList] = useState([]);\r\n  const [maxPrice, setMaxPrice] = useState(1);\r\n  const [categorySelected, setCategorySelected] = useState(-1);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    productsController.getProductsCategoryId().then((response) => {\r\n      let id = response.data[0].id;\r\n      productsController\r\n        .getCategories(id)\r\n        .then((res) => {\r\n          console.log(res);\r\n\r\n          setCategories(res.data);\r\n        })\r\n        .then(() => {\r\n          productsController.getProducts().then((pr) => {\r\n            setProductsList(pr.data);\r\n            setLoading(false);\r\n          });\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <NavBar selectedTab=\"products\" />\r\n\r\n      <div className=\"container-fluid row d-flex justify-content-center\">\r\n        <div className=\"col-12 search-bar d-flex align-items-center\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            placeholder=\"Search: Place Holder: Company name, Device name , category of this devices\"\r\n            className=\"product-search-input\"\r\n          />\r\n          <div className=\"search-icon\">\r\n            <SearchIcon />\r\n          </div>\r\n        </div>\r\n        {!loading && (\r\n          <>\r\n            <SliderAnimation\r\n              content={[\r\n                {\r\n                  image: soulmed,\r\n                  title: categories[0].name,\r\n                  desciption: \"Description 1\",\r\n                  button: \"Discover More\",\r\n                },\r\n                {\r\n                  image: laptop1,\r\n                  title: categories[1].name,\r\n                  desciption: \"Description 2\",\r\n                  button: \"Discover More\",\r\n                },\r\n                {\r\n                  image: laptop1,\r\n                  title: categories[2].name,\r\n                  desciption: \"Description 3\",\r\n                  button: \"Discover More\",\r\n                },\r\n              ]}\r\n            />\r\n\r\n            <div className=\"products-categories w-100 col-12 mt-5 d-flex flex-wrap justify-content-center\">\r\n              {categories\r\n                .filter((ctg) =>\r\n                  searchText !== \"\" ? ctg.name.indexOf(searchText) >= 0 : true\r\n                )\r\n                .map((category) => {\r\n                  return (\r\n                    <div\r\n                      onClick={() =>\r\n                        navigate(\"/products/category/\" + category.id)\r\n                      }\r\n                      className=\"category-card mx-2 mt-2 col-4\"\r\n                    >\r\n                      <h4>{category.name}</h4>\r\n                      <br />\r\n                      <div className=\"d-flex flex-wrap\">\r\n                        {productsList\r\n                          .filter((pr) => pr.profession_fk === category.id)\r\n                          .slice(0, 2)\r\n                          .map((product) => {\r\n                            return (\r\n                              <div className=\"d-flex  justify-content-center align-items-center col-6 flex-column\">\r\n                                <img\r\n                                  src={laptop1}\r\n                                  alt=\"\"\r\n                                  className=\"product-image\"\r\n                                />\r\n                                <span>{product.name}</span>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\views\\doctor\\layout.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\nav-bar.js",["325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349"],"import React, { useState } from \"react\";\r\nimport logo from \"../logo.png\";\r\nimport avatar from \"../avatar.jpeg\";\r\nimport { Outlet, Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport classNames from \"classnames\";\r\nimport LoginModel from \"./login-model\";\r\nimport DropDown from \"../inputs/dropdown\";\r\nimport Bell from \"../icons/bell\";\r\n\r\nconst NavBar = ({ ...props }) => {\r\n  const [t, i18n] = useTranslation();\r\n  const [modalLoginShow, setModalLoginShow] = useState(false);\r\n  const [submit, onSubmit] = useState(false);\r\n  const isSubmitted = () => {\r\n    props.onSubmit(true);\r\n    onSubmit(true);\r\n  };\r\n  const logged = false;\r\n  const role = \"patient\";\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n        <LoginModel\r\n          show={modalLoginShow}\r\n          onHide={() => setModalLoginShow(false)}\r\n          submit={() => isSubmitted()}\r\n        />\r\n        <div className=\"container-fluid\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            <img className=\"logo\" src={logo} alt=\"\" />\r\n          </Link>\r\n          \r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarTogglerDemo02\"\r\n            aria-controls=\"navbarTogglerDemo02\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n            <ul\r\n              className={classNames(\"navbar-nav mb-2 mb-lg-0\", {\r\n                \"ms-auto\": i18n.language === \"en\",\r\n                \"me-auto\": i18n.language === \"ar\",\r\n              })}\r\n            >\r\n              <li\r\n                className={classNames(\"nav-item nav-page\", {\r\n                  selected_tab: props.selectedTab === \"donate\",\r\n                })}\r\n              >\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {t(\"donate\")}\r\n                </a>\r\n              </li>\r\n              <li\r\n                className={classNames(\"nav-item nav-page\", {\r\n                  selected_tab: props.selectedTab === \"products\",\r\n                })}\r\n              >\r\n                {\" \"}\r\n                <Link to=\"/products\" className=\"nav-link\">\r\n                  Products\r\n                </Link>\r\n              </li>\r\n\r\n              <li\r\n                className={classNames(\"nav-item nav-page\", {\r\n                  selected_tab: props.selectedTab === \"contact_us\",\r\n                })}\r\n              >\r\n                {\" \"}\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Contact Us\r\n                </a>\r\n              </li>\r\n              <li\r\n                className={classNames(\"nav-item nav-page\", {\r\n                  selected_tab: props.selectedTab === \"help\",\r\n                })}\r\n              >\r\n                {\" \"}\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Help\r\n                </a>\r\n              </li>\r\n              {submit && (\r\n                <li className=\"user d-flex align-items-center\">\r\n                  <Link to=\"/work-with-us\" className=\"nav-link\">\r\n                    Want to work with us?\r\n                  </Link>\r\n                </li>\r\n              )}\r\n              {logged ? (\r\n                <li className=\"nav-item dropdown d-flex flex-column\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle d-flex justify-content-center align-items-center\"\r\n                    href=\"#\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    <img src={avatar} className=\"profile-pic  \" alt=\"\" />\r\n                  </a>\r\n\r\n                  {role === \"patient\" ? (\r\n                    <div\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"navbarDropdown\"\r\n                    >\r\n                      <a className=\"dropdown-item dropdown\" href=\"#\">\r\n                        Dashboard or feed\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Inbox\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Profile Settings\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Account Settings\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Appointment list\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Favorite Doctors\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Purchases\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Logout\r\n                      </a>\r\n                    </div>\r\n                  ) : (\r\n                    <div\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"navbarDropdown\"\r\n                    >\r\n                      <a className=\"dropdown-item dropdown\" href=\"#\">\r\n                        Dashboard\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Go online/offline\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        View my Profile\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Profile Settings\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Account list\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Appointment Doctors\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Appointment list\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Articles\r\n                      </a>\r\n                      <a className=\"dropdown-item\" href=\"#\">\r\n                        Payout Settings\r\n                      </a>\r\n                    </div>\r\n                  )}\r\n                </li>\r\n              ) : (\r\n                <li className=\"user d-flex align-items-center\">\r\n                  <a\r\n                    className=\"nav-link\"\r\n                    onClick={() => setModalLoginShow(true)}\r\n                    href=\"#\"\r\n                  >\r\n                    Login/Register\r\n                  </a>\r\n                </li>\r\n              )}\r\n              <li className=\"user d-flex align-items-center\">\r\n                <DropDown>\r\n                  <div className=\"notification\">\r\n                      <Bell />\r\n                    <div className=\"notification-badge\">5</div>\r\n                  </div>\r\n                </DropDown>\r\n              </li>\r\n\r\n              <li className=\"user d-flex align-items-center\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  onClick={() => i18n.changeLanguage(\"en\")}\r\n                >\r\n                  EN\r\n                </a>\r\n                <span>/</span>\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  onClick={() => i18n.changeLanguage(\"ar\")}\r\n                >\r\n                  AR\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\search-model.js",["350","351","352","353","354","355","356","357","358","359","360","361","362"],"import { useEffect, useState, useRef } from \"react\";\r\nimport logo from \"../logo.png\";\r\nimport RightChevron from \"../icons/right-chevron\";\r\nimport Toggle from \"../icons/toggle\";\r\nimport DownChevron from \"../icons/down-chevron\";\r\nimport SearchIcon from \"../icons/search-icon\";\r\nimport LocationIcon from \"../icons/location-icon\";\r\nimport AroundMe from \"../icons/around-me\";\r\nimport Close from \"../icons/close\";\r\nimport { welcomeConroller } from \"../controllers/welcome-page\";\r\nimport SearchInput from \"../inputs/search-input\";\r\nimport CategoriesDropDown from \"./categories-dropdown\";\r\nimport \"../css/search-model.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { util } from \"../public/util\";\r\n\r\nconst SearchModel = ({ ...props }) => {\r\n  const [searchFilterTextValue, setSearchFilterTextValue] = useState(\r\n    props.searchText ? props.searchText : \"\"\r\n  );\r\n  const [locationFilterTextValue, setLocationFilterTextValue] = useState(\"\");\r\n  const [visibleSearchDropDown, setSearchVisibleDropDown] = useState(false);\r\n  const [visibleLocationDropDown, setLocationVisibleDropDown] = useState(false);\r\n  const [showAroundMe, setShowAroundMe] = useState(false);\r\n  const [myLocationText, setMyLocationText] = useState(\"Around Me\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const [choiceSelected, setChoiceSelected] = useState({\r\n    category_id: props.category_id ? props.category_id : 0,\r\n    profession_id: props.profession_id ? props.profession_id : -1,\r\n  });\r\n\r\n  const [info, setInfo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    welcomeConroller\r\n      .getProfessionByCategory(choiceSelected.category_id)\r\n      .then((response) => {\r\n        let ids = \"\";\r\n        response.data.map((pr, i) => {\r\n          ids += \"profession_fk=\" + pr.id + \"&\";\r\n        });\r\n\r\n        welcomeConroller.getInfoByQuery(ids).then((res) => {\r\n          let list = res.data;\r\n\r\n          if (!props.category_id && parseInt(choiceSelected.profession_id) !== -1) {\r\n            list = list.filter(\r\n              (item) => item.profession_fk === choiceSelected.profession_id\r\n            );\r\n          }\r\n\r\n          setInfo(list);\r\n        });\r\n      });\r\n  }, [choiceSelected.category_id, choiceSelected.profession_id]);\r\n  const navigate = useNavigate();\r\n\r\n  const navigateToAdvancedSearch = (e) => {\r\n    let count = 0;\r\n    let itemViewed = null;\r\n    for (let i = 0; i < info.length; i++) {\r\n      if (util.showItem(info[i], searchFilterTextValue)) {\r\n        count++;\r\n        itemViewed = info[i];\r\n      }\r\n    }\r\n\r\n    if (\r\n      e.key === \"Enter\" &&\r\n      searchFilterTextValue !== \"\" &&\r\n      !props.category_id\r\n    ) {\r\n      if (count === 1) {\r\n        navigate(\"view-profile/\" + itemViewed.id, { replace: true });\r\n      } else {\r\n        navigate(\r\n          \"advanced-search/\" +\r\n            choiceSelected.category_id +\r\n            \"/\" +\r\n            choiceSelected.profession_id +\r\n            \"/\" +\r\n            searchFilterTextValue,\r\n          { replace: false }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-center container-fluid search-model\">\r\n      <CategoriesDropDown\r\n        data={props.categories ? props.categories : []}\r\n        choiceSelected={props.categories ? null : choiceSelected}\r\n        onChange={(choice) => setChoiceSelected(choice)}\r\n      />\r\n\r\n      <SearchInput\r\n        data={info}\r\n        searchText={searchFilterTextValue}\r\n        onGetResults={props.getData ? (data) => props.getData(data) : undefined}\r\n      >\r\n        <div className=\"dropdown-header\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search: Place Holder: Enter Dr name, Profession, Enter Institute name\"\r\n            className=\"search-input\"\r\n            value={searchFilterTextValue}\r\n            onClick={() => setSearchVisibleDropDown(true)}\r\n            onKeyDown={(e) => navigateToAdvancedSearch(e)}\r\n            onChange={(e) => setSearchFilterTextValue(e.target.value)}\r\n          />\r\n\r\n          <div className=\"icon\">\r\n            <SearchIcon />\r\n          </div>\r\n        </div>\r\n      </SearchInput>\r\n\r\n      <SearchInput data={[]}>\r\n        <div className=\"dropdown-header\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder=\"Where ?\"\r\n            onClick={() => setLocationVisibleDropDown(true)}\r\n            onChange={(e) => setLocationFilterTextValue(e.target.value)}\r\n          />\r\n          <div className=\"icon\">\r\n            <LocationIcon />\r\n          </div>\r\n          <div onClick={() => setShowAroundMe(true)} className=\"around-me-icon\">\r\n            <AroundMe />\r\n          </div>\r\n          {showAroundMe && (\r\n            <div className=\"around-me-div d-flex justify-content-between\">\r\n              <div>\r\n                <AroundMe />\r\n              </div>\r\n\r\n              <span>{myLocationText}</span>\r\n              <div\r\n                onClick={() => setShowAroundMe(false)}\r\n                className=\"close-icon\"\r\n              >\r\n                <Close />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </SearchInput>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchModel;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\slider-component.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\quick-access.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\services.js",["363","364","365"],"import React, { useRef, useState } from \"react\";\r\nimport avatar from \"../avatar.jpeg\";\r\nimport appointment from \"../appointment.png\";\r\n\r\nimport \"../css/services.css\";\r\nimport Pagination from \"../inputs/scroll-pagination\";\r\n\r\nconst Services = () => {\r\n  return (\r\n    <div className=\"services\">\r\n      <h1>Find what you need</h1>\r\n      <em>We make it Simple, how it Works?</em>\r\n      <br />\r\n      <br />\r\n      <Pagination>\r\n        <div className=\"d-flex col-4 service-card flex-column align-items-center justify-content-center\">\r\n          <div className=\"card-img d-flex align-items-center justify-content-center\">\r\n            <img src={appointment} alt=\"\" className=\"img-fluid\" />\r\n          </div>\r\n          <br />\r\n          <span className=\"label\">\r\n            Find a doctor and take an appointment physically or Virtally\r\n          </span>\r\n        </div>\r\n        <div className=\"d-flex col-4 service-card flex-column align-items-center justify-content-center\">\r\n          <div className=\"card-img d-flex align-items-center justify-content-center\">\r\n            <img src={appointment} alt=\"\" className=\"img-fluid\" />\r\n          </div>\r\n          <br />\r\n          <span className=\"label\">\r\n            Find a doctor and take an appointment physically or Virtally\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"d-flex col-4 service-card flex-column align-items-center justify-content-center\">\r\n          <div className=\"card-img d-flex align-items-center justify-content-center\">\r\n            <img src={appointment} alt=\"\" className=\"img-fluid\" />\r\n          </div>\r\n          <br />\r\n          <span className=\"label\">\r\n            Find3 a doctor and take an appointment physically or Virtally\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"d-flex col-4 service-card flex-column align-items-center justify-content-center\">\r\n          <div className=\"card-img d-flex align-items-center justify-content-center\">\r\n            <img src={appointment} alt=\"\" className=\"img-fluid\" />\r\n          </div>\r\n          <br />\r\n          <span className=\"label\">\r\n            Find4 a doctor and take an appointment physically or Virtally\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"d-flex col-4 service-card flex-column align-items-center justify-content-center\">\r\n          <div className=\"card-img d-flex align-items-center justify-content-center\">\r\n            <img src={appointment} alt=\"\" className=\"img-fluid\" />\r\n          </div>\r\n          <br />\r\n          <span className=\"label\">\r\n            Find a doctor and take an appointment physically or Virtally\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"d-flex col-4 service-card flex-column align-items-center justify-content-center\">\r\n          <div className=\"card-img d-flex align-items-center justify-content-center\">\r\n            <img src={appointment} alt=\"\" className=\"img-fluid\" />\r\n          </div>\r\n          <br />\r\n          <span className=\"label\">\r\n            Find a doctor and take an appointment physically or Virtally\r\n          </span>\r\n        </div>\r\n      </Pagination>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\login-model.js",["366","367"],"import { useRef, useEffect, useState } from \"react\";\r\nimport \"../css/login-model.css\";\r\nimport RegistrationModal from \"./registration-modal\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst LoginModel = ({ ...props }) => {\r\n  const [modalRegistrationShow, setModalRegistrationShow] = useState(false);\r\n  const [modalLoginShow, setModalLoginShow] = useState(false);\r\n  const socket = useRef();\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"http://localhost:4001\");\r\n  }, []);\r\n\r\n  const Login = () => {\r\n    socket.current.emit(\"newUser\", userEmail);\r\n    setModalLoginShow(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setModalLoginShow(props.show);\r\n  }, [props]);\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const createNewAccount = (e) => {\r\n    e.preventDefault();\r\n    setModalLoginShow(false);\r\n    setModalRegistrationShow(true);\r\n  };\r\n\r\n  const registerSubmit = () => {\r\n    setModalRegistrationShow(false);\r\n    setModalLoginShow(false);\r\n    setSubmitted(true);\r\n    props.submit(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={submitted ? false : modalLoginShow}\r\n        onHide={props.onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            <div className=\"signup-title\">\r\n              <span className=\"title\">Login</span> <br />\r\n            </div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"login-form\">\r\n            <form action=\"\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email address or phone number\"\r\n                  className=\"input full-width\"\r\n                  onChange={(e) => setUserEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  className=\"input full-width\"\r\n                />\r\n              </div>\r\n              <div className=\"login\">\r\n                <a onClick={() => Login()} href=\"#\" className=\"btn\">\r\n                  log in\r\n                </a>\r\n              </div>\r\n              <div className=\"forgot\">\r\n                <a href=\"\">Forgot Password?</a>\r\n              </div>\r\n              <div className=\"create-btn\">\r\n                <button onClick={(e) => createNewAccount(e)} className=\"btn\">\r\n                  create new account\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <RegistrationModal\r\n        onSubmit={() => registerSubmit()}\r\n        show={modalRegistrationShow}\r\n        onHide={() => setModalRegistrationShow(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginModel;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\doctor-appointments.js",["368","369"],"import \"../css/doctor-appointments.css\";\r\nimport avatar from \"../avatar.jpg\";\r\nimport no_appointments from \"../no-appointments.png\";\r\nimport { util } from \"../public/util\";\r\nimport CustomPagination from \"../inputs/custom-pagination\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst DoctorAppointments = ({ ...props }) => {\r\n  return props.appointments.filter((item) =>\r\n    util.sameDay(new Date(item.start), new Date())\r\n  ).length === 0 ? (\r\n    <div className=\"d-flex justify-content-center align-items-center h-auto\">\r\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n        <img src={no_appointments} alt=\"\" className=\"no_appointments\" />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <CustomPagination\r\n      data={props.appointments.filter((item) =>\r\n        util.sameDay(new Date(item.start), new Date())\r\n      )}\r\n    >\r\n      {props.appointments\r\n        .filter((item) => util.sameDay(new Date(item.start), new Date()))\r\n        .map((apmt, i) => {\r\n          return (\r\n            <div className=\"appointment\" key={\"apmt\" + i}>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <img src={avatar} className=\"patient-profile-img\" alt=\"\" />\r\n                  <span className=\"px-3\">patient</span>\r\n                </div>\r\n                <span>{apmt.title}</span>\r\n              </div>\r\n              <div className=\"content d-flex justify-content-center\">\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>\r\n                        <td>Start Time</td>\r\n                        <td>{apmt.start.split(\"T\")[1]}</td>\r\n                      </th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>\r\n                        <td>End Time</td>\r\n                        <td>{apmt.end.split(\"T\")[1]}</td>\r\n                      </th>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </CustomPagination>\r\n  );\r\n};\r\n\r\nexport default DoctorAppointments;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\doctor-recent-activities.js",["370","371","372"],"import \"../css/doctor-recent-activities.css\";\r\nimport avatar from \"../avatar.jpg\";\r\nimport CustomPagination from \"../inputs/custom-pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst DoctorRecentActivities = ({ ...props }) => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    setData(props.appointments.filter((item) => item.status !== 0));\r\n  }, [props.appointments]);\r\n\r\n  const [modal, showModal] = useState(false);\r\n  const [currentActivityModal, setCurrentActivityModal] = useState({\r\n    title: \"Appointment 1\",\r\n    start: \"2021-11-11T11:00:00\",\r\n    end: \"2021-11-11T11:30:00\",\r\n    id: 1,\r\n    doctor_fk: 5,\r\n    patient_fk: 1,\r\n    status: 0,\r\n    location:\"AUBMC\",\r\n    type:\"PHYSICAL\"\r\n  });\r\n  const itemClicked = (id) => {\r\n    console.log(props.appointments.filter((item) => item.id === id)[0])\r\n    setCurrentActivityModal(\r\n      props.appointments.filter((item) => item.id === id)[0]\r\n    );\r\n    showModal(true);\r\n  };\r\n\r\n  const activityModal = (\r\n    <Modal\r\n      show={modal}\r\n      onHide={() => showModal(false)}\r\n      size=\"md\"\r\n      centered\r\n    >\r\n      <Modal.Body>\r\n        \r\n        <div className=\"activity\">\r\n          <div className=\"d-flex flex-column align-items-center\">\r\n            <h3>{currentActivityModal.start.split(\"T\")[0]}</h3>\r\n            <img src={avatar} className=\"patient-profile-img mt-4\" alt=\"\" />\r\n            <span className=\"px-3 patient_name mt-4\">patient</span>\r\n          </div>\r\n          <br />\r\n          <div className=\"d-flex flex-column align-items-start\">\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <th>\r\n                    <td>Appointment Title</td>\r\n                    <td>{currentActivityModal.title}</td>\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th>\r\n                    <td>Start Time</td>\r\n                    <td>{currentActivityModal.start.split(\"T\")[1]}</td>\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th>\r\n                    <td>End Time</td>\r\n                    <td>{currentActivityModal.end.split(\"T\")[1]}</td>\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th>\r\n                    <td>Location</td>\r\n                    <td>{currentActivityModal.location}</td>\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th>\r\n                    <td>Type</td>\r\n                    <td>{currentActivityModal.type}</td>\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th>\r\n                    <td>Status</td>\r\n                    <td\r\n                      className={classNames(\"\", {\r\n                        done: currentActivityModal.status === 1,\r\n                        cancelled: currentActivityModal.status === 2,\r\n                      })}\r\n                    >\r\n                      {currentActivityModal.status === 1 ? \"Done\" : \"Cancelled\"}\r\n                    </td>\r\n                  </th>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n\r\n  return props.appointments.filter((item) => item.status !== 0).length === 0 ? (\r\n    <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n        <h3>No Recent Activities</h3>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"p-4\">\r\n      {modal && activityModal}\r\n      <table className=\"w-100\">\r\n        <tr>\r\n          <th>Appointment Date</th>\r\n          <th>Appointment Patient Name</th>\r\n          <th>Appointment Description</th>\r\n          <th>Appointment Status</th>\r\n          <th>Show more</th>\r\n        </tr>\r\n        {props.appointments\r\n          .filter((item) => item.status !== 0)\r\n          .map((apmt) => {\r\n            return (\r\n              <tr>\r\n                <td>{apmt.start.split(\"T\")[0]}</td>\r\n                <td>Patient</td>\r\n                <td>{apmt.title}</td>\r\n                <td\r\n                  className={classNames(\"\", {\r\n                    done: apmt.status === 1,\r\n                    cancelled: apmt.status === 2,\r\n                  })}\r\n                >\r\n                  {apmt.status === 1 ? (\r\n                    <strong>Done</strong>\r\n                  ) : (\r\n                    <strong>Cancelled</strong>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <a onClick={() => itemClicked(apmt.id)} href=\"#\">\r\n                    Show more\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorRecentActivities;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\footer.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\doctors-advanced-search.js",["373","374","375","376","377"],"import \"../css/doctors-advanced-search.css\";\r\nimport avatar from \"../avatar.jpg\";\r\nimport { util } from \"../public/util\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Calendar from \"../inputs/calendar\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { doctorController } from \"../controllers/doctor\";\r\nimport CustomPagination from \"../inputs/custom-pagination\";\r\n\r\nconst DoctorsAdvancedSearch = ({ ...props }) => {\r\n  const [calendarId, setCalendarId] = useState(5);\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const loadCalendar = (e, id) => {\r\n    e.preventDefault();\r\n    setCalendarId(5);\r\n    setShowCalendar(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container d-flex align-items-center\">\r\n      {showCalendar && (\r\n        <>\r\n          <div className=\"calendar_div d-flex flex-column\">\r\n            <div onClick={() => setShowCalendar(false)} className=\"close_btn\">\r\n              X\r\n            </div>\r\n\r\n            <Calendar allowEdit={true} doctorId={calendarId} />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <CustomPagination data={props.data}>\r\n        {props.data.map((doctorInfo, i) => {\r\n          return (\r\n            <div className=\"doctor-card mx-2 w-25 d-flex align-items-center flex-column\">\r\n              <>\r\n                <img src={avatar} className=\"doctor-image\" alt=\"\" />\r\n                <br />\r\n                <div className=\"d-flex w-100 flex-column align-items-center doctor_info justify-content-center\">\r\n                  <span>{doctorInfo.name}</span>\r\n                  <br />\r\n                  <table className=\"doctor-table\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"w-100\">Appointment Price</td>\r\n                        <td>{doctorInfo.Price}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Work Offices #</td>\r\n                        <td>{doctorInfo.location.length}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <br />\r\n\r\n                <div className=\"d-flex w-100 align-items-center justify-content-between\">\r\n                  <button\r\n                    onClick={() => navigate(\"/view-profile/\" + doctorInfo.id)}\r\n                  >\r\n                    View Profile\r\n                  </button>\r\n\r\n                  <button>Add to Favorites</button>\r\n                </div>\r\n              </>\r\n              <br />\r\n              <div className=\"d-flex w-100 justify-content-center align-items-center\">\r\n                <button onClick={(e) => loadCalendar(e, doctorInfo.id)}>\r\n                  View Calendar\r\n                </button>\r\n              </div>\r\n              <div className=\"d-flex w-100 justify-content-center align-items-center\">\r\n                <button onClick={(e) => window.open(\"http://localhost:3002\", \"_blank\")}>\r\n                  Call\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </CustomPagination>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorsAdvancedSearch;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\controllers\\doctor.js",["378","379"],"import axios from \"axios\";\r\nimport Geocode from \"react-geocode\";\r\nimport configData from \"../configData.json\";\r\n\r\nconst SERVER_URL = \"localhost\";\r\nconst SERVER_PORT = \"5000\";\r\n\r\nconst apiURL = \"http://\" + SERVER_URL + \":\" + SERVER_PORT;\r\n\r\nconst getAllDoctorAppointments = (doctor_id) => {\r\n  return axios\r\n    .get(apiURL + \"/doctors-appointments?doctor_fk=\" + doctor_id)\r\n    .then((response) => {\r\n      let list = response.data;\r\n      for (let i = 0; i < list.length; i++) {\r\n        doctorController.getPatientInfo(list[i].patient_fk).then((res) => {\r\n          list[i][\"patient_name\"] = res.data[0].name;\r\n        });\r\n      }\r\n      return list;\r\n    });\r\n};\r\n\r\nconst getPatientInfo = (patient_id) => {\r\n  return axios.get(apiURL + \"/patients?id=\" + patient_id);\r\n};\r\n\r\nconst getDoctorSchedule = (doctor_id) => {\r\n  return axios.get(apiURL + \"/doctors-schedule?doctor_fk=\" + doctor_id);\r\n};\r\n\r\nconst getDoctorInfo = (doctor_id) => {\r\n  return axios.get(apiURL + \"/info/\" + doctor_id);\r\n};\r\n\r\nconst addDoctorAppointmentSchedule = (body) => {\r\n  return axios.post(apiURL + \"/doctors-schedule\", body).then((reponse) => {\r\n    console.log(reponse.data);\r\n  });\r\n};\r\n\r\nconst addDoctorAppointment = (body) => {\r\n  return axios.post(apiURL + \"/doctors-appointments\", body).then((reponse) => {\r\n    console.log(reponse.data);\r\n  });\r\n};\r\n\r\n\r\n\r\nexport const doctorController = {\r\n  getAllDoctorAppointments,\r\n  addDoctorAppointmentSchedule,\r\n  getPatientInfo,\r\n  getDoctorSchedule,\r\n  getDoctorInfo,\r\n  addDoctorAppointment\r\n};\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\controllers\\product-page.js",["380","381"],"import axios from \"axios\";\r\nimport Geocode from \"react-geocode\";\r\nimport configData from \"../configData.json\";\r\n\r\nconst SERVER_URL = \"localhost\";\r\nconst SERVER_PORT = \"5000\";\r\n\r\nconst apiURL = \"http://\" + SERVER_URL + \":\" + SERVER_PORT;\r\n\r\nconst getProducts = () => {\r\n  return axios.get(apiURL + \"/products\");\r\n};\r\n\r\nconst getProduct = (productId) => {\r\n  return axios.get(apiURL + \"/products?id=\" + productId);\r\n};\r\n\r\nconst getProductsCategoryId =  () => {\r\n  return  axios\r\n    .get(apiURL + \"/categories?name=Products\")\r\n    \r\n\r\n};\r\n\r\nconst getCategoryProduct = async (category_fk) => {\r\n  return await axios.get(apiURL + \"/products?profession_fk=\"+category_fk);\r\n}\r\n\r\nconst getCategories = (category_fk) => {\r\n  return  axios.get(apiURL + \"/profession?category_fk=\"+category_fk);\r\n\r\n}\r\n\r\nconst getCategory = (categoryId) => {\r\n  return  axios.get(apiURL + \"/profession?id=\"+categoryId);\r\n\r\n}\r\n\r\nexport const productsController = { getProducts, getProduct,getProductsCategoryId,getCategoryProduct, getCategories,getCategory };\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\controllers\\welcome-page.js",["382","383","384"],"import axios from \"axios\";\r\nimport Geocode from \"react-geocode\";\r\nimport configData from \"../configData.json\";\r\n\r\nconst SERVER_URL = \"localhost\";\r\nconst SERVER_PORT = \"5000\";\r\n\r\nconst apiURL = \"http://\" + SERVER_URL + \":\" + SERVER_PORT;\r\n\r\nconst getDoctorsData = ({ _start = 0, _length = 10 }) => {\r\n  return axios\r\n    .get(apiURL + \"/doctor?_start=\" + _start + \"&_end=\" + _length)\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n};\r\n\r\nconst getAllCategories = () => {\r\n  return axios.get(apiURL + \"/categories\");\r\n};\r\n\r\nconst getAllProvisions = () => {\r\n  return axios.get(apiURL + \"/provision\");\r\n};\r\n\r\nconst getInfoByQuery = (query) => {\r\n  return axios.get(apiURL + \"/info?\" + query);\r\n};\r\n\r\nconst getProfessionByCategory = (category_id) => {\r\n  return axios.get(\r\n    apiURL +\r\n      \"/profession\" +\r\n      (parseInt(category_id) !== 0 ? \"?category_fk=\" + category_id : \"\")\r\n  );\r\n};\r\n\r\nconst getProfession = (profession_fk) => {\r\n  return axios.get(\r\n    apiURL +\r\n      \"/profession\" +\r\n      (profession_fk !== -1 ? \"?id=\" + profession_fk : \"\")\r\n  );\r\n};\r\n\r\nconst getCategory = (category_id) => {\r\n  return axios.get(\r\n    apiURL + \"/categories\" + (category_id !== 0 ? \"?id=\" + category_id : \"\")\r\n  );\r\n};\r\n\r\nconst getInfoByProfession = (profession_fk) => {\r\n  return axios.get(\r\n    apiURL +\r\n      \"/info\" +\r\n      (profession_fk !== -1 ? \"?profession_fk=\" + profession_fk : \"\")\r\n  );\r\n};\r\n\r\nconst getCurrentLocation = async () => {\r\n  const myLocation = {\r\n    district: \"\",\r\n    state: \"\",\r\n  };\r\n  navigator.geolocation.getCurrentPosition(function (position) {\r\n    const my_location = {\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude,\r\n    };\r\n\r\n    Geocode.fromLatLng(my_location.lat, my_location.lng).then(\r\n      (response) => {\r\n        for (\r\n          var i = 0;\r\n          i < response.results[0].address_components.length;\r\n          i++\r\n        ) {\r\n          for (\r\n            var b = 0;\r\n            b < response.results[0].address_components[i].types.length;\r\n            b++\r\n          ) {\r\n            if (\r\n              response.results[0].address_components[i].types[b] ===\r\n              \"administrative_area_level_2\"\r\n            ) {\r\n              var city = response.results[0].address_components[i];\r\n\r\n              myLocation.district = city.long_name;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        for (\r\n          var i = 0;\r\n          i < response.results[0].address_components.length;\r\n          i++\r\n        ) {\r\n          for (\r\n            var b = 0;\r\n            b < response.results[0].address_components[i].types.length;\r\n            b++\r\n          ) {\r\n            if (\r\n              response.results[0].address_components[i].types[b] ===\r\n              \"administrative_area_level_1\"\r\n            ) {\r\n              var state = response.results[0].address_components[i];\r\n              myLocation.state = state.long_name;\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        return myLocation;\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\nexport const welcomeConroller = {\r\n  getDoctorsData,\r\n  getCurrentLocation,\r\n  getAllCategories,\r\n  getProfessionByCategory,\r\n  getProfession,\r\n  getCategory,\r\n  getInfoByProfession,\r\n  getAllProvisions,\r\n  getInfoByQuery,\r\n};\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\custom-pagination.js",["385","386","387","388"],"import laptop1 from \"../laptop1.jpeg\";\r\nimport \"../css/custom-pagination.css\";\r\nimport LeftChevron from \"../icons/left-chevron\";\r\nimport RightChevron from \"../icons/right-chevron\";\r\nimport { useEffect, useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Outlet, Link } from \"react-router-dom\";\r\n\r\nconst CustomPagination = ({ ...props }) => {\r\n  const maxPageSize = props.length;\r\n  const [pageSize, setPageSize] = useState(3);\r\n  const pageNumbers = Array.from(\r\n    { length: Math.ceil(props.data.length / pageSize) },\r\n    (_, i) => i + 1\r\n  );\r\n  const [dataList, setDataList] = useState(props.children);\r\n\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const next = () => {\r\n    if (pageNumber !== props.children.length / pageSize) {\r\n      setPageNumber(pageNumber + 1);\r\n    }\r\n  };\r\n\r\n  const previous = () => {\r\n    if (pageNumber !== 1) {\r\n      setPageNumber(pageNumber - 1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let list = props.children.slice(\r\n      (pageNumber - 1) * pageSize,\r\n      pageNumber * pageSize\r\n    );\r\n    setDataList(list);\r\n  }, [pageNumber, props.children, pageSize]);\r\n\r\n  const modifyView = (e) => {\r\n    setPageNumber(1);\r\n    setPageSize(parseInt(e.target.value));\r\n  };\r\n  return (\r\n    <div className=\"container-fluid\">\r\n     <div className=\"d-flex justify-content-between\">\r\n     <div className=\"view d-flex align-items-center\">\r\n        <h3>View</h3>\r\n        <select className=\"px-4 mx-4\" onChange={(e) => modifyView(e)}>\r\n          {Array.from({ length: props.data.length }, (_, i) => (i + 1) * 3).map(\r\n            (size, i) => {\r\n              return (\r\n                <option key={i} value={size}>\r\n                  {size}\r\n                </option>\r\n              );\r\n            }\r\n          )}\r\n        </select>\r\n      </div>\r\n      <h3>Total Results: {props.data.length}</h3>\r\n     </div>\r\n      <br/>\r\n      <div className=\"d-flex row justify-content-center\">{dataList}</div>\r\n      <br />\r\n      {pageSize < props.data.length && (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div\r\n            onClick={() => previous()}\r\n            className={classNames(\r\n              \"col-1 d-flex align-items-center justify-content-center\",\r\n              {\r\n                disabled: pageNumber === 1,\r\n              }\r\n            )}\r\n          >\r\n            <LeftChevron />\r\n          </div>\r\n          {pageNumbers.map((i) => {\r\n            return (\r\n              <div\r\n                key={i}\r\n                onClick={() => setPageNumber(i)}\r\n                className={classNames(\"pageNumber\", {\r\n                  pageNumberSelected: i === pageNumber,\r\n                })}\r\n              >\r\n                {i}\r\n              </div>\r\n            );\r\n          })}\r\n          <div\r\n            onClick={() => next()}\r\n            className={classNames(\r\n              \"col-1 d-flex align-items-center justify-content-center\",\r\n              {\r\n                disabled: pageNumber === props.data.length / 3,\r\n              }\r\n            )}\r\n          >\r\n            <RightChevron />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomPagination;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\map.js",["389"],"import React from 'react'\r\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '400px',\r\n  height: '400px'\r\n};\r\n\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -38.523\r\n};\r\n\r\nconst Map = () => {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyD9jw_TyJmM3sbE7hdYwg38ULoz523uSe0\"\r\n  })\r\n\r\n  const [map, setMap] = React.useState(null)\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map)\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null)\r\n  }, [])\r\n\r\n  return isLoaded ? (\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        { /* Child components, such as markers, info windows, etc. */ }\r\n        <></>\r\n      </GoogleMap>\r\n  ) : <></>\r\n}\r\n\r\nexport default Map;","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\slider.js",["390","391"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../css/slider.css\"\r\nimport Slider from \"react-animated-slider\";\r\nimport \"react-animated-slider/build/horizontal.css\";\r\n\r\nconst SliderAnimation = ({ ...props }) => {\r\n\r\n  return (\r\n    <Slider autoplay={3000}>\r\n      {props.content.map((item, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"image-div\"\r\n          style={{ background: `url('${item.image}') no-repeat center`,}}\r\n        >\r\n          <div className=\"center\">\r\n            <h1>{item.title}</h1>\r\n            <p>{item.description}</p>\r\n            <button>{item.button}</button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default SliderAnimation;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\price-range.js",["392"],"import React, { useContext } from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport \"../css/price-range.css\";\r\nconst PriceRange = ({ ...props }) => {\r\n  const [value, setValue] = React.useState([props.min, props.max]);\r\n  \r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.onChange(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center\">\r\n      <Slider\r\n        min={props.min}\r\n        max={props.max}\r\n        step={1}\r\n        value={value}\r\n        className=\"slider\"\r\n        onChange={handleChange}\r\n      />\r\n      <div className=\"d-flex justify-content-center\">\r\n        Between ${value[0]} and ${value[1]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PriceRange;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\public\\util.js",["393","394"],"import { welcomeConroller } from \"../controllers/welcome-page\";\r\nimport moment from \"moment\";\r\n\r\nconst isValidEmail = (email) =>\r\n  // eslint-disable-next-line no-useless-escape\r\n  /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\r\n\r\nconst isValidPassword = (password) => {\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(password);\r\n};\r\n\r\nconst isValidPhoneNumber = (phone_number) => {\r\n  /^[0-9]*$/.test(phone_number);\r\n};\r\n\r\nconst isValidName = (firstName) => {\r\n  /^[A-Za-z]+$/i.test(firstName);\r\n};\r\n\r\nconst showItem = (item, searchText) => {\r\n  let show = false;\r\n  if (searchText === \"\") {\r\n    show = true;\r\n  }\r\n  Object.keys(item).map((innerAttr, index) => {\r\n    if ((item[innerAttr] + \"\").indexOf(searchText) >= 0) {\r\n      show = true;\r\n    }\r\n  });\r\n\r\n  return show;\r\n};\r\n\r\nconst getProfessionAndCategoriesNames = (profession_id) => {\r\n  return welcomeConroller.getInfoByQuery().then((response) => {\r\n    let res = response.data;\r\n    let list = [];\r\n    for (let i = 0; i < res.length; i++) {\r\n      let json = {};\r\n      welcomeConroller.getProfession(res[i].profession_fk).then((pr) => {\r\n        const cfk = pr.data[0].category_fk;\r\n\r\n        welcomeConroller.getCategory(cfk).then((cat) => {\r\n          json[\"profession_name\"] = pr.data[0].name;\r\n          json[\"category_name\"] = cat.data[0].name;\r\n          json[\"userId\"] = res[i].id;\r\n          list.push(json);\r\n          if (i === res.length - 1) {\r\n            return list;\r\n          }\r\n        });\r\n      });\r\n    }\r\n  });\r\n};\r\nconst sameDay = (d1, d2) => {\r\n  return (\r\n    d1.getFullYear() === d2.getFullYear() &&\r\n    d1.getMonth() === d2.getMonth() &&\r\n    d1.getDate() === d2.getDate()\r\n  );\r\n};\r\n\r\nconst getDayDate = (i) => {\r\n  let dt = new Date();\r\n  let currentWeekDay = dt.getDay();\r\n  let lessDays = currentWeekDay === 0 ? 6 : currentWeekDay - 1;\r\n  let wkStart = new Date(new Date(dt).setDate(dt.getDate() - lessDays));\r\n  let wkDay = new Date(new Date(wkStart).setDate(wkStart.getDate() + i));\r\n\r\n  return wkDay;\r\n};\r\n\r\nconst isToday = (someDate) => {\r\n  const today = new Date();\r\n  return (\r\n    someDate.getDate() === today.getDate() &&\r\n    someDate.getMonth() === today.getMonth() &&\r\n    someDate.getFullYear() === today.getFullYear()\r\n  );\r\n};\r\n\r\nconst isOverlapping = (event, events) => {\r\n  for (let i in events) {\r\n    if (\r\n      events[i].id !== event.id &&\r\n      sameDay(new Date(events[i].start), new Date(event.start))\r\n    ) {\r\n      if (\r\n        new Date(event.start) < new Date(events[i].end) &&\r\n        new Date(events[i].start) < new Date(event.end)\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst inSubRange = (event, events) => {\r\n  for (let i in events) {\r\n    if (sameDay(new Date(events[i].start), new Date(event.start))) {\r\n      if (\r\n        new Date(event.start) >= new Date(events[i].start) &&\r\n        new Date(events[i].end) >= new Date(event.end)\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n\r\n\r\nconst getSubrangeIndex = (event, events) => {\r\n  let j = -1;\r\n\r\n  for (let i in events) {\r\n    if (\r\n      events[i].id !== event.id &&\r\n      sameDay(new Date(events[i].start), new Date(event.start))\r\n    ) {\r\n      if (\r\n        new Date(event.start) >= new Date(events[i].start) &&\r\n        new Date(events[i].end) >= new Date(event.end)\r\n      ) {\r\n        j = i;\r\n      }\r\n    }\r\n  }\r\n  return j;\r\n};\r\n\r\nconst isValidTimingInterval = (start, end) => {\r\n  return start < end;\r\n};\r\n\r\nexport const util = {\r\n  sameDay,\r\n  isValidEmail,\r\n  inSubRange,\r\n  isValidName,\r\n  isValidPassword,\r\n  isValidPhoneNumber,\r\n  showItem,\r\n  getProfessionAndCategoriesNames,\r\n  getDayDate,\r\n  isToday,\r\n  isOverlapping,\r\n  isValidTimingInterval,\r\n  getSubrangeIndex,\r\n};\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\calendar.js",["395","396","397","398","399","400","401","402"],"import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\r\nimport { Modal } from \"react-bootstrap\";\r\nimport \"../css/calendar.css\";\r\nimport { format } from \"date-fns\";\r\nimport moment from \"moment\";\r\nimport { util } from \"../public/util\";\r\nimport \"../scripts/calendar\";\r\nimport { doctorController } from \"../controllers/doctor\";\r\n\r\nconst Calendar = ({ ...props }) => {\r\n  const [appointmentText, setAppointmentText] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [datetime, setDatetime] = useState(\"\");\r\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\r\n  const [showEventsListModal, setShowEventsListModal] = useState(false);\r\n  const [scheduleEventSelected, setScheduleEventSelected] = useState(false);\r\n  const [bookAppointmentSelected, setBookAppointmentSelected] = useState(false);\r\n  const [loading, isLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    allFavs: [],\r\n    favObj: {},\r\n    start: \"\",\r\n    end: \"\",\r\n    view: \"timeGridWeek\",\r\n    filledIn: false,\r\n    events: [],\r\n    type: 2,\r\n    patient_fk: 1,\r\n    doctor_fk: props.doctorId,\r\n    location: \"\",\r\n  });\r\n  const setType = (val) => {\r\n    let tempData = data;\r\n    data.type = val;\r\n    setData(tempData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    doctorController.getAllDoctorAppointments(5).then((apptms) => {\r\n      doctorController\r\n        .getDoctorSchedule(5)\r\n        .then((schedule) => {\r\n          let list = schedule.data;\r\n\r\n          for (let j = 0; j < apptms.length; j++) {\r\n            apptms[j][\"backgroundColor\"] =\r\n              apptms[j].type === 0\r\n                ? \"chartreuse\"\r\n                : apptms[j].type === 1\r\n                ? \"coral\"\r\n                : apptms[j].type === 2\r\n                ? \"darkred\"\r\n                : apptms[j].type === 3\r\n                ? \"#ddd\"\r\n                : apptms[j].type === 4\r\n                ? \"pink\"\r\n                : \"\";\r\n          }\r\n\r\n          for (let i = 0; i < list.length; i++) {\r\n            list[i][\"is_schedule\"] = true;\r\n            list[i][\"display\"] = \"background\";\r\n          }\r\n          let tempData = data;\r\n\r\n          if (apptms && schedule.data) {\r\n            tempData.events = [...apptms, ...schedule.data];\r\n          } else {\r\n            if (apptms) {\r\n              tempData.events = [...apptms.data];\r\n            }\r\n            if (schedule.data) {\r\n              tempData.events = [...schedule.data];\r\n            }\r\n          }\r\n\r\n          setData(tempData);\r\n        })\r\n        .then(() => {\r\n          isLoading(false);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  const handleBookApptBtn = () => {\r\n    setBookAppointmentSelected(true);\r\n    setShowAppointmentModal(true);\r\n  };\r\n\r\n  //ask for appointment ouside range\r\n  const createEvent = () => {\r\n    let submitted = true;\r\n    let tempData = data;\r\n    let events = tempData.events;\r\n    let checkEvents = tempData.events.filter((e) => !e.is_schedule);\r\n    let checkSchedule = tempData.events.filter((e) => e.is_schedule);\r\n    let startTime = \"\";\r\n    let endTime = \"\";\r\n    let newEvent = {};\r\n    if (!bookAppointmentSelected) {\r\n      startTime =\r\n        data.view === \"timeGridWeek\" || data.view === \"timeGridDay\"\r\n          ? new Date(tempData.start)\r\n          : tempData.start + \"T\" + datetime;\r\n      endTime =\r\n        data.view === \"timeGridWeek\" || data.view === \"timeGridDay\"\r\n          ? new Date(tempData.start)\r\n          : new Date(tempData.start + \"T\" + datetime);\r\n      endTime.setMinutes(endTime.getMinutes() + 30);\r\n      endTime = moment(endTime).format(\"YYYY-MM-DDTkk:mm\");\r\n      startTime = moment(startTime).format(\"YYYY-MM-DDTkk:mm\");\r\n    } else {\r\n      endTime = new Date(datetime);\r\n      endTime.setMinutes(endTime.getMinutes() + 30);\r\n      endTime = moment(endTime).format(\"YYYY-MM-DDTkk:mm\");\r\n      startTime = moment(datetime).format(\"YYYY-MM-DDTkk:mm\");\r\n    }\r\n    newEvent = {\r\n      title: appointmentText,\r\n      start: startTime,\r\n      end: endTime,\r\n      id: checkEvents.length + 1,\r\n      type: data.type,\r\n      patient_fk: 1,\r\n      status: 0,\r\n    };\r\n\r\n    if (appointmentText === \"\") {\r\n      alert(\"Appointment description couldn't be empty\");\r\n      submitted = false;\r\n    } else if (data.type === 2 || data.type === \"\") {\r\n      alert(\"You should select a type\");\r\n      submitted = false;\r\n    } else if (\r\n      datetime === \"\" &&\r\n      data.view !== \"timeGridWeek\" &&\r\n      data.view !== \"timeGridDay\"\r\n    ) {\r\n      alert(\"You should set a date/time\");\r\n      submitted = false;\r\n    } else if (util.isOverlapping(newEvent, checkEvents)) {\r\n      alert(\"Appointment Overlapping, Try another time\");\r\n      submitted = false;\r\n    } else if (!util.inSubRange(newEvent, checkSchedule)) {\r\n      alert(\"Cannot add at this spot\");\r\n      submitted = false;\r\n    }\r\n\r\n    if (submitted) {\r\n      doctorController.addDoctorAppointment(newEvent).then(() => {\r\n        newEvent[\"backgroundColor\"] =\r\n          data.type === 0\r\n            ? \"chartreuse\"\r\n            : data.type === 1\r\n            ? \"coral\"\r\n            : data.type === 2\r\n            ? \"darkred\"\r\n            : data.type === 3\r\n            ? \"#ddd\"\r\n            : data.type === 4\r\n            ? \"pink\"\r\n            : \"\";\r\n\r\n        events = [...events, newEvent];\r\n        setDatetime(\"\");\r\n        setAppointmentText(\"\");\r\n        tempData.events = events;\r\n        setData(tempData);\r\n        setShowAppointmentModal(false);\r\n        setBookAppointmentSelected(false);\r\n        setScheduleEventSelected(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDateSelect = (selectInfo) => {\r\n    let tempEvent = { start: selectInfo.startStr, end: selectInfo.endStr };\r\n    let checkSchedule = data.events.filter((e) => e.is_schedule);\r\n\r\n    if (props.allowEdit && util.inSubRange(tempEvent, checkSchedule)) {\r\n      let scheduleItem =\r\n        checkSchedule[util.getSubrangeIndex(tempEvent, checkSchedule)];\r\n\r\n      if (scheduleItem.type !== 4 && scheduleItem.type !== 3) {\r\n        let tempData = data;\r\n        tempData.start = selectInfo.startStr;\r\n        tempData.end = selectInfo.endStr;\r\n        tempData.type = parseInt(scheduleItem.type);\r\n        tempData.location = tempData.type === 0 ? scheduleItem.location : \"\";\r\n\r\n        setData(tempData);\r\n        setShowAppointmentModal(true);\r\n      }\r\n\r\n      // setShowEventsListModal(true);\r\n    }\r\n\r\n    if (!props.allowEdit && selectInfo.view.type === \"dayGridMonth\") {\r\n      let tempData = data;\r\n      tempData.start = selectInfo.startStr;\r\n      tempData.end = selectInfo.endStr;\r\n      setData(tempData);\r\n      setShowEventsListModal(true);\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (clickInfo) => {\r\n    if (props.allowEdit && clickInfo.event._def.extendedProps.is_schedule) {\r\n      let tempData = data;\r\n      tempData.start = moment(clickInfo.event._instance.range.start).format(\r\n        \"YYYY-MM-DD\"\r\n      );\r\n      tempData.end = moment(clickInfo.event._instance.range.end).format(\r\n        \"YYYY-MM-DD\"\r\n      );\r\n      tempData.type = clickInfo.event._def.extendedProps.type;\r\n      setData(tempData);\r\n\r\n      setScheduleEventSelected(true);\r\n      setShowAppointmentModal(true);\r\n    }\r\n  };\r\n\r\n  const workSpec = [\r\n    {\r\n      daysOfWeek: [1, 2, 3, 4],\r\n      startTime: \"08:00\",\r\n      endTime: \"13:00\",\r\n    },\r\n    {\r\n      daysOfWeek: [5, 6],\r\n      startTime: \"09:00\",\r\n      endTime: \"14:00\",\r\n      backgroundColor: \"red\",\r\n    },\r\n  ];\r\n\r\n  const workMin = workSpec\r\n    .map((item) => item.startTime)\r\n    .sort()\r\n    .shift();\r\n  const workMax = workSpec\r\n    .map((item) => item.endTime)\r\n    .sort()\r\n    .pop();\r\n  const workDays = [...new Set(workSpec.flatMap((item) => item.daysOfWeek))];\r\n  const hideDays = [...Array(7).keys()].filter(\r\n    (day) => !workDays.includes(day)\r\n  );\r\n\r\n  const hideModal = () => {\r\n    setShowAppointmentModal(false);\r\n    let tempData = data;\r\n    tempData.start = \"\";\r\n    tempData.type = 2;\r\n    setData(tempData);\r\n    setBookAppointmentSelected(false);\r\n  };\r\n\r\n  return (\r\n    !loading && (\r\n      <div className=\"d-flex flex-column\">\r\n        <FullCalendar\r\n          headerToolbar={{\r\n            left: \"prev,next,today\",\r\n            center: \"title\",\r\n            right: \"timeGridWeek,timeGridDay,dayGridMonth\",\r\n          }}\r\n          initialView=\"timeGridWeek\"\r\n          firstDay={1}\r\n          selectable={true}\r\n          height={600}\r\n          select={handleDateSelect}\r\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n          weekends={true}\r\n          events={data.events}\r\n          eventOverlap={true}\r\n          allDaySlot={false}\r\n          aspectRatio={1}\r\n          navLinks={true}\r\n          selectAllow={function (select) {\r\n            return (\r\n              moment(new Date(select.start)).format(\"YYYY-MM-DD\") >=\r\n              moment(new Date()).format(\"YYYY-MM-DD\")\r\n            );\r\n          }}\r\n          eventDidMount={function (event) {\r\n            if (event.event._def.extendedProps.is_schedule) {\r\n              let details = event.event._def.extendedProps;\r\n              let backgroundColor = \"\";\r\n              if (details.type === 0) {\r\n                backgroundColor = \"chartreuse\";\r\n              } else if (details.type === 1) {\r\n                backgroundColor = \"coral\";\r\n              } else if (details.type === 2) {\r\n                backgroundColor = \"darkred\";\r\n              } else {\r\n                if (\r\n                  (details.type === 3 || details.type === 4) &&\r\n                  props.allowEdit\r\n                ) {\r\n                  backgroundColor = \"red\";\r\n                } else {\r\n                  if (details.type === 3) {\r\n                    backgroundColor = \"#ddd\";\r\n                  } else if (details.type === 4) {\r\n                    backgroundColor = \"pink\";\r\n                  }\r\n                }\r\n              }\r\n\r\n              event.el.outerHTML =\r\n                '<div title=\"' +\r\n                (details.type !== 2 ? details.location : \"\") +\r\n                '\" class=\"fc-bg-event fc-event d-flex justify-content-center align-items-center fc-event-start fc-event-end fc-event-today fc-event-future\" style=\"background-color:' +\r\n                backgroundColor +\r\n                ';color:black\">' +\r\n                (details.type !== 2 ? details.location : \"\") +\r\n                \"</div>\";\r\n            }\r\n          }}\r\n        dayCellDidMount = {function (cell) {\r\n          console.log(cell)\r\n        }}\r\n          slotDuration={\"00:30\"}\r\n          //   eventClick={handleEventClick}\r\n        />\r\n        <br />\r\n        {(data.view === \"timeGridWeek\" || data.view === \"timeGridDay\") && (\r\n          <div className=\"d-flex justify-content-between scale_keys\">\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <div className=\"physical_appointment scale_key\"></div>\r\n              <span>Physical Appointment</span>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <div className=\"virtual_appointment scale_key\"></div>\r\n              <span>Virtual Appointment</span>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <div className=\"pv_appointment scale_key\"></div>\r\n              <span>Both</span>\r\n            </div>\r\n            {!props.allowEdit ? (\r\n              <>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                  <div className=\"meeting scale_key\"></div>\r\n                  <span>Meeting</span>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                  <div className=\"break scale_key\"></div>\r\n                  <span>Lunch Break</span>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <div className=\"busy scale_key\"></div>\r\n                <span>Busy</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <br />\r\n        {props.allowEdit && (\r\n          <button\r\n            className=\"w-100 book_appmt\"\r\n            onClick={() => handleBookApptBtn()}\r\n          >\r\n            Book Appointment\r\n          </button>\r\n        )}\r\n\r\n        <Modal\r\n          show={showAppointmentModal}\r\n          onHide={() => hideModal()}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              <div className=\"signup-title\">\r\n                <span className=\"title\">\r\n                  Add Appointment{\" \"}\r\n                  {data.location !== \"\" ? \"at \" + data.location : \"\"}\r\n                  {!bookAppointmentSelected\r\n                    ? \" from \" +\r\n                      moment(data.start).format(\"kk:mm\") +\r\n                      \" until \" +\r\n                      moment(data.end).format(\"kk:mm\")\r\n                    : \"\"}\r\n                </span>{\" \"}\r\n                <br />\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex flex-column\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Appoitment description\"\r\n                className=\"input\"\r\n                onChange={(e) => setAppointmentText(e.target.value)}\r\n              />\r\n\r\n              {(bookAppointmentSelected || data.type === 2) && (\r\n                <div className=\"d-flex justify-content-between align-items-center p-3 input\">\r\n                  <span>Appointment Type</span>\r\n\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <input\r\n                      onChange={() => setType(0)}\r\n                      type=\"radio\"\r\n                      value={0}\r\n                      name=\"apmt_type\"\r\n                    />\r\n                    <label>Physical</label>\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center mx-2\">\r\n                    <input\r\n                      onChange={() => setType(1)}\r\n                      type=\"radio\"\r\n                      value={1}\r\n                      name=\"apmt_type\"\r\n                    />\r\n                    <label>Virtual</label>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <input\r\n                className=\"input\"\r\n                defaultValue={startDate}\r\n                type={\r\n                  bookAppointmentSelected\r\n                    ? \"datetime-local\"\r\n                    : data.view === \"dayGridMonth\"\r\n                    ? \"time\"\r\n                    : \"hidden\"\r\n                }\r\n                step=\"1\"\r\n                onChange={(e) => setDatetime(e.target.value)}\r\n              />\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button onClick={() => createEvent()}>Add</button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          show={showEventsListModal}\r\n          onHide={() => setShowEventsListModal(false)}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              <div className=\"signup-title\">\r\n                <span className=\"title\">\r\n                  All Appointments for{\" \"}\r\n                  {moment(new Date(data.start)).format(\"DD-MM-YYYY\").toString()}\r\n                </span>{\" \"}\r\n                <br />\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {data.events.filter(\r\n              (aptm) =>\r\n                util.sameDay(new Date(aptm.start), new Date(data.start)) &&\r\n                !aptm.is_schedule\r\n            ).length === 0 && <div>No Events on this day</div>}\r\n            {data.events\r\n              .filter(\r\n                (aptm) =>\r\n                  util.sameDay(new Date(aptm.start), new Date(data.start)) &&\r\n                  !aptm.is_schedule\r\n              )\r\n              .map((apmt, i) => {\r\n                return (\r\n                  <div key={\"ap\" + i} className=\"d-flex flex-column\">\r\n                    <span>{apmt.title}</span>\r\n                    <div className=\"d-flex\">\r\n                      <span>Start Time</span>\r\n                      <span>\r\n                        {new Date(apmt.start).getHours()}:\r\n                        {new Date(apmt.start).getMinutes().toString().length ===\r\n                        1\r\n                          ? \"0\" + new Date(apmt.start).getMinutes()\r\n                          : new Date(apmt.start).getMinutes()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex\">\r\n                      <span>End Time</span>\r\n                      <span>\r\n                        {new Date(apmt.end).getHours()}:\r\n                        {new Date(apmt.end).getMinutes().toString().length === 1\r\n                          ? \"0\" + new Date(apmt.end).getMinutes()\r\n                          : new Date(apmt.end).getMinutes()}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\close.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\search-icon.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\down-chevron.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\doctor-side-menu.js",["403"],"import \"../css/doctor-side-menu.css\";\r\nimport RightChevron from \"../icons/right-chevron\";\r\nimport \"../scripts/doctor-side-menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\nconst DoctorSideMenu = ({ ...props }) => {\r\n  return (\r\n    <div className=\"vh-100\" id=\"side-menu\">\r\n      <Link\r\n        to={\"/doctor/dashboard\"}\r\n        className={classNames(\"\", {\r\n          selected_item: props.pageIndex === 0,\r\n        })}\r\n      >\r\n        <div\r\n          className={classNames(\"side-menu-item\", {\r\n            selected_item: props.pageIndex === 0,\r\n          })}\r\n        >\r\n          <span>Home</span>\r\n        </div>\r\n      </Link>\r\n      <div className=\"side-menu-item\">\r\n        <span>Messages</span>\r\n      </div>\r\n      <div className=\"side-menu-item\">\r\n        <span>Appointments History</span>\r\n      </div>\r\n      <Link to={\"/doctor/schedule-settings/\" + props.doctorId}>\r\n        <div\r\n          className={classNames(\"side-menu-item\", {\r\n            selected_item: props.pageIndex === 3,\r\n          })}\r\n        >\r\n          {\" \"}\r\n          <span>Shcedule Settings</span>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className=\"side-menu-item\">\r\n        <span>Invoices</span>\r\n      </div>\r\n      <div className=\"side-menu-item\">\r\n        <span>Manage Payment Methods</span>\r\n      </div>\r\n      <div className=\"side-menu-item\">\r\n        <span>Saved Products</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorSideMenu;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\bell.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\location-icon.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\right-chevron.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\toggle.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\around-me.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\dropdown.js",["404","405","406","407"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { util } from \"../public/util\";\r\n\r\nconst DropDown = ({ ...props }) => {\r\n  const [data, setData] = useState([]);\r\n \r\n\r\n  \r\n\r\n  const [visible, isVisible] = useState(false);\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      if (visible && ref.current && !ref.current.contains(e.target)) {\r\n        isVisible(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [visible]);\r\n\r\n  return (\r\n    <div ref={ref} onClick={() => isVisible(!visible)}>\r\n      {props.children}\r\n      {visible && (\r\n        <ul className=\"search-dropdown rounded col-3 d-flex flex-column \">\r\n          <li>eee</li>\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\search-input.js",["408","409","410"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { util } from \"../public/util\";\r\n\r\nconst SearchInput = ({ ...props }) => {\r\n  const [data, setData] = useState([]);\r\n  const showItem = (item) => {\r\n    return util.showItem(item, props.searchText);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let list = [];\r\n    for (let i = 0; i < props.data.length; i++) {\r\n      if (showItem(props.data[i])) {\r\n        list.push(props.data[i]);\r\n      }\r\n    }\r\n\r\n    setData(list);\r\n  }, [props.data, props.searchText]);\r\n\r\n  useEffect(() => {\r\n    if (props.onGetResults) {\r\n      props.onGetResults(data);\r\n    }\r\n  }, [data]);\r\n\r\n\r\n  const [visible, isVisible] = useState(false);\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      if (visible && ref.current && !ref.current.contains(e.target)) {\r\n        isVisible(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [visible]);\r\n\r\n  return (\r\n    <div ref={ref} onClick={() => isVisible(!visible)} className=\"col-4\">\r\n      {props.children}\r\n      {visible && (\r\n        <ul className=\"search-dropdown rounded col-3 d-flex flex-column \">\r\n          {props.data.map((item, index) => {\r\n            if (showItem(item)) {\r\n              let id = item.id;\r\n              return (\r\n                <Link to={\"/view-profile/\" + id}>\r\n                  <li key={\"item\" + index} className=\"dropdown-content\">\r\n                    {item.name}\r\n                  </li>\r\n                </Link>\r\n              );\r\n            }\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\categories-dropdown.js",["411","412"],"import { useEffect, useState, useRef } from \"react\";\r\nimport { welcomeConroller } from \"../controllers/welcome-page\";\r\nimport RightChevron from \"../icons/right-chevron\";\r\nimport Toggle from \"../icons/toggle\";\r\nimport DownChevron from \"../icons/down-chevron\";\r\nimport classNames from \"classnames\";\r\n\r\nconst CategoriesDropDown = ({ ...props }) => {\r\n  const [visible, isVisible] = useState(false);\r\n  const [categorySelected, setCategorySelected] = useState(\r\n    props.choiceSelected !== null ? props.choiceSelected.category_id : 0\r\n  );\r\n  const [professionselected, setProfessionSelected] = useState(-1);\r\n  const [provCategoriesList, setProvCategoriesList] = useState([]);\r\n  const [headerText, setHeaderText] = useState(\"\");\r\n  const [showHeaderText, setShowHeaderText] = useState(\r\n    props.choiceSelected === null ? false : true\r\n  );\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    if (props.choiceSelected !== null) {\r\n      let header = \"\";\r\n      if (parseInt(props.choiceSelected.category_id) === 0) {\r\n        header = \"All Categories\";\r\n        setHeaderText(header);\r\n        setShowHeaderText(true);\r\n      } else {\r\n        welcomeConroller\r\n          .getCategory(props.choiceSelected.category_id)\r\n          .then((response) => {\r\n            welcomeConroller\r\n              .getProfession(props.choiceSelected.profession_id)\r\n              .then((response2) => {\r\n                header = response.data[0].name + (parseInt(props.choiceSelected.profession_id) >=0 ?  \"/\" + response2.data[0].name : \"\");\r\n                setHeaderText(header);\r\n                setShowHeaderText(true);\r\n              });\r\n          });\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      if (visible && ref.current && !ref.current.contains(e.target)) {\r\n        isVisible(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n    };\r\n  }, [visible]);\r\n\r\n  const selectAll = () => {\r\n    setShowHeaderText(\"\");\r\n    isVisible(false);\r\n    setCategorySelected(0);\r\n    props.onChange({\r\n      category_id: 0,\r\n      profession_id: -1,\r\n    });\r\n  };\r\n\r\n  const modifyHeader = (name, id) => {\r\n    props.onChange({\r\n      category_id: categorySelected,\r\n      profession_id: id,\r\n    });\r\n    setProfessionSelected(id);\r\n    isVisible(false);\r\n    setHeaderText(name);\r\n    setShowHeaderText(true);\r\n  };\r\n\r\n  const modifyCategorySelected = (id, name, provision) => {\r\n    props.onChange({\r\n      category_id: id,\r\n      profession_id: -1,\r\n    });\r\n    setCategorySelected(id);\r\n    setProfessionSelected(-1);\r\n    if (!provision) {\r\n      isVisible(false);\r\n      setHeaderText(name);\r\n      setShowHeaderText(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    welcomeConroller\r\n      .getProfessionByCategory(categorySelected)\r\n      .then((response) => {\r\n        setProvCategoriesList(response.data);\r\n      });\r\n  }, [categorySelected]);\r\n  \r\n\r\n  return (\r\n    <div ref={ref} className=\"col-4\">\r\n      <div\r\n        onClick={() => props.data.length !== 0 && isVisible(!visible)}\r\n        className=\"dropdown-header d-flex justify-content-between\"\r\n      >\r\n        {!showHeaderText && <Toggle />}\r\n        <span className=\"title\">\r\n          {\" \"}\r\n          {showHeaderText ? headerText : \"Categories\"}\r\n        </span>\r\n        <div>{props.data.length !== 0 && <DownChevron />}</div>\r\n      </div>\r\n      {visible && props.choiceSelected === null && (\r\n        <div className=\"d-flex categories-dropdown rounded \">\r\n          <ul className=\"col-5 categories\">\r\n            <li onClick={() => selectAll()} className=\"dropdown-content\">\r\n              <span>All Categories</span>\r\n            </li>\r\n            {props.data.map((category, index) => {\r\n              return (\r\n                <li\r\n                  key={\"category\" + index}\r\n                  onClick={() =>\r\n                    modifyCategorySelected(\r\n                      category.id,\r\n                      category.name,\r\n                      category.provisions\r\n                    )\r\n                  }\r\n                  className={classNames(\"dropdown-content d-flex justify-content-between \", {\r\n                    selected: category.id === categorySelected,\r\n                  })}\r\n                >\r\n                  <span> {category.name}</span>\r\n                  <span> {category.provisions && <RightChevron />}</span>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          {categorySelected !== 0 && (\r\n            <ul className=\"sub-categories col-7 hidden\">\r\n              {provCategoriesList.map((provcategory, index) => {\r\n                return (\r\n                  <li\r\n                    key={\"sub_categrory\" + index}\r\n                    onClick={() =>\r\n                      modifyHeader(provcategory.name, provcategory.id)\r\n                    }\r\n                    className=\"dropdown-content\"\r\n                  >\r\n                    <span> {provcategory.name}</span>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoriesDropDown;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\scroll-pagination.js",["413","414","415"],"import React, { useRef, useState } from \"react\";\r\nimport avatar from \"../avatar.jpeg\";\r\nimport appointment from \"../appointment.png\";\r\n\r\nimport RightChevron from \"../icons/right-chevron\";\r\nimport LeftChevron from \"../icons/left-chevron\";\r\n\r\nconst ScrollPagination = ({ ...props }) => {\r\n  const ref = useRef();\r\n  const scroll = (scrollOffset) => {\r\n    ref.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <div\r\n        className=\"d-flex h-auto  align-items-center justify-content-center\"\r\n        onClick={() => scroll(-500)}\r\n      >\r\n        <LeftChevron />\r\n      </div>\r\n      <div ref={ref} className=\"container d-flex items\">\r\n        {props.children.map((item, i) => {\r\n          return <div key={\"scroll_item\"+i}>{item}</div>;\r\n        })}\r\n      </div>\r\n      <div\r\n        className=\"d-flex h-auto  align-items-center justify-content-center\"\r\n        onClick={() => scroll(500)}\r\n      >\r\n        <RightChevron />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollPagination;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\components\\registration-modal.js",["416","417","418","419","420","421"],"import React, { useState, useRef } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport SelectYears from \"../inputs/select-years\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../css/registration-modal.css\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { util } from \"../public/util\";\r\nimport classNames from \"classnames\";\r\n\r\nconst RegistrationModal = ({ ...props }) => {\r\n  const { register, handleSubmit, reset, formState, watch, control } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const { errors, isDirty, isSubmitting, isValid } = formState;\r\n  const password = useRef();\r\n  password.current = watch(\"password\", \"\");\r\n\r\n  const onSubmitHandler = (data) => {\r\n    props.onSubmit();\r\n    reset();\r\n  };\r\n\r\n  const [termsChecked, setTermsChecked] = useState(false);\r\n  const [showTermsModal, setShowTermsModal] = useState(false);\r\n  const [showCustomDiv, setShowCustomDiv] = useState(false);\r\n  const [gender, setGender] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const options = [\r\n    { value: \"1\", label: 'She: \"Wish her a happy birthday!\"' },\r\n    {\r\n      value: \"2\",\r\n      label: 'He: \"Wish him a happy birthday!\"',\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: 'They: \"Wish them a happy birthday!\"',\r\n    },\r\n  ];\r\n  const setUserGender = (gender) => {\r\n    setGender(gender);\r\n    setShowCustomDiv(false);\r\n  };\r\n  const customHandler = () => {\r\n    setGender(\"custom\");\r\n    setShowCustomDiv(true);\r\n  };\r\n  const modal = (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      show={showTermsModal}\r\n      onHide={() => setShowTermsModal(false)}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          <div className=\"signup-title\">\r\n            <span className=\"title\">Sign Up</span> <br />\r\n            <span className=\"subtitle\">It's quick and easy.</span>\r\n          </div>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body></Modal.Body>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {modal}\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter \">\r\n            <div className=\"signup-title d-flex justify-content-center w-100\">\r\n              <span className=\"title\">Register Now</span> <br />\r\n            </div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"signup-form\">\r\n            <form onSubmit={handleSubmit(onSubmitHandler)}>\r\n              <div className=\"form-group d-flex justify-content-between\">\r\n                {/* <div className=\"flex-column d-flex\">\r\n<select\r\n  placeholder=\"prefix\"\r\n  {...register(\"prefix\", {\r\n    validate: (value) => value !== \"\",\r\n  })}\r\n>\r\n  <option value=\"\" selected disabled>\r\n    Prefix\r\n  </option>\r\n  <option>Mr.</option>\r\n  <option>Ms.</option>\r\n  <option>Mrs.</option>\r\n  <option>Dr.</option>\r\n  <option>Prof.</option>\r\n</select>\r\n<div className=\"error\">\r\n  {errors.prefix && <p>Select a prefix</p>}\r\n</div>\r\n</div>*/}\r\n                <div className=\"form-group d-flex flex-column w-100\">\r\n                  <div className=\"d-flex\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"First Name\"\r\n                      className=\"input full-width\"\r\n                      {...register(\"firstName\", {\r\n                        pattern: /^[A-Za-z]+$/i,\r\n\r\n                        validate: (value) =>\r\n                          value !== \"\" && util.isValidName(value),\r\n                      })}\r\n                    />\r\n                  </div>\r\n                  <div className=\"error\">\r\n                    {errors.firstName?.type === \"pattern\" &&\r\n                      \"Invalid Format, special characters are not allowed\"}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group d-flex flex-column w-100\">\r\n                  <div className=\"d-flex\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Last Name\"\r\n                      className=\"input full-width\"\r\n                      {...register(\"lastName\", {\r\n                        pattern: /^[A-Za-z]+$/i,\r\n\r\n                        validate: (value) =>\r\n                          value !== \"\" && util.isValidName(value),\r\n                      })}\r\n                    />\r\n                  </div>\r\n                  <div className=\"error\">\r\n                    {errors.lastName?.type === \"pattern\" &&\r\n                      \"Invalid Format, special characters are not allowed\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group d-flex flex-column\">\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  className=\"input full-width\"\r\n                  {...register(\"email\", {\r\n                    pattern: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                    validate: (value) =>\r\n                      value !== \"\" && util.isValidEmail(value),\r\n                  })}\r\n                />\r\n                <div className=\"error\">\r\n                  {errors.email?.type === \"pattern\" && \"Invalid email format\"}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group d-flex flex-column\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"New Password\"\r\n                  className=\"input full-width\"\r\n                  {...register(\"password\", {\r\n                    pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\r\n                    validate: (value) =>\r\n                      value !== \"\" && util.isValidPassword(value),\r\n                  })}\r\n                />\r\n                <div className=\"error\">\r\n                  {errors.password?.type === \"pattern\" &&\r\n                    \"Invalid format, please retype password\"}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group d-flex flex-column\">\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  className=\"input full-width\"\r\n                  {...register(\"confirm_password\", {\r\n                    validate: (value) =>\r\n                      value === password.current ||\r\n                      \"The passwords do not match\",\r\n                  })}\r\n                />\r\n                <div className=\"error\">\r\n                  {errors.confirm_password && (\r\n                    <p>{errors.confirm_password.message}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <Controller\r\n                control={control}\r\n                {...register(\"dob\", {\r\n                  validate: (value) =>\r\n                    value !== \"\" &&\r\n                    value !== null &&\r\n                    new Date() - new Date(value) >= 0,\r\n                })}\r\n                render={({ field: { onChange, value } }) => {\r\n                  return (\r\n                    <DatePicker\r\n                      className=\"dob full-width\"\r\n                      onChange={onChange}\r\n                      required\r\n                      selected={value}\r\n                      placeholderText=\"dd/mm/yyy\"\r\n                    />\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <div className=\"form-group d-flex flex-column\">\r\n                <select\r\n                  {...register(\"country\", {\r\n                    validate: (value) => value !== \"\",\r\n                  })}\r\n                  required\r\n                  className=\"w-100\"\r\n                >\r\n                  <option disabled selected value=\"\">\r\n                    Select your country\r\n                  </option>\r\n                  <option>Lebanon</option>\r\n                  <option>US</option>\r\n                  <option>France</option>\r\n                </select>\r\n                <div className=\"error\">\r\n                  {errors.country && <p>Select a country</p>}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group d-flex flex-column\">\r\n                <div className=\"d-flex\">\r\n                  <input type=\"text\" className=\"input\" disabled value=\"+961\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Phone Number\"\r\n                    className=\"input full-width\"\r\n                    {...register(\"phone_number\", {\r\n                      pattern: /^[0-9]*$/,\r\n                      validate: (value) =>\r\n                        value !== \"\" && util.isValidPhoneNumber(value),\r\n                    })}\r\n                  />\r\n                </div>\r\n                <div className=\"error\">\r\n                  {errors.phone_number?.type === \"pattern\" && \"Invalid format\"}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group flex-column\">\r\n                <span>Register as</span>\r\n                <div className=\"d-flex\">\r\n                  <div className=\"form-group form-check\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      value=\"patient\"\r\n                      checked={role === \"patient\"}\r\n\r\n                      onClick = {() => setRole(\"patient\")}\r\n                      {...register(\"role1\", {\r\n                        validate: (value) => role !== \"\",\r\n                      })}\r\n                    />\r\n                    <label>Patient</label>\r\n                  </div>\r\n                  <div className=\"form-group form-check\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      value=\"doctor\"\r\n                      checked={role === \"doctor\"}\r\n\r\n                      onClick = {() => setRole(\"doctor\")}\r\n\r\n                      {...register(\"role2\", {\r\n                        validate: (value) => role !== \"\",\r\n                      })}\r\n                    />\r\n                    <label>Doctor</label>\r\n                  </div>\r\n                  <div className=\"form-group form-check\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      checked={role === \"organization\"}\r\n                      value=\"organization\"\r\n                      onClick = {() => setRole(\"organization\")}\r\n\r\n                      {...register(\"role3\", {\r\n                        validate: (value) => role !== \"\",\r\n                      })}\r\n                    />\r\n                    <label>Organization</label>\r\n                  </div>\r\n                </div>\r\n              \r\n              </div>\r\n\r\n\r\n              <div className=\"form-group flex-column\">\r\n                <span>Gender</span>\r\n                <div className=\"d-flex\">\r\n                  <div className=\"form-group form-check\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      value=\"male\"\r\n                      checked={gender === \"male\"}\r\n                      onClick={() => setUserGender(\"male\")}\r\n                      {...register(\"gender1\", {\r\n                        validate: (value) => gender !== \"\",\r\n                      })}\r\n                    />\r\n                    <label>Male</label>\r\n                  </div>\r\n                  <div className=\"form-group form-check\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      value=\"female\"\r\n                      checked={gender === \"female\"}\r\n                      onClick={() => setUserGender(\"female\")}\r\n                      {...register(\"gender2\", {\r\n                        validate: (value) => gender !== \"\",\r\n                      })}\r\n                    />\r\n                    <label>Female</label>\r\n                  </div>\r\n                  <div className=\"form-group form-check\">\r\n                    <input\r\n                      onClick={() => customHandler()}\r\n                      type=\"radio\"\r\n                      checked={showCustomDiv === true}\r\n                      value=\"custom\"\r\n                    />\r\n                    <label>Custom</label>\r\n                  </div>\r\n                </div>\r\n                {showCustomDiv && (\r\n                  <div className=\"flex-col\">\r\n                    <select\r\n                      {...register(\"custom_select\", {\r\n                        validate: (value) => gender !== \"\" || !showCustomDiv,\r\n                      })}\r\n                      onChange={(e) => setGender(e.target.value)}\r\n                    >\r\n                      <option disabled>Select your pronoun</option>\r\n                      {options.map((option, i) => {\r\n                        return (\r\n                          <option key={option.value} value={option.label}>\r\n                            {option.label}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n\r\n                    <label>Your pronoun is visible to everyone</label>\r\n                    <br />\r\n                    <br />\r\n                    <input\r\n                      className=\"input full-width\"\r\n                      placeholder=\"Gender (optional)\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"d-flex flex-column justify-items-center w-100 p-4\">\r\n                <div className=\"d-flex align-items-center justify-content-center w-full p-3\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value=\"terms_and_conditions\"\r\n                    className={classNames(\"check\", {})}\r\n                    onClick={(e) => setTermsChecked(e.target.checked)}\r\n                    {...register(\"terms_and_conditions\", {\r\n                      validate: (value) => termsChecked === true,\r\n                    })}\r\n                  />\r\n                  <label className=\"ms-2\">\r\n                    I agree with the{\" \"}\r\n                    <a href=\"#\" onClick={() => setShowTermsModal(true)}>\r\n                      {\" \"}\r\n                      terms and condition{\" \"}\r\n                    </a>\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-group flex-column w-full\">\r\n                  <div className=\"d-flex align-items-center justify-content-center w-full\">\r\n                    <input type=\"checkbox\" className=\"check\" />\r\n                    <label className=\"ms-2\">\r\n                      I want to receive <a href=\"#\"> the new letter </a>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"signup-btn d-flex justify-content-center\">\r\n                  <input\r\n                    className=\"btn\"\r\n                    type=\"submit\"\r\n                    disabled={!isDirty || !isValid}\r\n                    value=\"Register\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationModal;\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\left-chevron.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\youtube.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\linkedin.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\phone.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\facebook.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\scripts\\calendar.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\inbox.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\icons\\paper-airplane.js",[],"C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\scripts\\doctor-side-menu.js",["422"],"document.addEventListener(\"DOMContentLoaded\", function (event) {\r\n  if (document.getElementById(\"side-menu\")) {\r\n   // collapse();\r\n  }\r\n\r\n  window.addEventListener(\r\n    \"resize\",\r\n    function (event) {\r\n      if (document.getElementById(\"side-menu\")) {\r\n       // collapse();\r\n      }\r\n    },\r\n    true\r\n  );\r\n\r\n  function collapse() {\r\n    var x = window.matchMedia(\"(max-width: 980px)\");\r\n    if (x.matches) {\r\n      document.getElementById(\"side-menu\").style.width = \"30%\";\r\n    } else {\r\n      document.getElementById(\"side-menu\").style.width = \"30%\";\r\n    }\r\n  }\r\n});\r\n","C:\\Users\\USER\\Desktop\\soulmed-healthcare\\soulmed\\src\\inputs\\select-years.js",[],{"ruleId":"423","severity":1,"message":"424","line":16,"column":8,"nodeType":"425","messageId":"426","endLine":16,"endColumn":13},{"ruleId":"423","severity":1,"message":"427","line":19,"column":10,"nodeType":"425","messageId":"426","endLine":19,"endColumn":11},{"ruleId":"423","severity":1,"message":"428","line":3,"column":8,"nodeType":"425","messageId":"426","endLine":3,"endColumn":18},{"ruleId":"423","severity":1,"message":"429","line":5,"column":8,"nodeType":"425","messageId":"426","endLine":5,"endColumn":19},{"ruleId":"423","severity":1,"message":"430","line":7,"column":8,"nodeType":"425","messageId":"426","endLine":7,"endColumn":23},{"ruleId":"431","severity":1,"message":"432","line":28,"column":32,"nodeType":"433","endLine":28,"endColumn":44},{"ruleId":"423","severity":1,"message":"434","line":9,"column":10,"nodeType":"425","messageId":"426","endLine":9,"endColumn":17},{"ruleId":"423","severity":1,"message":"435","line":9,"column":19,"nodeType":"425","messageId":"426","endLine":9,"endColumn":29},{"ruleId":"423","severity":1,"message":"436","line":2,"column":10,"nodeType":"425","messageId":"426","endLine":2,"endColumn":16},{"ruleId":"423","severity":1,"message":"437","line":7,"column":10,"nodeType":"425","messageId":"426","endLine":7,"endColumn":26},{"ruleId":"423","severity":1,"message":"438","line":8,"column":8,"nodeType":"425","messageId":"426","endLine":8,"endColumn":24},{"ruleId":"423","severity":1,"message":"439","line":17,"column":10,"nodeType":"425","messageId":"426","endLine":17,"endColumn":18},{"ruleId":"440","severity":1,"message":"441","line":31,"column":6,"nodeType":"442","endLine":31,"endColumn":18,"suggestions":"443"},{"ruleId":"423","severity":1,"message":"444","line":4,"column":11,"nodeType":"425","messageId":"426","endLine":4,"endColumn":13},{"ruleId":"423","severity":1,"message":"424","line":9,"column":8,"nodeType":"425","messageId":"426","endLine":9,"endColumn":13},{"ruleId":"440","severity":1,"message":"445","line":45,"column":6,"nodeType":"442","endLine":45,"endColumn":8,"suggestions":"446"},{"ruleId":"423","severity":1,"message":"447","line":101,"column":9,"nodeType":"425","messageId":"426","endLine":101,"endColumn":14},{"ruleId":"423","severity":1,"message":"448","line":188,"column":7,"nodeType":"425","messageId":"426","endLine":188,"endColumn":16},{"ruleId":"423","severity":1,"message":"449","line":2,"column":8,"nodeType":"425","messageId":"426","endLine":2,"endColumn":14},{"ruleId":"423","severity":1,"message":"450","line":5,"column":10,"nodeType":"425","messageId":"426","endLine":5,"endColumn":14},{"ruleId":"423","severity":1,"message":"451","line":13,"column":10,"nodeType":"425","messageId":"426","endLine":13,"endColumn":22},{"ruleId":"423","severity":1,"message":"452","line":14,"column":10,"nodeType":"425","messageId":"426","endLine":14,"endColumn":17},{"ruleId":"423","severity":1,"message":"453","line":5,"column":8,"nodeType":"425","messageId":"426","endLine":5,"endColumn":19},{"ruleId":"423","severity":1,"message":"454","line":6,"column":8,"nodeType":"425","messageId":"426","endLine":6,"endColumn":13},{"ruleId":"423","severity":1,"message":"455","line":8,"column":8,"nodeType":"425","messageId":"426","endLine":8,"endColumn":15},{"ruleId":"423","severity":1,"message":"456","line":9,"column":10,"nodeType":"425","messageId":"426","endLine":9,"endColumn":16},{"ruleId":"423","severity":1,"message":"457","line":9,"column":18,"nodeType":"425","messageId":"426","endLine":9,"endColumn":22},{"ruleId":"423","severity":1,"message":"458","line":10,"column":8,"nodeType":"425","messageId":"426","endLine":10,"endColumn":15},{"ruleId":"423","severity":1,"message":"459","line":12,"column":3,"nodeType":"425","messageId":"426","endLine":12,"endColumn":15},{"ruleId":"423","severity":1,"message":"460","line":13,"column":3,"nodeType":"425","messageId":"426","endLine":13,"endColumn":14},{"ruleId":"423","severity":1,"message":"461","line":14,"column":3,"nodeType":"425","messageId":"426","endLine":14,"endColumn":18},{"ruleId":"423","severity":1,"message":"462","line":15,"column":3,"nodeType":"425","messageId":"426","endLine":15,"endColumn":13},{"ruleId":"423","severity":1,"message":"463","line":16,"column":3,"nodeType":"425","messageId":"426","endLine":16,"endColumn":15},{"ruleId":"423","severity":1,"message":"464","line":18,"column":8,"nodeType":"425","messageId":"426","endLine":18,"endColumn":18},{"ruleId":"423","severity":1,"message":"438","line":19,"column":8,"nodeType":"425","messageId":"426","endLine":19,"endColumn":24},{"ruleId":"423","severity":1,"message":"465","line":21,"column":8,"nodeType":"425","messageId":"426","endLine":21,"endColumn":18},{"ruleId":"423","severity":1,"message":"466","line":22,"column":8,"nodeType":"425","messageId":"426","endLine":22,"endColumn":23},{"ruleId":"423","severity":1,"message":"467","line":26,"column":10,"nodeType":"425","messageId":"426","endLine":26,"endColumn":20},{"ruleId":"423","severity":1,"message":"468","line":29,"column":10,"nodeType":"425","messageId":"426","endLine":29,"endColumn":22},{"ruleId":"440","severity":1,"message":"469","line":43,"column":6,"nodeType":"442","endLine":43,"endColumn":8,"suggestions":"470"},{"ruleId":"440","severity":1,"message":"471","line":19,"column":6,"nodeType":"442","endLine":19,"endColumn":8,"suggestions":"472"},{"ruleId":"423","severity":1,"message":"453","line":5,"column":8,"nodeType":"425","messageId":"426","endLine":5,"endColumn":19},{"ruleId":"423","severity":1,"message":"454","line":6,"column":8,"nodeType":"425","messageId":"426","endLine":6,"endColumn":13},{"ruleId":"423","severity":1,"message":"456","line":9,"column":10,"nodeType":"425","messageId":"426","endLine":9,"endColumn":16},{"ruleId":"423","severity":1,"message":"457","line":9,"column":18,"nodeType":"425","messageId":"426","endLine":9,"endColumn":22},{"ruleId":"423","severity":1,"message":"459","line":12,"column":3,"nodeType":"425","messageId":"426","endLine":12,"endColumn":15},{"ruleId":"423","severity":1,"message":"460","line":13,"column":3,"nodeType":"425","messageId":"426","endLine":13,"endColumn":14},{"ruleId":"423","severity":1,"message":"461","line":14,"column":3,"nodeType":"425","messageId":"426","endLine":14,"endColumn":18},{"ruleId":"423","severity":1,"message":"462","line":15,"column":3,"nodeType":"425","messageId":"426","endLine":15,"endColumn":13},{"ruleId":"423","severity":1,"message":"463","line":16,"column":3,"nodeType":"425","messageId":"426","endLine":16,"endColumn":15},{"ruleId":"423","severity":1,"message":"464","line":18,"column":8,"nodeType":"425","messageId":"426","endLine":18,"endColumn":18},{"ruleId":"423","severity":1,"message":"438","line":19,"column":8,"nodeType":"425","messageId":"426","endLine":19,"endColumn":24},{"ruleId":"423","severity":1,"message":"465","line":21,"column":8,"nodeType":"425","messageId":"426","endLine":21,"endColumn":18},{"ruleId":"423","severity":1,"message":"473","line":25,"column":9,"nodeType":"425","messageId":"426","endLine":25,"endColumn":18},{"ruleId":"423","severity":1,"message":"474","line":27,"column":10,"nodeType":"425","messageId":"426","endLine":27,"endColumn":18},{"ruleId":"423","severity":1,"message":"475","line":27,"column":20,"nodeType":"425","messageId":"426","endLine":27,"endColumn":31},{"ruleId":"423","severity":1,"message":"476","line":28,"column":10,"nodeType":"425","messageId":"426","endLine":28,"endColumn":26},{"ruleId":"423","severity":1,"message":"477","line":28,"column":28,"nodeType":"425","messageId":"426","endLine":28,"endColumn":47},{"ruleId":"423","severity":1,"message":"456","line":4,"column":10,"nodeType":"425","messageId":"426","endLine":4,"endColumn":16},{"ruleId":"431","severity":1,"message":"432","line":58,"column":17,"nodeType":"433","endLine":58,"endColumn":50},{"ruleId":"431","severity":1,"message":"432","line":79,"column":17,"nodeType":"433","endLine":79,"endColumn":50},{"ruleId":"431","severity":1,"message":"432","line":89,"column":17,"nodeType":"433","endLine":89,"endColumn":50},{"ruleId":"431","severity":1,"message":"432","line":102,"column":19,"nodeType":"433","endLine":108,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":117,"column":23,"nodeType":"433","endLine":117,"endColumn":70},{"ruleId":"431","severity":1,"message":"432","line":120,"column":23,"nodeType":"433","endLine":120,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":123,"column":23,"nodeType":"433","endLine":123,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":126,"column":23,"nodeType":"433","endLine":126,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":129,"column":23,"nodeType":"433","endLine":129,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":132,"column":23,"nodeType":"433","endLine":132,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":135,"column":23,"nodeType":"433","endLine":135,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":138,"column":23,"nodeType":"433","endLine":138,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":147,"column":23,"nodeType":"433","endLine":147,"endColumn":70},{"ruleId":"431","severity":1,"message":"432","line":150,"column":23,"nodeType":"433","endLine":150,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":153,"column":23,"nodeType":"433","endLine":153,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":156,"column":23,"nodeType":"433","endLine":156,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":159,"column":23,"nodeType":"433","endLine":159,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":162,"column":23,"nodeType":"433","endLine":162,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":165,"column":23,"nodeType":"433","endLine":165,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":168,"column":23,"nodeType":"433","endLine":168,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":171,"column":23,"nodeType":"433","endLine":171,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":179,"column":19,"nodeType":"433","endLine":183,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":198,"column":17,"nodeType":"433","endLine":202,"endColumn":18},{"ruleId":"431","severity":1,"message":"432","line":206,"column":17,"nodeType":"433","endLine":210,"endColumn":18},{"ruleId":"423","severity":1,"message":"478","line":1,"column":31,"nodeType":"425","messageId":"426","endLine":1,"endColumn":37},{"ruleId":"423","severity":1,"message":"479","line":2,"column":8,"nodeType":"425","messageId":"426","endLine":2,"endColumn":12},{"ruleId":"423","severity":1,"message":"480","line":3,"column":8,"nodeType":"425","messageId":"426","endLine":3,"endColumn":20},{"ruleId":"423","severity":1,"message":"481","line":4,"column":8,"nodeType":"425","messageId":"426","endLine":4,"endColumn":14},{"ruleId":"423","severity":1,"message":"453","line":5,"column":8,"nodeType":"425","messageId":"426","endLine":5,"endColumn":19},{"ruleId":"423","severity":1,"message":"482","line":21,"column":10,"nodeType":"425","messageId":"426","endLine":21,"endColumn":33},{"ruleId":"423","severity":1,"message":"483","line":22,"column":10,"nodeType":"425","messageId":"426","endLine":22,"endColumn":31},{"ruleId":"423","severity":1,"message":"484","line":23,"column":10,"nodeType":"425","messageId":"426","endLine":23,"endColumn":33},{"ruleId":"423","severity":1,"message":"485","line":25,"column":26,"nodeType":"425","messageId":"426","endLine":25,"endColumn":43},{"ruleId":"423","severity":1,"message":"486","line":26,"column":10,"nodeType":"425","messageId":"426","endLine":26,"endColumn":21},{"ruleId":"423","severity":1,"message":"487","line":26,"column":23,"nodeType":"425","messageId":"426","endLine":26,"endColumn":37},{"ruleId":"488","severity":1,"message":"489","line":40,"column":35,"nodeType":"490","messageId":"491","endLine":40,"endColumn":37},{"ruleId":"440","severity":1,"message":"492","line":56,"column":6,"nodeType":"442","endLine":56,"endColumn":64,"suggestions":"493"},{"ruleId":"423","severity":1,"message":"478","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":23},{"ruleId":"423","severity":1,"message":"494","line":1,"column":25,"nodeType":"425","messageId":"426","endLine":1,"endColumn":33},{"ruleId":"423","severity":1,"message":"495","line":2,"column":8,"nodeType":"425","messageId":"426","endLine":2,"endColumn":14},{"ruleId":"431","severity":1,"message":"432","line":76,"column":17,"nodeType":"433","endLine":76,"endColumn":69},{"ruleId":"431","severity":1,"message":"432","line":81,"column":17,"nodeType":"433","endLine":81,"endColumn":28},{"ruleId":"423","severity":1,"message":"496","line":6,"column":10,"nodeType":"425","messageId":"426","endLine":6,"endColumn":19},{"ruleId":"423","severity":1,"message":"494","line":6,"column":21,"nodeType":"425","messageId":"426","endLine":6,"endColumn":29},{"ruleId":"423","severity":1,"message":"438","line":3,"column":8,"nodeType":"425","messageId":"426","endLine":3,"endColumn":24},{"ruleId":"423","severity":1,"message":"497","line":9,"column":10,"nodeType":"425","messageId":"426","endLine":9,"endColumn":14},{"ruleId":"431","severity":1,"message":"432","line":142,"column":19,"nodeType":"433","endLine":142,"endColumn":68},{"ruleId":"423","severity":1,"message":"450","line":3,"column":10,"nodeType":"425","messageId":"426","endLine":3,"endColumn":14},{"ruleId":"423","severity":1,"message":"496","line":4,"column":10,"nodeType":"425","messageId":"426","endLine":4,"endColumn":19},{"ruleId":"423","severity":1,"message":"457","line":5,"column":10,"nodeType":"425","messageId":"426","endLine":5,"endColumn":14},{"ruleId":"423","severity":1,"message":"498","line":7,"column":10,"nodeType":"425","messageId":"426","endLine":7,"endColumn":15},{"ruleId":"423","severity":1,"message":"499","line":8,"column":10,"nodeType":"425","messageId":"426","endLine":8,"endColumn":26},{"ruleId":"423","severity":1,"message":"500","line":2,"column":8,"nodeType":"425","messageId":"426","endLine":2,"endColumn":15},{"ruleId":"423","severity":1,"message":"501","line":3,"column":8,"nodeType":"425","messageId":"426","endLine":3,"endColumn":18},{"ruleId":"423","severity":1,"message":"500","line":2,"column":8,"nodeType":"425","messageId":"426","endLine":2,"endColumn":15},{"ruleId":"423","severity":1,"message":"501","line":3,"column":8,"nodeType":"425","messageId":"426","endLine":3,"endColumn":18},{"ruleId":"423","severity":1,"message":"501","line":3,"column":8,"nodeType":"425","messageId":"426","endLine":3,"endColumn":18},{"ruleId":"502","severity":1,"message":"503","line":96,"column":15,"nodeType":"425","messageId":"504","endLine":96,"endColumn":16},{"ruleId":"502","severity":1,"message":"505","line":101,"column":17,"nodeType":"425","messageId":"504","endLine":101,"endColumn":18},{"ruleId":"423","severity":1,"message":"455","line":1,"column":8,"nodeType":"425","messageId":"426","endLine":1,"endColumn":15},{"ruleId":"423","severity":1,"message":"456","line":7,"column":10,"nodeType":"425","messageId":"426","endLine":7,"endColumn":16},{"ruleId":"423","severity":1,"message":"457","line":7,"column":18,"nodeType":"425","messageId":"426","endLine":7,"endColumn":22},{"ruleId":"423","severity":1,"message":"506","line":10,"column":9,"nodeType":"425","messageId":"426","endLine":10,"endColumn":20},{"ruleId":"423","severity":1,"message":"507","line":20,"column":10,"nodeType":"425","messageId":"426","endLine":20,"endColumn":13},{"ruleId":"423","severity":1,"message":"496","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":26},{"ruleId":"423","severity":1,"message":"494","line":1,"column":28,"nodeType":"425","messageId":"426","endLine":1,"endColumn":36},{"ruleId":"423","severity":1,"message":"508","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":27},{"ruleId":"423","severity":1,"message":"509","line":2,"column":8,"nodeType":"425","messageId":"426","endLine":2,"endColumn":14},{"ruleId":"488","severity":1,"message":"489","line":25,"column":44,"nodeType":"490","messageId":"491","endLine":25,"endColumn":46},{"ruleId":"423","severity":1,"message":"510","line":8,"column":10,"nodeType":"425","messageId":"426","endLine":8,"endColumn":16},{"ruleId":"423","severity":1,"message":"511","line":16,"column":21,"nodeType":"425","messageId":"426","endLine":16,"endColumn":33},{"ruleId":"423","severity":1,"message":"512","line":20,"column":10,"nodeType":"425","messageId":"426","endLine":20,"endColumn":31},{"ruleId":"440","severity":1,"message":"441","line":87,"column":6,"nodeType":"442","endLine":87,"endColumn":8,"suggestions":"513"},{"ruleId":"423","severity":1,"message":"514","line":211,"column":9,"nodeType":"425","messageId":"426","endLine":211,"endColumn":25},{"ruleId":"423","severity":1,"message":"515","line":242,"column":9,"nodeType":"425","messageId":"426","endLine":242,"endColumn":16},{"ruleId":"423","severity":1,"message":"516","line":246,"column":9,"nodeType":"425","messageId":"426","endLine":246,"endColumn":16},{"ruleId":"423","severity":1,"message":"517","line":251,"column":9,"nodeType":"425","messageId":"426","endLine":251,"endColumn":17},{"ruleId":"423","severity":1,"message":"480","line":2,"column":8,"nodeType":"425","messageId":"426","endLine":2,"endColumn":20},{"ruleId":"423","severity":1,"message":"457","line":2,"column":10,"nodeType":"425","messageId":"426","endLine":2,"endColumn":14},{"ruleId":"423","severity":1,"message":"450","line":3,"column":10,"nodeType":"425","messageId":"426","endLine":3,"endColumn":14},{"ruleId":"423","severity":1,"message":"497","line":6,"column":10,"nodeType":"425","messageId":"426","endLine":6,"endColumn":14},{"ruleId":"423","severity":1,"message":"518","line":6,"column":16,"nodeType":"425","messageId":"426","endLine":6,"endColumn":23},{"ruleId":"440","severity":1,"message":"519","line":20,"column":6,"nodeType":"442","endLine":20,"endColumn":36,"suggestions":"520"},{"ruleId":"440","severity":1,"message":"521","line":26,"column":6,"nodeType":"442","endLine":26,"endColumn":12,"suggestions":"522"},{"ruleId":"488","severity":1,"message":"523","line":50,"column":41,"nodeType":"490","messageId":"524","endLine":50,"endColumn":43},{"ruleId":"423","severity":1,"message":"525","line":13,"column":10,"nodeType":"425","messageId":"426","endLine":13,"endColumn":28},{"ruleId":"440","severity":1,"message":"526","line":41,"column":6,"nodeType":"442","endLine":41,"endColumn":8,"suggestions":"527"},{"ruleId":"423","severity":1,"message":"494","line":1,"column":25,"nodeType":"425","messageId":"426","endLine":1,"endColumn":33},{"ruleId":"423","severity":1,"message":"495","line":2,"column":8,"nodeType":"425","messageId":"426","endLine":2,"endColumn":14},{"ruleId":"423","severity":1,"message":"528","line":3,"column":8,"nodeType":"425","messageId":"426","endLine":3,"endColumn":19},{"ruleId":"423","severity":1,"message":"529","line":3,"column":8,"nodeType":"425","messageId":"426","endLine":3,"endColumn":19},{"ruleId":"423","severity":1,"message":"530","line":9,"column":10,"nodeType":"425","messageId":"426","endLine":9,"endColumn":21},{"ruleId":"423","severity":1,"message":"531","line":10,"column":13,"nodeType":"425","messageId":"426","endLine":10,"endColumn":16},{"ruleId":"423","severity":1,"message":"532","line":18,"column":28,"nodeType":"425","messageId":"426","endLine":18,"endColumn":40},{"ruleId":"431","severity":1,"message":"432","line":394,"column":21,"nodeType":"433","endLine":394,"endColumn":73},{"ruleId":"431","severity":1,"message":"432","line":404,"column":41,"nodeType":"433","endLine":404,"endColumn":53},{"ruleId":"423","severity":1,"message":"533","line":16,"column":12,"nodeType":"425","messageId":"426","endLine":16,"endColumn":20},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'t' is assigned a value but never used.","'LoginModel' is defined but never used.","'SearchModal' is defined but never used.","'SliderComponent' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'mapData' is assigned a value but never used.","'setMapData' is assigned a value but never used.","'Navbar' is defined but never used.","'welcomeConroller' is defined but never used.","'CustomPagination' is defined but never used.","'cityText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["534"],"'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["535"],"'count' is assigned a value but never used.","'increment' is assigned a value but never used.","'NavBar' is defined but never used.","'util' is defined but never used.","'scheduleList' is assigned a value but never used.","'loading' is assigned a value but never used.","'DownChevron' is defined but never used.","'Close' is defined but never used.","'laptop1' is defined but never used.","'Outlet' is defined but never used.","'Link' is defined but never used.","'soulmed' is defined but never used.","'ReactiveBase' is defined but never used.","'RangeSlider' is defined but never used.","'SelectedFilters' is defined but never used.","'ResultList' is defined but never used.","'ReactiveList' is defined but never used.","'classNames' is defined but never used.","'PriceRange' is defined but never used.","'SliderAnimation' is defined but never used.","'searchText' is assigned a value but never used.","'productsList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'categoryId'. Either include it or remove the dependency array.",["536"],"React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["537"],"'productId' is assigned a value but never used.","'maxPrice' is assigned a value but never used.","'setMaxPrice' is assigned a value but never used.","'categorySelected' is assigned a value but never used.","'setCategorySelected' is assigned a value but never used.","'useRef' is defined but never used.","'logo' is defined but never used.","'RightChevron' is defined but never used.","'Toggle' is defined but never used.","'locationFilterTextValue' is assigned a value but never used.","'visibleSearchDropDown' is assigned a value but never used.","'visibleLocationDropDown' is assigned a value but never used.","'setMyLocationText' is assigned a value but never used.","'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.category_id'. Either include it or remove the dependency array.",["538"],"'useState' is defined but never used.","'avatar' is defined but never used.","'useEffect' is defined but never used.","'data' is assigned a value but never used.","'Modal' is defined but never used.","'doctorController' is defined but never used.","'Geocode' is defined but never used.","'configData' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'b' is already defined.","'maxPageSize' is assigned a value but never used.","'map' is assigned a value but never used.","'useContext' is defined but never used.","'moment' is defined but never used.","'format' is defined but never used.","'setStartDate' is assigned a value but never used.","'scheduleEventSelected' is assigned a value but never used.",["539"],"'handleEventClick' is assigned a value but never used.","'workMin' is assigned a value but never used.","'workMax' is assigned a value but never used.","'hideDays' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showItem'. Either include it or remove the dependency array.",["540"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["541"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'professionselected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.choiceSelected'. Either include it or remove the dependency array.",["542"],"'appointment' is defined but never used.","'SelectYears' is defined but never used.","'yupResolver' is defined but never used.","'yup' is defined but never used.","'isSubmitting' is assigned a value but never used.","'collapse' is defined but never used.",{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},"Update the dependencies array to be: [data, priceValue]",{"range":"561","text":"562"},"Update the dependencies array to be: [id]",{"range":"563","text":"564"},"Update the dependencies array to be: [categoryId]",{"range":"565","text":"566"},"Update the dependencies array to be: [productId]",{"range":"567","text":"568"},"Update the dependencies array to be: [choiceSelected.category_id, choiceSelected.profession_id, props.category_id]",{"range":"569","text":"570"},"Update the dependencies array to be: [data]",{"range":"571","text":"572"},"Update the dependencies array to be: [props.data, props.searchText, showItem]",{"range":"573","text":"574"},"Update the dependencies array to be: [data, props]",{"range":"575","text":"576"},"Update the dependencies array to be: [props.choiceSelected]",{"range":"577","text":"578"},[1074,1086],"[data, priceValue]",[1390,1392],"[id]",[1500,1502],"[categoryId]",[733,735],"[productId]",[2175,2233],"[choiceSelected.category_id, choiceSelected.profession_id, props.category_id]",[2870,2872],"[data]",[519,549],"[props.data, props.searchText, showItem]",[652,658],"[data, props]",[1662,1664],"[props.choiceSelected]"]